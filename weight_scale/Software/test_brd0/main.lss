
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800100  0000172c  000017c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000172c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000019  008001a0  008001a0  00001860  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00001860  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001874  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  000018b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f74  00000000  00000000  0000192c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000105b  00000000  00000000  000038a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000069c  00000000  00000000  000048fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000424  00000000  00000000  00004f98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000891  00000000  00000000  000053bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fa6  00000000  00000000  00005c4d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00006bf3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b9 00 	jmp	0x172	; 0x172 <__dtors_end>
       4:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
       8:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
       c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      10:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      14:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      18:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      1c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      20:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      24:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      28:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      2c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      30:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      34:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__vector_13>
      38:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      3c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      40:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      44:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      48:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      4c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__vector_19>
      50:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      54:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      58:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      5c:	2f 03       	fmul	r18, r23
      5e:	31 03       	mulsu	r19, r17
      60:	38 03       	fmul	r19, r16
      62:	3a 03       	fmul	r19, r18
      64:	46 03       	mulsu	r20, r22
      66:	57 03       	mulsu	r21, r23
      68:	63 03       	mulsu	r22, r19
      6a:	6a 03       	fmul	r22, r18

0000006c <__trampolines_end>:
      6c:	6e 61       	ori	r22, 0x1E	; 30
      6e:	6e 00       	.word	0x006e	; ????

00000070 <__c.2332>:
      70:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      80:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      90:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      a0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      b0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      c0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      d0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      e0:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      f0:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     100:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     110:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     120:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     130:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     140:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     150:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     160:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016e <__ctors_start>:
     16e:	7a 04       	cpc	r7, r10

00000170 <__ctors_end>:
     170:	83 04       	cpc	r8, r3

00000172 <__dtors_end>:
     172:	11 24       	eor	r1, r1
     174:	1f be       	out	0x3f, r1	; 63
     176:	cf ef       	ldi	r28, 0xFF	; 255
     178:	d4 e0       	ldi	r29, 0x04	; 4
     17a:	de bf       	out	0x3e, r29	; 62
     17c:	cd bf       	out	0x3d, r28	; 61

0000017e <__do_copy_data>:
     17e:	11 e0       	ldi	r17, 0x01	; 1
     180:	a0 e0       	ldi	r26, 0x00	; 0
     182:	b1 e0       	ldi	r27, 0x01	; 1
     184:	ec e2       	ldi	r30, 0x2C	; 44
     186:	f7 e1       	ldi	r31, 0x17	; 23
     188:	02 c0       	rjmp	.+4      	; 0x18e <__do_copy_data+0x10>
     18a:	05 90       	lpm	r0, Z+
     18c:	0d 92       	st	X+, r0
     18e:	a0 3a       	cpi	r26, 0xA0	; 160
     190:	b1 07       	cpc	r27, r17
     192:	d9 f7       	brne	.-10     	; 0x18a <__do_copy_data+0xc>

00000194 <__do_clear_bss>:
     194:	21 e0       	ldi	r18, 0x01	; 1
     196:	a0 ea       	ldi	r26, 0xA0	; 160
     198:	b1 e0       	ldi	r27, 0x01	; 1
     19a:	01 c0       	rjmp	.+2      	; 0x19e <.do_clear_bss_start>

0000019c <.do_clear_bss_loop>:
     19c:	1d 92       	st	X+, r1

0000019e <.do_clear_bss_start>:
     19e:	a9 3b       	cpi	r26, 0xB9	; 185
     1a0:	b2 07       	cpc	r27, r18
     1a2:	e1 f7       	brne	.-8      	; 0x19c <.do_clear_bss_loop>

000001a4 <__do_global_ctors>:
     1a4:	10 e0       	ldi	r17, 0x00	; 0
     1a6:	c8 eb       	ldi	r28, 0xB8	; 184
     1a8:	d0 e0       	ldi	r29, 0x00	; 0
     1aa:	04 c0       	rjmp	.+8      	; 0x1b4 <__do_global_ctors+0x10>
     1ac:	21 97       	sbiw	r28, 0x01	; 1
     1ae:	fe 01       	movw	r30, r28
     1b0:	0e 94 56 09 	call	0x12ac	; 0x12ac <__tablejump2__>
     1b4:	c7 3b       	cpi	r28, 0xB7	; 183
     1b6:	d1 07       	cpc	r29, r17
     1b8:	c9 f7       	brne	.-14     	; 0x1ac <__do_global_ctors+0x8>
     1ba:	0e 94 2c 04 	call	0x858	; 0x858 <main>
     1be:	0c 94 89 0b 	jmp	0x1712	; 0x1712 <__do_global_dtors>

000001c2 <__bad_interrupt>:
     1c2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c6 <__vector_19>:
}




ISR(ADC_vect){
     1c6:	1f 92       	push	r1
     1c8:	0f 92       	push	r0
     1ca:	0f b6       	in	r0, 0x3f	; 63
     1cc:	0f 92       	push	r0
     1ce:	11 24       	eor	r1, r1
     1d0:	cf 92       	push	r12
     1d2:	df 92       	push	r13
     1d4:	ef 92       	push	r14
     1d6:	ff 92       	push	r15
     1d8:	2f 93       	push	r18
     1da:	3f 93       	push	r19
     1dc:	4f 93       	push	r20
     1de:	5f 93       	push	r21
     1e0:	6f 93       	push	r22
     1e2:	7f 93       	push	r23
     1e4:	8f 93       	push	r24
     1e6:	9f 93       	push	r25
     1e8:	af 93       	push	r26
     1ea:	bf 93       	push	r27
     1ec:	ef 93       	push	r30
     1ee:	ff 93       	push	r31
	uint16_t ADC_val=ADCL;
     1f0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7fc078>
	ADC_val+=ADCH<<8;
     1f4:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7fc079>
	//CNT=1.1*1024/Vref
	//Vref=1.1*1024/CNT
	//1.02578
	//1.0127
	//
	uint32_t cnt=(109875.0)/ADC_val;// in tens of mV, i.e. 330=>3.30V
     1f8:	70 e0       	ldi	r23, 0x00	; 0
     1fa:	76 2f       	mov	r23, r22
     1fc:	66 27       	eor	r22, r22
     1fe:	68 0f       	add	r22, r24
     200:	71 1d       	adc	r23, r1
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	0e 94 a9 08 	call	0x1152	; 0x1152 <__floatunsisf>
     20a:	9b 01       	movw	r18, r22
     20c:	ac 01       	movw	r20, r24
     20e:	60 e8       	ldi	r22, 0x80	; 128
     210:	79 e9       	ldi	r23, 0x99	; 153
     212:	86 ed       	ldi	r24, 0xD6	; 214
     214:	97 e4       	ldi	r25, 0x47	; 71
     216:	0e 94 08 08 	call	0x1010	; 0x1010 <__divsf3>
     21a:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <__fixunssfsi>
     21e:	6b 01       	movw	r12, r22
     220:	7c 01       	movw	r14, r24
	myLCD.setNb(cnt,3);
     222:	43 e0       	ldi	r20, 0x03	; 3
     224:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN3LCD5setNbElh>
	if(cnt>=BATT_FULL){
     228:	8f e4       	ldi	r24, 0x4F	; 79
     22a:	c8 16       	cp	r12, r24
     22c:	81 e0       	ldi	r24, 0x01	; 1
     22e:	d8 06       	cpc	r13, r24
     230:	e1 04       	cpc	r14, r1
     232:	f1 04       	cpc	r15, r1
     234:	10 f0       	brcs	.+4      	; 0x23a <__EEPROM_REGION_LENGTH__+0x3a>
		myLCD.setBattery(LCD::FULL);
     236:	87 e0       	ldi	r24, 0x07	; 7
     238:	1c c0       	rjmp	.+56     	; 0x272 <__EEPROM_REGION_LENGTH__+0x72>
	}else if(cnt>=BATT_TWOBAR){
     23a:	85 e4       	ldi	r24, 0x45	; 69
     23c:	c8 16       	cp	r12, r24
     23e:	81 e0       	ldi	r24, 0x01	; 1
     240:	d8 06       	cpc	r13, r24
     242:	e1 04       	cpc	r14, r1
     244:	f1 04       	cpc	r15, r1
     246:	10 f0       	brcs	.+4      	; 0x24c <__EEPROM_REGION_LENGTH__+0x4c>
		myLCD.setBattery(LCD::TWOBAR);
     248:	86 e0       	ldi	r24, 0x06	; 6
     24a:	13 c0       	rjmp	.+38     	; 0x272 <__EEPROM_REGION_LENGTH__+0x72>
	}else if(cnt>=BATT_ONEBAR){
     24c:	8b e3       	ldi	r24, 0x3B	; 59
     24e:	c8 16       	cp	r12, r24
     250:	81 e0       	ldi	r24, 0x01	; 1
     252:	d8 06       	cpc	r13, r24
     254:	e1 04       	cpc	r14, r1
     256:	f1 04       	cpc	r15, r1
     258:	10 f0       	brcs	.+4      	; 0x25e <__EEPROM_REGION_LENGTH__+0x5e>
		myLCD.setBattery(LCD::ONEBAR);
     25a:	85 e0       	ldi	r24, 0x05	; 5
     25c:	0a c0       	rjmp	.+20     	; 0x272 <__EEPROM_REGION_LENGTH__+0x72>
	}else if(cnt>=BATT_EMPTY){
     25e:	81 e3       	ldi	r24, 0x31	; 49
     260:	c8 16       	cp	r12, r24
     262:	81 e0       	ldi	r24, 0x01	; 1
     264:	d8 06       	cpc	r13, r24
     266:	e1 04       	cpc	r14, r1
     268:	f1 04       	cpc	r15, r1
     26a:	10 f0       	brcs	.+4      	; 0x270 <__EEPROM_REGION_LENGTH__+0x70>
		myLCD.setBattery(LCD::EMPTY);
     26c:	81 e0       	ldi	r24, 0x01	; 1
     26e:	01 c0       	rjmp	.+2      	; 0x272 <__EEPROM_REGION_LENGTH__+0x72>
	}else{
		myLCD.setBattery(LCD::NONE);
     270:	80 e0       	ldi	r24, 0x00	; 0
     272:	0e 94 23 03 	call	0x646	; 0x646 <_ZN3LCD10setBatteryENS_7BatteryE>
		//we should shutdown here
	}
}
     276:	ff 91       	pop	r31
     278:	ef 91       	pop	r30
     27a:	bf 91       	pop	r27
     27c:	af 91       	pop	r26
     27e:	9f 91       	pop	r25
     280:	8f 91       	pop	r24
     282:	7f 91       	pop	r23
     284:	6f 91       	pop	r22
     286:	5f 91       	pop	r21
     288:	4f 91       	pop	r20
     28a:	3f 91       	pop	r19
     28c:	2f 91       	pop	r18
     28e:	ff 90       	pop	r15
     290:	ef 90       	pop	r14
     292:	df 90       	pop	r13
     294:	cf 90       	pop	r12
     296:	0f 90       	pop	r0
     298:	0f be       	out	0x3f, r0	; 63
     29a:	0f 90       	pop	r0
     29c:	1f 90       	pop	r1
     29e:	18 95       	reti

000002a0 <__vector_13>:

ISR(USART0_RX_vect){
     2a0:	1f 92       	push	r1
     2a2:	0f 92       	push	r0
     2a4:	0f b6       	in	r0, 0x3f	; 63
     2a6:	0f 92       	push	r0
     2a8:	11 24       	eor	r1, r1
     2aa:	2f 93       	push	r18
     2ac:	3f 93       	push	r19
     2ae:	4f 93       	push	r20
     2b0:	5f 93       	push	r21
     2b2:	6f 93       	push	r22
     2b4:	7f 93       	push	r23
     2b6:	8f 93       	push	r24
     2b8:	9f 93       	push	r25
     2ba:	af 93       	push	r26
     2bc:	bf 93       	push	r27
     2be:	ef 93       	push	r30
     2c0:	ff 93       	push	r31
	uart.receive();
     2c2:	83 ea       	ldi	r24, 0xA3	; 163
     2c4:	91 e0       	ldi	r25, 0x01	; 1
     2c6:	0e 94 2b 02 	call	0x456	; 0x456 <_ZN4UART7receiveEv>
}
     2ca:	ff 91       	pop	r31
     2cc:	ef 91       	pop	r30
     2ce:	bf 91       	pop	r27
     2d0:	af 91       	pop	r26
     2d2:	9f 91       	pop	r25
     2d4:	8f 91       	pop	r24
     2d6:	7f 91       	pop	r23
     2d8:	6f 91       	pop	r22
     2da:	5f 91       	pop	r21
     2dc:	4f 91       	pop	r20
     2de:	3f 91       	pop	r19
     2e0:	2f 91       	pop	r18
     2e2:	0f 90       	pop	r0
     2e4:	0f be       	out	0x3f, r0	; 63
     2e6:	0f 90       	pop	r0
     2e8:	1f 90       	pop	r1
     2ea:	18 95       	reti

000002ec <_ZN4UARTC1Ev>:
#include "UART.h"

UART::UART(void){
     2ec:	dc 01       	movw	r26, r24
    UBRR0H = (UART_BAUD>>8);
     2ee:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
    UBRR0L = UART_BAUD;	// set baud rate
     2f2:	83 e3       	ldi	r24, 0x33	; 51
     2f4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
    UCSR0B|= (1<<TXEN0)|(1<<RXEN0);	// enable receiver and transmitter
     2f8:	e1 ec       	ldi	r30, 0xC1	; 193
     2fa:	f0 e0       	ldi	r31, 0x00	; 0
     2fc:	90 81       	ld	r25, Z
     2fe:	98 61       	ori	r25, 0x18	; 24
     300:	90 83       	st	Z, r25
    // Async. mode, 8bit, No parity, 1 stop bit
    UCSR0C = (0<<UMSEL0)|(0<<UPM00)|(0<<USBS0)|(3<<UCSZ00)|(0<<UCPOL0);
     302:	86 e0       	ldi	r24, 0x06	; 6
     304:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7fc0c2>
    
    dataReady=false;
     308:	54 96       	adiw	r26, 0x14	; 20
     30a:	1c 92       	st	X, r1
     30c:	54 97       	sbiw	r26, 0x14	; 20
    data_len=0;
     30e:	55 96       	adiw	r26, 0x15	; 21
     310:	1c 92       	st	X, r1
    
    UCSR0B |= (1<<RXCIE0);
     312:	80 81       	ld	r24, Z
     314:	80 68       	ori	r24, 0x80	; 128
     316:	80 83       	st	Z, r24
     318:	08 95       	ret

0000031a <_ZN4UARTD1Ev>:
}

UART::~UART(void){
     31a:	08 95       	ret

0000031c <_ZN4UART8sendByteEc>:
    
}

void UART::sendByte(char b){
    while (!( UCSR0A & (1<<UDRE0)));	// wait while register is free
     31c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
     320:	85 ff       	sbrs	r24, 5
     322:	fc cf       	rjmp	.-8      	; 0x31c <_ZN4UART8sendByteEc>
    UDR0 = b;	// load data in the register
     324:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     328:	08 95       	ret

0000032a <_ZN4UART10sendStringEPc>:
}

void UART::sendString(char* data){
     32a:	0f 93       	push	r16
     32c:	1f 93       	push	r17
     32e:	cf 93       	push	r28
     330:	df 93       	push	r29
     332:	8c 01       	movw	r16, r24
     334:	eb 01       	movw	r28, r22
    while(*data>0){
     336:	69 91       	ld	r22, Y+
     338:	66 23       	and	r22, r22
     33a:	21 f0       	breq	.+8      	; 0x344 <_ZN4UART10sendStringEPc+0x1a>
		sendByte(*data++);
     33c:	c8 01       	movw	r24, r16
     33e:	0e 94 8e 01 	call	0x31c	; 0x31c <_ZN4UART8sendByteEc>
    while (!( UCSR0A & (1<<UDRE0)));	// wait while register is free
    UDR0 = b;	// load data in the register
}

void UART::sendString(char* data){
    while(*data>0){
     342:	f9 cf       	rjmp	.-14     	; 0x336 <_ZN4UART10sendStringEPc+0xc>
		sendByte(*data++);
	}
}
     344:	df 91       	pop	r29
     346:	cf 91       	pop	r28
     348:	1f 91       	pop	r17
     34a:	0f 91       	pop	r16
     34c:	08 95       	ret

0000034e <_ZN4UART10sendStringEPcb>:

void UART::sendString(char* data, bool lineReturn){
     34e:	ff 92       	push	r15
     350:	0f 93       	push	r16
     352:	1f 93       	push	r17
     354:	cf 93       	push	r28
     356:	df 93       	push	r29
     358:	8c 01       	movw	r16, r24
     35a:	f4 2e       	mov	r15, r20
     35c:	eb 01       	movw	r28, r22
    while(*data>0){
     35e:	69 91       	ld	r22, Y+
     360:	66 23       	and	r22, r22
     362:	21 f0       	breq	.+8      	; 0x36c <_ZN4UART10sendStringEPcb+0x1e>
		sendByte(*data++);
     364:	c8 01       	movw	r24, r16
     366:	0e 94 8e 01 	call	0x31c	; 0x31c <_ZN4UART8sendByteEc>
		sendByte(*data++);
	}
}

void UART::sendString(char* data, bool lineReturn){
    while(*data>0){
     36a:	f9 cf       	rjmp	.-14     	; 0x35e <_ZN4UART10sendStringEPcb+0x10>
		sendByte(*data++);
	}
    if(lineReturn){
     36c:	ff 20       	and	r15, r15
     36e:	69 f0       	breq	.+26     	; 0x38a <_ZN4UART10sendStringEPcb+0x3c>
        sendByte('\r');
     370:	6d e0       	ldi	r22, 0x0D	; 13
     372:	c8 01       	movw	r24, r16
     374:	0e 94 8e 01 	call	0x31c	; 0x31c <_ZN4UART8sendByteEc>
        sendByte('\n');
     378:	6a e0       	ldi	r22, 0x0A	; 10
     37a:	c8 01       	movw	r24, r16
    }
}
     37c:	df 91       	pop	r29
     37e:	cf 91       	pop	r28
     380:	1f 91       	pop	r17
     382:	0f 91       	pop	r16
     384:	ff 90       	pop	r15
    while(*data>0){
		sendByte(*data++);
	}
    if(lineReturn){
        sendByte('\r');
        sendByte('\n');
     386:	0c 94 8e 01 	jmp	0x31c	; 0x31c <_ZN4UART8sendByteEc>
    }
}
     38a:	df 91       	pop	r29
     38c:	cf 91       	pop	r28
     38e:	1f 91       	pop	r17
     390:	0f 91       	pop	r16
     392:	ff 90       	pop	r15
     394:	08 95       	ret

00000396 <_ZN4UART6sendNbElhb>:

void UART::sendNb(int32_t nb,uint8_t base, bool lineReturn){
     396:	ef 92       	push	r14
     398:	ff 92       	push	r15
     39a:	0f 93       	push	r16
     39c:	cf 93       	push	r28
     39e:	df 93       	push	r29
     3a0:	cd b7       	in	r28, 0x3d	; 61
     3a2:	de b7       	in	r29, 0x3e	; 62
     3a4:	a3 97       	sbiw	r28, 0x23	; 35
     3a6:	0f b6       	in	r0, 0x3f	; 63
     3a8:	f8 94       	cli
     3aa:	de bf       	out	0x3e, r29	; 62
     3ac:	0f be       	out	0x3f, r0	; 63
     3ae:	cd bf       	out	0x3d, r28	; 61
     3b0:	7c 01       	movw	r14, r24
     3b2:	cb 01       	movw	r24, r22
     3b4:	ba 01       	movw	r22, r20
extern __inline__ __ATTR_GNU_INLINE__
char *ltoa (long __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__ltoa (long, char *, int);
	return __ltoa (__val, __s, __radix);
     3b6:	30 e0       	ldi	r19, 0x00	; 0
     3b8:	ae 01       	movw	r20, r28
     3ba:	4f 5f       	subi	r20, 0xFF	; 255
     3bc:	5f 4f       	sbci	r21, 0xFF	; 255
     3be:	0e 94 a3 0a 	call	0x1546	; 0x1546 <ltoa>
    char buffer [35];
    ltoa(nb,buffer,base);
    sendString(buffer,lineReturn);
     3c2:	40 2f       	mov	r20, r16
     3c4:	be 01       	movw	r22, r28
     3c6:	6f 5f       	subi	r22, 0xFF	; 255
     3c8:	7f 4f       	sbci	r23, 0xFF	; 255
     3ca:	c7 01       	movw	r24, r14
     3cc:	0e 94 a7 01 	call	0x34e	; 0x34e <_ZN4UART10sendStringEPcb>
}
     3d0:	a3 96       	adiw	r28, 0x23	; 35
     3d2:	0f b6       	in	r0, 0x3f	; 63
     3d4:	f8 94       	cli
     3d6:	de bf       	out	0x3e, r29	; 62
     3d8:	0f be       	out	0x3f, r0	; 63
     3da:	cd bf       	out	0x3d, r28	; 61
     3dc:	df 91       	pop	r29
     3de:	cf 91       	pop	r28
     3e0:	0f 91       	pop	r16
     3e2:	ff 90       	pop	r15
     3e4:	ef 90       	pop	r14
     3e6:	08 95       	ret

000003e8 <_ZN4UART6sendNbEl>:

void UART::sendNb(int32_t nb){
     3e8:	0f 93       	push	r16
     3ea:	1f 93       	push	r17
     3ec:	cf 93       	push	r28
     3ee:	df 93       	push	r29
     3f0:	cd b7       	in	r28, 0x3d	; 61
     3f2:	de b7       	in	r29, 0x3e	; 62
     3f4:	2c 97       	sbiw	r28, 0x0c	; 12
     3f6:	0f b6       	in	r0, 0x3f	; 63
     3f8:	f8 94       	cli
     3fa:	de bf       	out	0x3e, r29	; 62
     3fc:	0f be       	out	0x3f, r0	; 63
     3fe:	cd bf       	out	0x3d, r28	; 61
     400:	8c 01       	movw	r16, r24
     402:	cb 01       	movw	r24, r22
     404:	ba 01       	movw	r22, r20
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ltoa_ncheck (long, char *, unsigned char);
	return __ltoa_ncheck (__val, __s, __radix);
     406:	2a e0       	ldi	r18, 0x0A	; 10
     408:	ae 01       	movw	r20, r28
     40a:	4f 5f       	subi	r20, 0xFF	; 255
     40c:	5f 4f       	sbci	r21, 0xFF	; 255
     40e:	0e 94 ae 0a 	call	0x155c	; 0x155c <__ltoa_ncheck>
    char buffer [12];//32 bits in decimal is 4milions, 10 digits
    ltoa(nb,buffer,10);
    sendString(buffer);
     412:	be 01       	movw	r22, r28
     414:	6f 5f       	subi	r22, 0xFF	; 255
     416:	7f 4f       	sbci	r23, 0xFF	; 255
     418:	c8 01       	movw	r24, r16
     41a:	0e 94 95 01 	call	0x32a	; 0x32a <_ZN4UART10sendStringEPc>
    sendByte('\r');
     41e:	6d e0       	ldi	r22, 0x0D	; 13
     420:	c8 01       	movw	r24, r16
     422:	0e 94 8e 01 	call	0x31c	; 0x31c <_ZN4UART8sendByteEc>
    sendByte('\n');
     426:	6a e0       	ldi	r22, 0x0A	; 10
     428:	c8 01       	movw	r24, r16
     42a:	0e 94 8e 01 	call	0x31c	; 0x31c <_ZN4UART8sendByteEc>
}
     42e:	2c 96       	adiw	r28, 0x0c	; 12
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	f8 94       	cli
     434:	de bf       	out	0x3e, r29	; 62
     436:	0f be       	out	0x3f, r0	; 63
     438:	cd bf       	out	0x3d, r28	; 61
     43a:	df 91       	pop	r29
     43c:	cf 91       	pop	r28
     43e:	1f 91       	pop	r17
     440:	0f 91       	pop	r16
     442:	08 95       	ret

00000444 <_ZN4UART7getCharEv>:

char UART::getChar(void){
     444:	cf 93       	push	r28
    //while(!(UCSRA) & (1<<RXC));	// wait while data is being received
    char d=UDR0;
     446:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
#ifdef UART_ECHO
    sendByte(d);
     44a:	6c 2f       	mov	r22, r28
     44c:	0e 94 8e 01 	call	0x31c	; 0x31c <_ZN4UART8sendByteEc>
#endif
    return d;	// return 8-bit data
}
     450:	8c 2f       	mov	r24, r28
     452:	cf 91       	pop	r28
     454:	08 95       	ret

00000456 <_ZN4UART7receiveEv>:

void UART::receive(void){
     456:	cf 93       	push	r28
     458:	df 93       	push	r29
     45a:	ec 01       	movw	r28, r24
    char d=getChar();
     45c:	0e 94 22 02 	call	0x444	; 0x444 <_ZN4UART7getCharEv>
    if(d=='\r'){
     460:	8d 30       	cpi	r24, 0x0D	; 13
     462:	19 f4       	brne	.+6      	; 0x46a <_ZN4UART7receiveEv+0x14>
        dataReady=true;
     464:	81 e0       	ldi	r24, 0x01	; 1
     466:	8c 8b       	std	Y+20, r24	; 0x14
     468:	07 c0       	rjmp	.+14     	; 0x478 <_ZN4UART7receiveEv+0x22>
    }else{    
        data[data_len]=d;
     46a:	9d 89       	ldd	r25, Y+21	; 0x15
     46c:	fe 01       	movw	r30, r28
     46e:	e9 0f       	add	r30, r25
     470:	f1 1d       	adc	r31, r1
     472:	80 83       	st	Z, r24
        data_len++;
     474:	9f 5f       	subi	r25, 0xFF	; 255
     476:	9d 8b       	std	Y+21, r25	; 0x15
    }
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	08 95       	ret

0000047e <_ZN4UART8retrieveEv>:

char* UART::retrieve(void){
    data[data_len]='\0';
     47e:	fc 01       	movw	r30, r24
     480:	25 89       	ldd	r18, Z+21	; 0x15
     482:	e2 0f       	add	r30, r18
     484:	f1 1d       	adc	r31, r1
     486:	10 82       	st	Z, r1
    dataReady=false;
     488:	fc 01       	movw	r30, r24
     48a:	14 8a       	std	Z+20, r1	; 0x14
    data_len=0;
     48c:	15 8a       	std	Z+21, r1	; 0x15
    return data;
}
     48e:	08 95       	ret

00000490 <_ZN4UART15isDataAvailableEv>:

bool UART::isDataAvailable(void){
     490:	fc 01       	movw	r30, r24
    return dataReady & (data_len!=0);
     492:	91 e0       	ldi	r25, 0x01	; 1
     494:	85 89       	ldd	r24, Z+21	; 0x15
     496:	81 11       	cpse	r24, r1
     498:	01 c0       	rjmp	.+2      	; 0x49c <_ZN4UART15isDataAvailableEv+0xc>
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	84 89       	ldd	r24, Z+20	; 0x14
}
     49e:	89 23       	and	r24, r25
     4a0:	08 95       	ret

000004a2 <_ZN3LCDC1Eb>:
		{{4,4,4,5,5,5,5},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}},
		{{2,2,2,3,3,3,3},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}},
		{{0,0,0,1,1,1,1},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}}};

LCD::LCD(bool lowP){
	DDRB |= (1 << PB0);
     4a2:	20 9a       	sbi	0x04, 0	; 4
	PORTB |= (1<<PB0);
     4a4:	28 9a       	sbi	0x05, 0	; 5
	LCDCRB|=(1<<LCDMUX1)|(1<<LCDMUX0);
     4a6:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     4aa:	80 63       	ori	r24, 0x30	; 48
     4ac:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	
	if(lowP){
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD1)|(1<<LCDCD0); // prescaler 4096, division factor 32 & K=8 for duty 1/4
     4b0:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
LCD::LCD(bool lowP){
	DDRB |= (1 << PB0);
	PORTB |= (1<<PB0);
	LCDCRB|=(1<<LCDMUX1)|(1<<LCDMUX0);
	
	if(lowP){
     4b4:	66 23       	and	r22, r22
     4b6:	61 f0       	breq	.+24     	; 0x4d0 <_ZN3LCDC1Eb+0x2e>
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD1)|(1<<LCDCD0); // prescaler 4096, division factor 32 & K=8 for duty 1/4
     4b8:	87 67       	ori	r24, 0x77	; 119
     4ba:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCDCCR|=(1<<LCDDC0);// 2.6V 70µs
     4be:	80 91 e7 00 	lds	r24, 0x00E7	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     4c2:	80 62       	ori	r24, 0x20	; 32
     4c4:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
		LCDCRA|=(1<<LCDEN)|(1<<LCDAB);//LCDAB=low power waveform
     4c8:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     4cc:	80 6c       	ori	r24, 0xC0	; 192
     4ce:	0b c0       	rjmp	.+22     	; 0x4e6 <_ZN3LCDC1Eb+0x44>
	}else{
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD2)|(1<<LCDCD0); // prescaler 4096, division factor 8 & K=8 for duty 1/4
     4d0:	85 67       	ori	r24, 0x75	; 117
     4d2:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCDCCR|=(1<<LCDCC1)|(1<<LCDCC2)|(1<<LCDDC1);//2.7V 1150µs
     4d6:	80 91 e7 00 	lds	r24, 0x00E7	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     4da:	86 64       	ori	r24, 0x46	; 70
     4dc:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
		LCDCRA|=(1<<LCDEN);
     4e0:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     4e4:	80 68       	ori	r24, 0x80	; 128
     4e6:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     4ea:	08 95       	ret

000004ec <_ZN3LCDD1Ev>:
	}
}

LCD::~LCD() {
	LCDCRA|=(1<<LCDBL);
     4ec:	e4 ee       	ldi	r30, 0xE4	; 228
     4ee:	f0 e0       	ldi	r31, 0x00	; 0
     4f0:	80 81       	ld	r24, Z
     4f2:	81 60       	ori	r24, 0x01	; 1
     4f4:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4f6:	2f ef       	ldi	r18, 0xFF	; 255
     4f8:	84 e3       	ldi	r24, 0x34	; 52
     4fa:	9c e0       	ldi	r25, 0x0C	; 12
     4fc:	21 50       	subi	r18, 0x01	; 1
     4fe:	80 40       	sbci	r24, 0x00	; 0
     500:	90 40       	sbci	r25, 0x00	; 0
     502:	e1 f7       	brne	.-8      	; 0x4fc <_ZN3LCDD1Ev+0x10>
     504:	00 c0       	rjmp	.+0      	; 0x506 <__stack+0x7>
     506:	00 00       	nop
	_delay_ms(500);
	LCDCRA&=~(1<<LCDEN);
     508:	80 81       	ld	r24, Z
     50a:	8f 77       	andi	r24, 0x7F	; 127
     50c:	80 83       	st	Z, r24
     50e:	08 95       	ret

00000510 <_ZN3LCD8setDigitEhh>:
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
     510:	cf 92       	push	r12
     512:	df 92       	push	r13
     514:	ef 92       	push	r14
     516:	ff 92       	push	r15
     518:	0f 93       	push	r16
     51a:	1f 93       	push	r17
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
     520:	e6 2f       	mov	r30, r22
     522:	f0 e0       	ldi	r31, 0x00	; 0
     524:	e2 58       	subi	r30, 0x82	; 130
     526:	fe 4f       	sbci	r31, 0xFE	; 254
     528:	40 81       	ld	r20, Z
     52a:	50 e0       	ldi	r21, 0x00	; 0
     52c:	25 e1       	ldi	r18, 0x15	; 21
     52e:	82 9f       	mul	r24, r18
     530:	c0 01       	movw	r24, r0
     532:	11 24       	eor	r1, r1
     534:	80 50       	subi	r24, 0x00	; 0
     536:	9f 4f       	sbci	r25, 0xFF	; 255
     538:	fc 01       	movw	r30, r24
     53a:	20 e0       	ldi	r18, 0x00	; 0
     53c:	30 e0       	ldi	r19, 0x00	; 0
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     53e:	c1 e0       	ldi	r28, 0x01	; 1
     540:	d0 e0       	ldi	r29, 0x00	; 0
     542:	6c 01       	movw	r12, r24
     544:	c2 0e       	add	r12, r18
     546:	d3 1e       	adc	r13, r19
	LCDCRA&=~(1<<LCDEN);
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
     548:	ba 01       	movw	r22, r20
     54a:	02 2e       	mov	r0, r18
     54c:	02 c0       	rjmp	.+4      	; 0x552 <_ZN3LCD8setDigitEhh+0x42>
     54e:	75 95       	asr	r23
     550:	67 95       	ror	r22
     552:	0a 94       	dec	r0
     554:	e2 f7       	brpl	.-8      	; 0x54e <_ZN3LCD8setDigitEhh+0x3e>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     556:	07 81       	ldd	r16, Z+7	; 0x07
     558:	10 85       	ldd	r17, Z+8	; 0x08
     55a:	d8 01       	movw	r26, r16
	LCDCRA&=~(1<<LCDEN);
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
     55c:	60 ff       	sbrs	r22, 0
     55e:	0b c0       	rjmp	.+22     	; 0x576 <_ZN3LCD8setDigitEhh+0x66>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     560:	fc 90       	ld	r15, X
     562:	be 01       	movw	r22, r28
     564:	d6 01       	movw	r26, r12
     566:	0c 90       	ld	r0, X
     568:	02 c0       	rjmp	.+4      	; 0x56e <_ZN3LCD8setDigitEhh+0x5e>
     56a:	66 0f       	add	r22, r22
     56c:	77 1f       	adc	r23, r23
     56e:	0a 94       	dec	r0
     570:	e2 f7       	brpl	.-8      	; 0x56a <_ZN3LCD8setDigitEhh+0x5a>
     572:	6f 29       	or	r22, r15
     574:	0c c0       	rjmp	.+24     	; 0x58e <_ZN3LCD8setDigitEhh+0x7e>
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     576:	7c 91       	ld	r23, X
     578:	7e 01       	movw	r14, r28
     57a:	d6 01       	movw	r26, r12
     57c:	0c 90       	ld	r0, X
     57e:	02 c0       	rjmp	.+4      	; 0x584 <_ZN3LCD8setDigitEhh+0x74>
     580:	ee 0c       	add	r14, r14
     582:	ff 1c       	adc	r15, r15
     584:	0a 94       	dec	r0
     586:	e2 f7       	brpl	.-8      	; 0x580 <_ZN3LCD8setDigitEhh+0x70>
     588:	6e 2d       	mov	r22, r14
     58a:	60 95       	com	r22
     58c:	67 23       	and	r22, r23
     58e:	d8 01       	movw	r26, r16
     590:	6c 93       	st	X, r22
     592:	2f 5f       	subi	r18, 0xFF	; 255
     594:	3f 4f       	sbci	r19, 0xFF	; 255
     596:	32 96       	adiw	r30, 0x02	; 2
	_delay_ms(500);
	LCDCRA&=~(1<<LCDEN);
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
     598:	28 30       	cpi	r18, 0x08	; 8
     59a:	31 05       	cpc	r19, r1
     59c:	91 f6       	brne	.-92     	; 0x542 <_ZN3LCD8setDigitEhh+0x32>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
		}	
	}
}
     59e:	df 91       	pop	r29
     5a0:	cf 91       	pop	r28
     5a2:	1f 91       	pop	r17
     5a4:	0f 91       	pop	r16
     5a6:	ff 90       	pop	r15
     5a8:	ef 90       	pop	r14
     5aa:	df 90       	pop	r13
     5ac:	cf 90       	pop	r12
     5ae:	08 95       	ret

000005b0 <_ZN3LCD8setDigitEhNS_6SymbolE>:

void LCD::setDigit(uint8_t dig, Symbol sy) {
     5b0:	cf 92       	push	r12
     5b2:	df 92       	push	r13
     5b4:	ef 92       	push	r14
     5b6:	ff 92       	push	r15
     5b8:	0f 93       	push	r16
     5ba:	1f 93       	push	r17
     5bc:	cf 93       	push	r28
     5be:	df 93       	push	r29
     5c0:	25 e1       	ldi	r18, 0x15	; 21
     5c2:	82 9f       	mul	r24, r18
     5c4:	c0 01       	movw	r24, r0
     5c6:	11 24       	eor	r1, r1
     5c8:	80 50       	subi	r24, 0x00	; 0
     5ca:	9f 4f       	sbci	r25, 0xFF	; 255
     5cc:	fc 01       	movw	r30, r24
     5ce:	20 e0       	ldi	r18, 0x00	; 0
     5d0:	30 e0       	ldi	r19, 0x00	; 0
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
     5d2:	70 e0       	ldi	r23, 0x00	; 0
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     5d4:	c1 e0       	ldi	r28, 0x01	; 1
     5d6:	d0 e0       	ldi	r29, 0x00	; 0
     5d8:	6c 01       	movw	r12, r24
     5da:	c2 0e       	add	r12, r18
     5dc:	d3 1e       	adc	r13, r19
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
     5de:	ab 01       	movw	r20, r22
     5e0:	02 2e       	mov	r0, r18
     5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <_ZN3LCD8setDigitEhNS_6SymbolE+0x38>
     5e4:	55 95       	asr	r21
     5e6:	47 95       	ror	r20
     5e8:	0a 94       	dec	r0
     5ea:	e2 f7       	brpl	.-8      	; 0x5e4 <_ZN3LCD8setDigitEhNS_6SymbolE+0x34>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     5ec:	07 81       	ldd	r16, Z+7	; 0x07
     5ee:	10 85       	ldd	r17, Z+8	; 0x08
     5f0:	d8 01       	movw	r26, r16
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
     5f2:	40 ff       	sbrs	r20, 0
     5f4:	0b c0       	rjmp	.+22     	; 0x60c <_ZN3LCD8setDigitEhNS_6SymbolE+0x5c>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     5f6:	fc 90       	ld	r15, X
     5f8:	ae 01       	movw	r20, r28
     5fa:	d6 01       	movw	r26, r12
     5fc:	0c 90       	ld	r0, X
     5fe:	02 c0       	rjmp	.+4      	; 0x604 <_ZN3LCD8setDigitEhNS_6SymbolE+0x54>
     600:	44 0f       	add	r20, r20
     602:	55 1f       	adc	r21, r21
     604:	0a 94       	dec	r0
     606:	e2 f7       	brpl	.-8      	; 0x600 <_ZN3LCD8setDigitEhNS_6SymbolE+0x50>
     608:	4f 29       	or	r20, r15
     60a:	0c c0       	rjmp	.+24     	; 0x624 <_ZN3LCD8setDigitEhNS_6SymbolE+0x74>
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     60c:	5c 91       	ld	r21, X
     60e:	7e 01       	movw	r14, r28
     610:	d6 01       	movw	r26, r12
     612:	0c 90       	ld	r0, X
     614:	02 c0       	rjmp	.+4      	; 0x61a <_ZN3LCD8setDigitEhNS_6SymbolE+0x6a>
     616:	ee 0c       	add	r14, r14
     618:	ff 1c       	adc	r15, r15
     61a:	0a 94       	dec	r0
     61c:	e2 f7       	brpl	.-8      	; 0x616 <_ZN3LCD8setDigitEhNS_6SymbolE+0x66>
     61e:	4e 2d       	mov	r20, r14
     620:	40 95       	com	r20
     622:	45 23       	and	r20, r21
     624:	d8 01       	movw	r26, r16
     626:	4c 93       	st	X, r20
     628:	2f 5f       	subi	r18, 0xFF	; 255
     62a:	3f 4f       	sbci	r19, 0xFF	; 255
     62c:	32 96       	adiw	r30, 0x02	; 2
		}	
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
     62e:	28 30       	cpi	r18, 0x08	; 8
     630:	31 05       	cpc	r19, r1
     632:	91 f6       	brne	.-92     	; 0x5d8 <_ZN3LCD8setDigitEhNS_6SymbolE+0x28>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
		}
	}
}
     634:	df 91       	pop	r29
     636:	cf 91       	pop	r28
     638:	1f 91       	pop	r17
     63a:	0f 91       	pop	r16
     63c:	ff 90       	pop	r15
     63e:	ef 90       	pop	r14
     640:	df 90       	pop	r13
     642:	cf 90       	pop	r12
     644:	08 95       	ret

00000646 <_ZN3LCD10setBatteryENS_7BatteryE>:

void LCD::setBattery(Battery b) {
	switch(b){
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	88 30       	cpi	r24, 0x08	; 8
     64a:	91 05       	cpc	r25, r1
     64c:	08 f0       	brcs	.+2      	; 0x650 <_ZN3LCD10setBatteryENS_7BatteryE+0xa>
     64e:	54 c0       	rjmp	.+168    	; 0x6f8 <_ZN3LCD10setBatteryENS_7BatteryE+0xb2>
     650:	fc 01       	movw	r30, r24
     652:	e2 5d       	subi	r30, 0xD2	; 210
     654:	ff 4f       	sbci	r31, 0xFF	; 255
		LCDDR6 &=~(1<<4);
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
     656:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		}
	}
}

void LCD::setBattery(Battery b) {
	switch(b){
     65a:	0c 94 56 09 	jmp	0x12ac	; 0x12ac <__tablejump2__>
	case NONE:
		LCDDR1 &=~(1<<4);
     65e:	8f 7e       	andi	r24, 0xEF	; 239
     660:	01 c0       	rjmp	.+2      	; 0x664 <_ZN3LCD10setBatteryENS_7BatteryE+0x1e>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case EMPTY:
		LCDDR1 |=(1<<4);
     662:	80 61       	ori	r24, 0x10	; 16
     664:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     668:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     66c:	8f 7e       	andi	r24, 0xEF	; 239
     66e:	14 c0       	rjmp	.+40     	; 0x698 <_ZN3LCD10setBatteryENS_7BatteryE+0x52>
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case FIRST:
		LCDDR1 &=~(1<<4);
     670:	8f 7e       	andi	r24, 0xEF	; 239
     672:	1e c0       	rjmp	.+60     	; 0x6b0 <_ZN3LCD10setBatteryENS_7BatteryE+0x6a>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case SECOND:
		LCDDR1 &=~(1<<4);
     674:	8f 7e       	andi	r24, 0xEF	; 239
     676:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     67a:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     67e:	8f 7e       	andi	r24, 0xEF	; 239
     680:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 |=(1<<4);
     684:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     688:	80 61       	ori	r24, 0x10	; 16
     68a:	0b c0       	rjmp	.+22     	; 0x6a2 <_ZN3LCD10setBatteryENS_7BatteryE+0x5c>
		LCDDR16 &=~(1<<4);
		break;
	case THIRD:
		LCDDR1 &=~(1<<4);
     68c:	8f 7e       	andi	r24, 0xEF	; 239
     68e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 |=(1<<4);
     692:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     696:	80 61       	ori	r24, 0x10	; 16
     698:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 &=~(1<<4);
     69c:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     6a0:	8f 7e       	andi	r24, 0xEF	; 239
     6a2:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
		LCDDR16 &=~(1<<4);
     6a6:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     6aa:	8f 7e       	andi	r24, 0xEF	; 239
     6ac:	23 c0       	rjmp	.+70     	; 0x6f4 <_ZN3LCD10setBatteryENS_7BatteryE+0xae>
		break;
	case ONEBAR:
		LCDDR1 |=(1<<4);
     6ae:	80 61       	ori	r24, 0x10	; 16
     6b0:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     6b4:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     6b8:	8f 7e       	andi	r24, 0xEF	; 239
     6ba:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 &=~(1<<4);
     6be:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     6c2:	8f 7e       	andi	r24, 0xEF	; 239
     6c4:	12 c0       	rjmp	.+36     	; 0x6ea <_ZN3LCD10setBatteryENS_7BatteryE+0xa4>
		LCDDR16 |=(1<<4);
		break;
	case TWOBAR:
		LCDDR1 |=(1<<4);
     6c6:	80 61       	ori	r24, 0x10	; 16
     6c8:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     6cc:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     6d0:	8f 7e       	andi	r24, 0xEF	; 239
     6d2:	06 c0       	rjmp	.+12     	; 0x6e0 <_ZN3LCD10setBatteryENS_7BatteryE+0x9a>
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
     6d4:	80 61       	ori	r24, 0x10	; 16
     6d6:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 |=(1<<4);
     6da:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     6de:	80 61       	ori	r24, 0x10	; 16
     6e0:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 |=(1<<4);
     6e4:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     6e8:	80 61       	ori	r24, 0x10	; 16
     6ea:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
		LCDDR16 |=(1<<4);
     6ee:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     6f2:	80 61       	ori	r24, 0x10	; 16
     6f4:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     6f8:	08 95       	ret

000006fa <_ZN3LCD5setDPEb>:
		break;
	}
}

void LCD::setDP(bool b) {
	if(b){
     6fa:	88 23       	and	r24, r24
     6fc:	21 f0       	breq	.+8      	; 0x706 <_ZN3LCD5setDPEb+0xc>
		LCDDR15|=(1<<4);
     6fe:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     702:	80 61       	ori	r24, 0x10	; 16
     704:	03 c0       	rjmp	.+6      	; 0x70c <_ZN3LCD5setDPEb+0x12>
	}else{
		LCDDR15&=~(1<<4);
     706:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     70a:	8f 7e       	andi	r24, 0xEF	; 239
     70c:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     710:	08 95       	ret

00000712 <_ZN3LCD6setClkEb>:
	}
}

void LCD::setClk(bool b) {
	if(b){
     712:	88 23       	and	r24, r24
     714:	21 f0       	breq	.+8      	; 0x71e <_ZN3LCD6setClkEb+0xc>
		LCDDR16|=1;
     716:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     71a:	81 60       	ori	r24, 0x01	; 1
     71c:	03 c0       	rjmp	.+6      	; 0x724 <_ZN3LCD6setClkEb+0x12>
	}else{
		LCDDR16&=~1;
     71e:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     722:	8e 7f       	andi	r24, 0xFE	; 254
     724:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     728:	08 95       	ret

0000072a <_ZN3LCD5getDPEv>:
	}
}

bool LCD::getDP(void) {
	return (LCDDR15 & (1<<4));
     72a:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
}
     72e:	82 95       	swap	r24
     730:	81 70       	andi	r24, 0x01	; 1
     732:	08 95       	ret

00000734 <_ZN3LCD6getClkEv>:

bool LCD::getClk(void) {
	return (LCDDR16 & 1);
     734:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
}
     738:	81 70       	andi	r24, 0x01	; 1
     73a:	08 95       	ret

0000073c <_ZN3LCD5setNbElh>:



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
     73c:	4f 92       	push	r4
     73e:	5f 92       	push	r5
     740:	6f 92       	push	r6
     742:	7f 92       	push	r7
     744:	8f 92       	push	r8
     746:	9f 92       	push	r9
     748:	af 92       	push	r10
     74a:	bf 92       	push	r11
     74c:	cf 92       	push	r12
     74e:	df 92       	push	r13
     750:	ef 92       	push	r14
     752:	ff 92       	push	r15
     754:	0f 93       	push	r16
     756:	1f 93       	push	r17
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	6b 01       	movw	r12, r22
     75e:	7c 01       	movw	r14, r24
     760:	c4 2f       	mov	r28, r20
	if(nb>999999 || nb <-99999){
     762:	dc 01       	movw	r26, r24
     764:	cb 01       	movw	r24, r22
     766:	81 56       	subi	r24, 0x61	; 97
     768:	99 47       	sbci	r25, 0x79	; 121
     76a:	ae 4f       	sbci	r26, 0xFE	; 254
     76c:	bf 4f       	sbci	r27, 0xFF	; 255
     76e:	8f 3d       	cpi	r24, 0xDF	; 223
     770:	98 4c       	sbci	r25, 0xC8	; 200
     772:	a0 41       	sbci	r26, 0x10	; 16
     774:	b1 05       	cpc	r27, r1
     776:	08 f0       	brcs	.+2      	; 0x77a <_ZN3LCD5setNbElh+0x3e>
     778:	42 c0       	rjmp	.+132    	; 0x7fe <_ZN3LCD5setNbElh+0xc2>
		return 1;
	}
	int8_t d=5;
	uint8_t min=6-dig;
     77a:	86 e0       	ldi	r24, 0x06	; 6
     77c:	84 1b       	sub	r24, r20
	if(nb<0){
     77e:	f7 fe       	sbrs	r15, 7
     780:	0d c0       	rjmp	.+26     	; 0x79c <_ZN3LCD5setNbElh+0x60>
		setDigit(min,Minus);
     782:	60 e4       	ldi	r22, 0x40	; 64
     784:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN3LCD8setDigitEhNS_6SymbolE>
		min++;
     788:	87 e0       	ldi	r24, 0x07	; 7
     78a:	8c 1b       	sub	r24, r28
		nb=(~nb)+1;
     78c:	f0 94       	com	r15
     78e:	e0 94       	com	r14
     790:	d0 94       	com	r13
     792:	c0 94       	com	r12
     794:	c1 1c       	adc	r12, r1
     796:	d1 1c       	adc	r13, r1
     798:	e1 1c       	adc	r14, r1
     79a:	f1 1c       	adc	r15, r1
	return (LCDDR16 & 1);
}



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
     79c:	15 e0       	ldi	r17, 0x05	; 5
	if(nb<0){
		setDigit(min,Minus);
		min++;
		nb=(~nb)+1;
	}
	while(d>=min){
     79e:	c8 2f       	mov	r28, r24
     7a0:	d0 e0       	ldi	r29, 0x00	; 0
		setDigit(d--,nb%10);
     7a2:	8a e0       	ldi	r24, 0x0A	; 10
     7a4:	48 2e       	mov	r4, r24
     7a6:	51 2c       	mov	r5, r1
     7a8:	61 2c       	mov	r6, r1
     7aa:	71 2c       	mov	r7, r1
	if(nb<0){
		setDigit(min,Minus);
		min++;
		nb=(~nb)+1;
	}
	while(d>=min){
     7ac:	81 2f       	mov	r24, r17
     7ae:	01 2e       	mov	r0, r17
     7b0:	00 0c       	add	r0, r0
     7b2:	99 0b       	sbc	r25, r25
     7b4:	8c 17       	cp	r24, r28
     7b6:	9d 07       	cpc	r25, r29
     7b8:	14 f4       	brge	.+4      	; 0x7be <_ZN3LCD5setNbElh+0x82>



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
	if(nb>999999 || nb <-99999){
		return 1;
     7ba:	80 e0       	ldi	r24, 0x00	; 0
     7bc:	21 c0       	rjmp	.+66     	; 0x800 <_ZN3LCD5setNbElh+0xc4>
		setDigit(min,Minus);
		min++;
		nb=(~nb)+1;
	}
	while(d>=min){
		setDigit(d--,nb%10);
     7be:	c7 01       	movw	r24, r14
     7c0:	b6 01       	movw	r22, r12
     7c2:	a3 01       	movw	r20, r6
     7c4:	92 01       	movw	r18, r4
     7c6:	0e 94 37 09 	call	0x126e	; 0x126e <__divmodsi4>
     7ca:	49 01       	movw	r8, r18
     7cc:	5a 01       	movw	r10, r20
     7ce:	81 2f       	mov	r24, r17
     7d0:	11 50       	subi	r17, 0x01	; 1
     7d2:	0e 94 88 02 	call	0x510	; 0x510 <_ZN3LCD8setDigitEhh>
		nb/=10;
     7d6:	64 01       	movw	r12, r8
     7d8:	75 01       	movw	r14, r10
		if(nb==0)break;
     7da:	c1 14       	cp	r12, r1
     7dc:	d1 04       	cpc	r13, r1
     7de:	e1 04       	cpc	r14, r1
     7e0:	f1 04       	cpc	r15, r1
     7e2:	21 f7       	brne	.-56     	; 0x7ac <_ZN3LCD5setNbElh+0x70>
	}
	while(d>=min)setDigit(d--,Blank);
     7e4:	81 2f       	mov	r24, r17
     7e6:	01 2e       	mov	r0, r17
     7e8:	00 0c       	add	r0, r0
     7ea:	99 0b       	sbc	r25, r25
     7ec:	8c 17       	cp	r24, r28
     7ee:	9d 07       	cpc	r25, r29
     7f0:	24 f3       	brlt	.-56     	; 0x7ba <_ZN3LCD5setNbElh+0x7e>
     7f2:	81 2f       	mov	r24, r17
     7f4:	60 e0       	ldi	r22, 0x00	; 0
     7f6:	11 50       	subi	r17, 0x01	; 1
     7f8:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN3LCD8setDigitEhNS_6SymbolE>
     7fc:	f3 cf       	rjmp	.-26     	; 0x7e4 <_ZN3LCD5setNbElh+0xa8>



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
	if(nb>999999 || nb <-99999){
		return 1;
     7fe:	81 e0       	ldi	r24, 0x01	; 1
		nb/=10;
		if(nb==0)break;
	}
	while(d>=min)setDigit(d--,Blank);
	return 0;
}
     800:	df 91       	pop	r29
     802:	cf 91       	pop	r28
     804:	1f 91       	pop	r17
     806:	0f 91       	pop	r16
     808:	ff 90       	pop	r15
     80a:	ef 90       	pop	r14
     80c:	df 90       	pop	r13
     80e:	cf 90       	pop	r12
     810:	bf 90       	pop	r11
     812:	af 90       	pop	r10
     814:	9f 90       	pop	r9
     816:	8f 90       	pop	r8
     818:	7f 90       	pop	r7
     81a:	6f 90       	pop	r6
     81c:	5f 90       	pop	r5
     81e:	4f 90       	pop	r4
     820:	08 95       	ret

00000822 <_ZN3LCD5setNbEl>:

uint8_t LCD::setNb(int32_t nb) {
	return setNb(nb,6);
     822:	46 e0       	ldi	r20, 0x06	; 6
     824:	0c 94 9e 03 	jmp	0x73c	; 0x73c <_ZN3LCD5setNbElh>

00000828 <_ZN3LCD5clearEb>:
}

void LCD::clear(void) {
	clear(true);
}
void LCD::clear(bool clearBatt) {
     828:	cf 93       	push	r28
	if(clearBatt)setBattery(NONE);
     82a:	88 23       	and	r24, r24
     82c:	19 f0       	breq	.+6      	; 0x834 <_ZN3LCD5clearEb+0xc>
     82e:	80 e0       	ldi	r24, 0x00	; 0
     830:	0e 94 23 03 	call	0x646	; 0x646 <_ZN3LCD10setBatteryENS_7BatteryE>
	setClk(false);
     834:	80 e0       	ldi	r24, 0x00	; 0
     836:	0e 94 89 03 	call	0x712	; 0x712 <_ZN3LCD6setClkEb>
	setDP(false);
     83a:	80 e0       	ldi	r24, 0x00	; 0
     83c:	0e 94 7d 03 	call	0x6fa	; 0x6fa <_ZN3LCD5setDPEb>
	for(int8_t i=5;i>=0;i--)setDigit(i,Blank);
     840:	c5 e0       	ldi	r28, 0x05	; 5
     842:	60 e0       	ldi	r22, 0x00	; 0
     844:	8c 2f       	mov	r24, r28
     846:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN3LCD8setDigitEhNS_6SymbolE>
     84a:	c1 50       	subi	r28, 0x01	; 1
     84c:	d0 f7       	brcc	.-12     	; 0x842 <_ZN3LCD5clearEb+0x1a>
}
     84e:	cf 91       	pop	r28
     850:	08 95       	ret

00000852 <_ZN3LCD5clearEv>:
uint8_t LCD::setNb(int32_t nb) {
	return setNb(nb,6);
}

void LCD::clear(void) {
	clear(true);
     852:	81 e0       	ldi	r24, 0x01	; 1
     854:	0c 94 14 04 	jmp	0x828	; 0x828 <_ZN3LCD5clearEb>

00000858 <main>:
volatile uint8_t loop_cnt=0;
volatile uint8_t btn_state=0;

int main(void){
	
	DDRD=0b11000000; 	//LED0, LED1 as outputs, BTN 0/1 as inputs
     858:	80 ec       	ldi	r24, 0xC0	; 192
     85a:	8a b9       	out	0x0a, r24	; 10
	PORTD=0b00110000;			//LED initial state:low, enable BTN pullups
     85c:	80 e3       	ldi	r24, 0x30	; 48
     85e:	8b b9       	out	0x0b, r24	; 11
	
	DDRE=0b01100011;//IRQ as input, LoadCell_en/PWR_en as outputs, TX as output, RX as input
     860:	83 e6       	ldi	r24, 0x63	; 99
     862:	8d b9       	out	0x0d, r24	; 13
	PORTE=0b11100000;//Enable IRQ pullup, set LoadCell_en/PWR_en to 1
     864:	80 ee       	ldi	r24, 0xE0	; 224
     866:	8e b9       	out	0x0e, r24	; 14
	
	LED0_ON;
     868:	5e 9a       	sbi	0x0b, 6	; 11
	PRR|=(1<<PRTIM1);//Shut down clock to Timer1
     86a:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
     86e:	88 60       	ori	r24, 0x08	; 8
     870:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
	
	ADMUX|=(1<<REFS0)|0b11110;//Set AVCC as reference voltage for ADC, ADC MUX input to 1.1V BG
     874:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7fc07c>
     878:	8e 65       	ori	r24, 0x5E	; 94
     87a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7fc07c>
	ADCSRA|=(1<<ADEN)|(1<<ADIE)|(1<<ADPS1);//Enable conversin complete interrupt, Clock prescaler 12MHz/64=187kHz
     87e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
     882:	8a 68       	ori	r24, 0x8A	; 138
     884:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
	sei();
     888:	78 94       	sei
		}

		if(BTN0!=btn_state){
			btn_state=BTN0;
			if(btn_state){
				LED0_Toggle;
     88a:	c0 e4       	ldi	r28, 0x40	; 64
     88c:	8f e1       	ldi	r24, 0x1F	; 31
     88e:	9e e4       	ldi	r25, 0x4E	; 78
     890:	01 97       	sbiw	r24, 0x01	; 1
     892:	f1 f7       	brne	.-4      	; 0x890 <main+0x38>
     894:	00 c0       	rjmp	.+0      	; 0x896 <main+0x3e>
     896:	00 00       	nop
	
	
	while(1){
	
		_delay_ms(10);
		loop_cnt++;
     898:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <loop_cnt>
     89c:	8f 5f       	subi	r24, 0xFF	; 255
     89e:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <loop_cnt>
		if(loop_cnt>9){
     8a2:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <loop_cnt>
     8a6:	8a 30       	cpi	r24, 0x0A	; 10
     8a8:	10 f0       	brcs	.+4      	; 0x8ae <main+0x56>
			loop_cnt=0;
     8aa:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <loop_cnt>
			//mySM.update();
		}

		if(BTN0!=btn_state){
     8ae:	89 b1       	in	r24, 0x09	; 9
     8b0:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <__data_end>
     8b4:	80 71       	andi	r24, 0x10	; 16
     8b6:	89 17       	cp	r24, r25
     8b8:	59 f0       	breq	.+22     	; 0x8d0 <main+0x78>
			btn_state=BTN0;
     8ba:	89 b1       	in	r24, 0x09	; 9
     8bc:	80 71       	andi	r24, 0x10	; 16
     8be:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <__data_end>
			if(btn_state){
     8c2:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <__data_end>
     8c6:	88 23       	and	r24, r24
     8c8:	19 f0       	breq	.+6      	; 0x8d0 <main+0x78>
				LED0_Toggle;
     8ca:	8b b1       	in	r24, 0x0b	; 11
     8cc:	8c 27       	eor	r24, r28
     8ce:	8b b9       	out	0x0b, r24	; 11
			}
		}
		if(uart.isDataAvailable()){
     8d0:	83 ea       	ldi	r24, 0xA3	; 163
     8d2:	91 e0       	ldi	r25, 0x01	; 1
     8d4:	0e 94 48 02 	call	0x490	; 0x490 <_ZN4UART15isDataAvailableEv>
     8d8:	88 23       	and	r24, r24
     8da:	c1 f2       	breq	.-80     	; 0x88c <main+0x34>
			char *cmd=uart.retrieve();
     8dc:	83 ea       	ldi	r24, 0xA3	; 163
     8de:	91 e0       	ldi	r25, 0x01	; 1
     8e0:	0e 94 3f 02 	call	0x47e	; 0x47e <_ZN4UART8retrieveEv>
			uart.sendString("Start verbose streaming",true);
     8e4:	41 e0       	ldi	r20, 0x01	; 1
     8e6:	68 e8       	ldi	r22, 0x88	; 136
     8e8:	71 e0       	ldi	r23, 0x01	; 1
     8ea:	83 ea       	ldi	r24, 0xA3	; 163
     8ec:	91 e0       	ldi	r25, 0x01	; 1
     8ee:	0e 94 a7 01 	call	0x34e	; 0x34e <_ZN4UART10sendStringEPcb>
     8f2:	cc cf       	rjmp	.-104    	; 0x88c <main+0x34>

000008f4 <_GLOBAL__sub_I_uart>:
#define BATT_EMPTY 305
#define BATT_ONEBAR 315
#define BATT_TWOBAR 325
#define BATT_FULL 335

UART uart;
     8f4:	83 ea       	ldi	r24, 0xA3	; 163
     8f6:	91 e0       	ldi	r25, 0x01	; 1
     8f8:	0e 94 76 01 	call	0x2ec	; 0x2ec <_ZN4UARTC1Ev>
LCD myLCD=LCD(0);//Use 1 for lowest power LCD mode
     8fc:	60 e0       	ldi	r22, 0x00	; 0
     8fe:	82 ea       	ldi	r24, 0xA2	; 162
     900:	91 e0       	ldi	r25, 0x01	; 1
     902:	0c 94 51 02 	jmp	0x4a2	; 0x4a2 <_ZN3LCDC1Eb>

00000906 <_GLOBAL__sub_D_uart>:
     906:	82 ea       	ldi	r24, 0xA2	; 162
     908:	91 e0       	ldi	r25, 0x01	; 1
     90a:	0e 94 76 02 	call	0x4ec	; 0x4ec <_ZN3LCDD1Ev>
#define BATT_EMPTY 305
#define BATT_ONEBAR 315
#define BATT_TWOBAR 325
#define BATT_FULL 335

UART uart;
     90e:	83 ea       	ldi	r24, 0xA3	; 163
     910:	91 e0       	ldi	r25, 0x01	; 1
     912:	0c 94 8d 01 	jmp	0x31a	; 0x31a <_ZN4UARTD1Ev>

00000916 <vfprintf>:
     916:	a0 e1       	ldi	r26, 0x10	; 16
     918:	b0 e0       	ldi	r27, 0x00	; 0
     91a:	e1 e9       	ldi	r30, 0x91	; 145
     91c:	f4 e0       	ldi	r31, 0x04	; 4
     91e:	0c 94 5c 09 	jmp	0x12b8	; 0x12b8 <__prologue_saves__>
     922:	7c 01       	movw	r14, r24
     924:	1b 01       	movw	r2, r22
     926:	6a 01       	movw	r12, r20
     928:	fc 01       	movw	r30, r24
     92a:	17 82       	std	Z+7, r1	; 0x07
     92c:	16 82       	std	Z+6, r1	; 0x06
     92e:	83 81       	ldd	r24, Z+3	; 0x03
     930:	81 ff       	sbrs	r24, 1
     932:	44 c3       	rjmp	.+1672   	; 0xfbc <vfprintf+0x6a6>
     934:	9e 01       	movw	r18, r28
     936:	2f 5f       	subi	r18, 0xFF	; 255
     938:	3f 4f       	sbci	r19, 0xFF	; 255
     93a:	39 01       	movw	r6, r18
     93c:	f7 01       	movw	r30, r14
     93e:	93 81       	ldd	r25, Z+3	; 0x03
     940:	f1 01       	movw	r30, r2
     942:	93 fd       	sbrc	r25, 3
     944:	85 91       	lpm	r24, Z+
     946:	93 ff       	sbrs	r25, 3
     948:	81 91       	ld	r24, Z+
     94a:	1f 01       	movw	r2, r30
     94c:	88 23       	and	r24, r24
     94e:	09 f4       	brne	.+2      	; 0x952 <vfprintf+0x3c>
     950:	31 c3       	rjmp	.+1634   	; 0xfb4 <vfprintf+0x69e>
     952:	85 32       	cpi	r24, 0x25	; 37
     954:	39 f4       	brne	.+14     	; 0x964 <vfprintf+0x4e>
     956:	93 fd       	sbrc	r25, 3
     958:	85 91       	lpm	r24, Z+
     95a:	93 ff       	sbrs	r25, 3
     95c:	81 91       	ld	r24, Z+
     95e:	1f 01       	movw	r2, r30
     960:	85 32       	cpi	r24, 0x25	; 37
     962:	39 f4       	brne	.+14     	; 0x972 <vfprintf+0x5c>
     964:	b7 01       	movw	r22, r14
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     96c:	56 01       	movw	r10, r12
     96e:	65 01       	movw	r12, r10
     970:	e5 cf       	rjmp	.-54     	; 0x93c <vfprintf+0x26>
     972:	10 e0       	ldi	r17, 0x00	; 0
     974:	51 2c       	mov	r5, r1
     976:	91 2c       	mov	r9, r1
     978:	ff e1       	ldi	r31, 0x1F	; 31
     97a:	f9 15       	cp	r31, r9
     97c:	d8 f0       	brcs	.+54     	; 0x9b4 <vfprintf+0x9e>
     97e:	8b 32       	cpi	r24, 0x2B	; 43
     980:	79 f0       	breq	.+30     	; 0x9a0 <vfprintf+0x8a>
     982:	38 f4       	brcc	.+14     	; 0x992 <vfprintf+0x7c>
     984:	80 32       	cpi	r24, 0x20	; 32
     986:	79 f0       	breq	.+30     	; 0x9a6 <vfprintf+0x90>
     988:	83 32       	cpi	r24, 0x23	; 35
     98a:	a1 f4       	brne	.+40     	; 0x9b4 <vfprintf+0x9e>
     98c:	f9 2d       	mov	r31, r9
     98e:	f0 61       	ori	r31, 0x10	; 16
     990:	2e c0       	rjmp	.+92     	; 0x9ee <vfprintf+0xd8>
     992:	8d 32       	cpi	r24, 0x2D	; 45
     994:	61 f0       	breq	.+24     	; 0x9ae <vfprintf+0x98>
     996:	80 33       	cpi	r24, 0x30	; 48
     998:	69 f4       	brne	.+26     	; 0x9b4 <vfprintf+0x9e>
     99a:	29 2d       	mov	r18, r9
     99c:	21 60       	ori	r18, 0x01	; 1
     99e:	2d c0       	rjmp	.+90     	; 0x9fa <vfprintf+0xe4>
     9a0:	39 2d       	mov	r19, r9
     9a2:	32 60       	ori	r19, 0x02	; 2
     9a4:	93 2e       	mov	r9, r19
     9a6:	89 2d       	mov	r24, r9
     9a8:	84 60       	ori	r24, 0x04	; 4
     9aa:	98 2e       	mov	r9, r24
     9ac:	2a c0       	rjmp	.+84     	; 0xa02 <vfprintf+0xec>
     9ae:	e9 2d       	mov	r30, r9
     9b0:	e8 60       	ori	r30, 0x08	; 8
     9b2:	15 c0       	rjmp	.+42     	; 0x9de <vfprintf+0xc8>
     9b4:	97 fc       	sbrc	r9, 7
     9b6:	2d c0       	rjmp	.+90     	; 0xa12 <vfprintf+0xfc>
     9b8:	20 ed       	ldi	r18, 0xD0	; 208
     9ba:	28 0f       	add	r18, r24
     9bc:	2a 30       	cpi	r18, 0x0A	; 10
     9be:	88 f4       	brcc	.+34     	; 0x9e2 <vfprintf+0xcc>
     9c0:	96 fe       	sbrs	r9, 6
     9c2:	06 c0       	rjmp	.+12     	; 0x9d0 <vfprintf+0xba>
     9c4:	3a e0       	ldi	r19, 0x0A	; 10
     9c6:	13 9f       	mul	r17, r19
     9c8:	20 0d       	add	r18, r0
     9ca:	11 24       	eor	r1, r1
     9cc:	12 2f       	mov	r17, r18
     9ce:	19 c0       	rjmp	.+50     	; 0xa02 <vfprintf+0xec>
     9d0:	8a e0       	ldi	r24, 0x0A	; 10
     9d2:	58 9e       	mul	r5, r24
     9d4:	20 0d       	add	r18, r0
     9d6:	11 24       	eor	r1, r1
     9d8:	52 2e       	mov	r5, r18
     9da:	e9 2d       	mov	r30, r9
     9dc:	e0 62       	ori	r30, 0x20	; 32
     9de:	9e 2e       	mov	r9, r30
     9e0:	10 c0       	rjmp	.+32     	; 0xa02 <vfprintf+0xec>
     9e2:	8e 32       	cpi	r24, 0x2E	; 46
     9e4:	31 f4       	brne	.+12     	; 0x9f2 <vfprintf+0xdc>
     9e6:	96 fc       	sbrc	r9, 6
     9e8:	e5 c2       	rjmp	.+1482   	; 0xfb4 <vfprintf+0x69e>
     9ea:	f9 2d       	mov	r31, r9
     9ec:	f0 64       	ori	r31, 0x40	; 64
     9ee:	9f 2e       	mov	r9, r31
     9f0:	08 c0       	rjmp	.+16     	; 0xa02 <vfprintf+0xec>
     9f2:	8c 36       	cpi	r24, 0x6C	; 108
     9f4:	21 f4       	brne	.+8      	; 0x9fe <vfprintf+0xe8>
     9f6:	29 2d       	mov	r18, r9
     9f8:	20 68       	ori	r18, 0x80	; 128
     9fa:	92 2e       	mov	r9, r18
     9fc:	02 c0       	rjmp	.+4      	; 0xa02 <vfprintf+0xec>
     9fe:	88 36       	cpi	r24, 0x68	; 104
     a00:	41 f4       	brne	.+16     	; 0xa12 <vfprintf+0xfc>
     a02:	f1 01       	movw	r30, r2
     a04:	93 fd       	sbrc	r25, 3
     a06:	85 91       	lpm	r24, Z+
     a08:	93 ff       	sbrs	r25, 3
     a0a:	81 91       	ld	r24, Z+
     a0c:	1f 01       	movw	r2, r30
     a0e:	81 11       	cpse	r24, r1
     a10:	b3 cf       	rjmp	.-154    	; 0x978 <vfprintf+0x62>
     a12:	9b eb       	ldi	r25, 0xBB	; 187
     a14:	98 0f       	add	r25, r24
     a16:	93 30       	cpi	r25, 0x03	; 3
     a18:	20 f4       	brcc	.+8      	; 0xa22 <vfprintf+0x10c>
     a1a:	99 2d       	mov	r25, r9
     a1c:	90 61       	ori	r25, 0x10	; 16
     a1e:	80 5e       	subi	r24, 0xE0	; 224
     a20:	07 c0       	rjmp	.+14     	; 0xa30 <vfprintf+0x11a>
     a22:	9b e9       	ldi	r25, 0x9B	; 155
     a24:	98 0f       	add	r25, r24
     a26:	93 30       	cpi	r25, 0x03	; 3
     a28:	08 f0       	brcs	.+2      	; 0xa2c <vfprintf+0x116>
     a2a:	66 c1       	rjmp	.+716    	; 0xcf8 <vfprintf+0x3e2>
     a2c:	99 2d       	mov	r25, r9
     a2e:	9f 7e       	andi	r25, 0xEF	; 239
     a30:	96 ff       	sbrs	r25, 6
     a32:	16 e0       	ldi	r17, 0x06	; 6
     a34:	9f 73       	andi	r25, 0x3F	; 63
     a36:	99 2e       	mov	r9, r25
     a38:	85 36       	cpi	r24, 0x65	; 101
     a3a:	19 f4       	brne	.+6      	; 0xa42 <vfprintf+0x12c>
     a3c:	90 64       	ori	r25, 0x40	; 64
     a3e:	99 2e       	mov	r9, r25
     a40:	08 c0       	rjmp	.+16     	; 0xa52 <vfprintf+0x13c>
     a42:	86 36       	cpi	r24, 0x66	; 102
     a44:	21 f4       	brne	.+8      	; 0xa4e <vfprintf+0x138>
     a46:	39 2f       	mov	r19, r25
     a48:	30 68       	ori	r19, 0x80	; 128
     a4a:	93 2e       	mov	r9, r19
     a4c:	02 c0       	rjmp	.+4      	; 0xa52 <vfprintf+0x13c>
     a4e:	11 11       	cpse	r17, r1
     a50:	11 50       	subi	r17, 0x01	; 1
     a52:	97 fe       	sbrs	r9, 7
     a54:	07 c0       	rjmp	.+14     	; 0xa64 <vfprintf+0x14e>
     a56:	1c 33       	cpi	r17, 0x3C	; 60
     a58:	50 f4       	brcc	.+20     	; 0xa6e <vfprintf+0x158>
     a5a:	44 24       	eor	r4, r4
     a5c:	43 94       	inc	r4
     a5e:	41 0e       	add	r4, r17
     a60:	27 e0       	ldi	r18, 0x07	; 7
     a62:	0b c0       	rjmp	.+22     	; 0xa7a <vfprintf+0x164>
     a64:	18 30       	cpi	r17, 0x08	; 8
     a66:	38 f0       	brcs	.+14     	; 0xa76 <vfprintf+0x160>
     a68:	27 e0       	ldi	r18, 0x07	; 7
     a6a:	17 e0       	ldi	r17, 0x07	; 7
     a6c:	05 c0       	rjmp	.+10     	; 0xa78 <vfprintf+0x162>
     a6e:	27 e0       	ldi	r18, 0x07	; 7
     a70:	9c e3       	ldi	r25, 0x3C	; 60
     a72:	49 2e       	mov	r4, r25
     a74:	02 c0       	rjmp	.+4      	; 0xa7a <vfprintf+0x164>
     a76:	21 2f       	mov	r18, r17
     a78:	41 2c       	mov	r4, r1
     a7a:	56 01       	movw	r10, r12
     a7c:	84 e0       	ldi	r24, 0x04	; 4
     a7e:	a8 0e       	add	r10, r24
     a80:	b1 1c       	adc	r11, r1
     a82:	f6 01       	movw	r30, r12
     a84:	60 81       	ld	r22, Z
     a86:	71 81       	ldd	r23, Z+1	; 0x01
     a88:	82 81       	ldd	r24, Z+2	; 0x02
     a8a:	93 81       	ldd	r25, Z+3	; 0x03
     a8c:	04 2d       	mov	r16, r4
     a8e:	a3 01       	movw	r20, r6
     a90:	0e 94 b5 09 	call	0x136a	; 0x136a <__ftoa_engine>
     a94:	6c 01       	movw	r12, r24
     a96:	f9 81       	ldd	r31, Y+1	; 0x01
     a98:	fc 87       	std	Y+12, r31	; 0x0c
     a9a:	f0 ff       	sbrs	r31, 0
     a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <vfprintf+0x18c>
     a9e:	f3 ff       	sbrs	r31, 3
     aa0:	06 c0       	rjmp	.+12     	; 0xaae <vfprintf+0x198>
     aa2:	91 fc       	sbrc	r9, 1
     aa4:	06 c0       	rjmp	.+12     	; 0xab2 <vfprintf+0x19c>
     aa6:	92 fe       	sbrs	r9, 2
     aa8:	06 c0       	rjmp	.+12     	; 0xab6 <vfprintf+0x1a0>
     aaa:	00 e2       	ldi	r16, 0x20	; 32
     aac:	05 c0       	rjmp	.+10     	; 0xab8 <vfprintf+0x1a2>
     aae:	0d e2       	ldi	r16, 0x2D	; 45
     ab0:	03 c0       	rjmp	.+6      	; 0xab8 <vfprintf+0x1a2>
     ab2:	0b e2       	ldi	r16, 0x2B	; 43
     ab4:	01 c0       	rjmp	.+2      	; 0xab8 <vfprintf+0x1a2>
     ab6:	00 e0       	ldi	r16, 0x00	; 0
     ab8:	8c 85       	ldd	r24, Y+12	; 0x0c
     aba:	8c 70       	andi	r24, 0x0C	; 12
     abc:	19 f0       	breq	.+6      	; 0xac4 <vfprintf+0x1ae>
     abe:	01 11       	cpse	r16, r1
     ac0:	5a c2       	rjmp	.+1204   	; 0xf76 <vfprintf+0x660>
     ac2:	9b c2       	rjmp	.+1334   	; 0xffa <vfprintf+0x6e4>
     ac4:	97 fe       	sbrs	r9, 7
     ac6:	10 c0       	rjmp	.+32     	; 0xae8 <vfprintf+0x1d2>
     ac8:	4c 0c       	add	r4, r12
     aca:	fc 85       	ldd	r31, Y+12	; 0x0c
     acc:	f4 ff       	sbrs	r31, 4
     ace:	04 c0       	rjmp	.+8      	; 0xad8 <vfprintf+0x1c2>
     ad0:	8a 81       	ldd	r24, Y+2	; 0x02
     ad2:	81 33       	cpi	r24, 0x31	; 49
     ad4:	09 f4       	brne	.+2      	; 0xad8 <vfprintf+0x1c2>
     ad6:	4a 94       	dec	r4
     ad8:	14 14       	cp	r1, r4
     ada:	74 f5       	brge	.+92     	; 0xb38 <vfprintf+0x222>
     adc:	28 e0       	ldi	r18, 0x08	; 8
     ade:	24 15       	cp	r18, r4
     ae0:	78 f5       	brcc	.+94     	; 0xb40 <vfprintf+0x22a>
     ae2:	88 e0       	ldi	r24, 0x08	; 8
     ae4:	48 2e       	mov	r4, r24
     ae6:	2c c0       	rjmp	.+88     	; 0xb40 <vfprintf+0x22a>
     ae8:	96 fc       	sbrc	r9, 6
     aea:	2a c0       	rjmp	.+84     	; 0xb40 <vfprintf+0x22a>
     aec:	81 2f       	mov	r24, r17
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	8c 15       	cp	r24, r12
     af2:	9d 05       	cpc	r25, r13
     af4:	9c f0       	brlt	.+38     	; 0xb1c <vfprintf+0x206>
     af6:	3c ef       	ldi	r19, 0xFC	; 252
     af8:	c3 16       	cp	r12, r19
     afa:	3f ef       	ldi	r19, 0xFF	; 255
     afc:	d3 06       	cpc	r13, r19
     afe:	74 f0       	brlt	.+28     	; 0xb1c <vfprintf+0x206>
     b00:	89 2d       	mov	r24, r9
     b02:	80 68       	ori	r24, 0x80	; 128
     b04:	98 2e       	mov	r9, r24
     b06:	0a c0       	rjmp	.+20     	; 0xb1c <vfprintf+0x206>
     b08:	e2 e0       	ldi	r30, 0x02	; 2
     b0a:	f0 e0       	ldi	r31, 0x00	; 0
     b0c:	ec 0f       	add	r30, r28
     b0e:	fd 1f       	adc	r31, r29
     b10:	e1 0f       	add	r30, r17
     b12:	f1 1d       	adc	r31, r1
     b14:	80 81       	ld	r24, Z
     b16:	80 33       	cpi	r24, 0x30	; 48
     b18:	19 f4       	brne	.+6      	; 0xb20 <vfprintf+0x20a>
     b1a:	11 50       	subi	r17, 0x01	; 1
     b1c:	11 11       	cpse	r17, r1
     b1e:	f4 cf       	rjmp	.-24     	; 0xb08 <vfprintf+0x1f2>
     b20:	97 fe       	sbrs	r9, 7
     b22:	0e c0       	rjmp	.+28     	; 0xb40 <vfprintf+0x22a>
     b24:	44 24       	eor	r4, r4
     b26:	43 94       	inc	r4
     b28:	41 0e       	add	r4, r17
     b2a:	81 2f       	mov	r24, r17
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	c8 16       	cp	r12, r24
     b30:	d9 06       	cpc	r13, r25
     b32:	2c f4       	brge	.+10     	; 0xb3e <vfprintf+0x228>
     b34:	1c 19       	sub	r17, r12
     b36:	04 c0       	rjmp	.+8      	; 0xb40 <vfprintf+0x22a>
     b38:	44 24       	eor	r4, r4
     b3a:	43 94       	inc	r4
     b3c:	01 c0       	rjmp	.+2      	; 0xb40 <vfprintf+0x22a>
     b3e:	10 e0       	ldi	r17, 0x00	; 0
     b40:	97 fe       	sbrs	r9, 7
     b42:	06 c0       	rjmp	.+12     	; 0xb50 <vfprintf+0x23a>
     b44:	1c 14       	cp	r1, r12
     b46:	1d 04       	cpc	r1, r13
     b48:	34 f4       	brge	.+12     	; 0xb56 <vfprintf+0x240>
     b4a:	c6 01       	movw	r24, r12
     b4c:	01 96       	adiw	r24, 0x01	; 1
     b4e:	05 c0       	rjmp	.+10     	; 0xb5a <vfprintf+0x244>
     b50:	85 e0       	ldi	r24, 0x05	; 5
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	02 c0       	rjmp	.+4      	; 0xb5a <vfprintf+0x244>
     b56:	81 e0       	ldi	r24, 0x01	; 1
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	01 11       	cpse	r16, r1
     b5c:	01 96       	adiw	r24, 0x01	; 1
     b5e:	11 23       	and	r17, r17
     b60:	31 f0       	breq	.+12     	; 0xb6e <vfprintf+0x258>
     b62:	21 2f       	mov	r18, r17
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	2f 5f       	subi	r18, 0xFF	; 255
     b68:	3f 4f       	sbci	r19, 0xFF	; 255
     b6a:	82 0f       	add	r24, r18
     b6c:	93 1f       	adc	r25, r19
     b6e:	25 2d       	mov	r18, r5
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	82 17       	cp	r24, r18
     b74:	93 07       	cpc	r25, r19
     b76:	14 f4       	brge	.+4      	; 0xb7c <vfprintf+0x266>
     b78:	58 1a       	sub	r5, r24
     b7a:	01 c0       	rjmp	.+2      	; 0xb7e <vfprintf+0x268>
     b7c:	51 2c       	mov	r5, r1
     b7e:	89 2d       	mov	r24, r9
     b80:	89 70       	andi	r24, 0x09	; 9
     b82:	49 f4       	brne	.+18     	; 0xb96 <vfprintf+0x280>
     b84:	55 20       	and	r5, r5
     b86:	39 f0       	breq	.+14     	; 0xb96 <vfprintf+0x280>
     b88:	b7 01       	movw	r22, r14
     b8a:	80 e2       	ldi	r24, 0x20	; 32
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     b92:	5a 94       	dec	r5
     b94:	f7 cf       	rjmp	.-18     	; 0xb84 <vfprintf+0x26e>
     b96:	00 23       	and	r16, r16
     b98:	29 f0       	breq	.+10     	; 0xba4 <vfprintf+0x28e>
     b9a:	b7 01       	movw	r22, r14
     b9c:	80 2f       	mov	r24, r16
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     ba4:	93 fc       	sbrc	r9, 3
     ba6:	09 c0       	rjmp	.+18     	; 0xbba <vfprintf+0x2a4>
     ba8:	55 20       	and	r5, r5
     baa:	39 f0       	breq	.+14     	; 0xbba <vfprintf+0x2a4>
     bac:	b7 01       	movw	r22, r14
     bae:	80 e3       	ldi	r24, 0x30	; 48
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     bb6:	5a 94       	dec	r5
     bb8:	f7 cf       	rjmp	.-18     	; 0xba8 <vfprintf+0x292>
     bba:	97 fe       	sbrs	r9, 7
     bbc:	4c c0       	rjmp	.+152    	; 0xc56 <vfprintf+0x340>
     bbe:	46 01       	movw	r8, r12
     bc0:	d7 fe       	sbrs	r13, 7
     bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <vfprintf+0x2b2>
     bc4:	81 2c       	mov	r8, r1
     bc6:	91 2c       	mov	r9, r1
     bc8:	c6 01       	movw	r24, r12
     bca:	88 19       	sub	r24, r8
     bcc:	99 09       	sbc	r25, r9
     bce:	f3 01       	movw	r30, r6
     bd0:	e8 0f       	add	r30, r24
     bd2:	f9 1f       	adc	r31, r25
     bd4:	fe 87       	std	Y+14, r31	; 0x0e
     bd6:	ed 87       	std	Y+13, r30	; 0x0d
     bd8:	96 01       	movw	r18, r12
     bda:	24 19       	sub	r18, r4
     bdc:	31 09       	sbc	r19, r1
     bde:	38 8b       	std	Y+16, r19	; 0x10
     be0:	2f 87       	std	Y+15, r18	; 0x0f
     be2:	01 2f       	mov	r16, r17
     be4:	10 e0       	ldi	r17, 0x00	; 0
     be6:	11 95       	neg	r17
     be8:	01 95       	neg	r16
     bea:	11 09       	sbc	r17, r1
     bec:	3f ef       	ldi	r19, 0xFF	; 255
     bee:	83 16       	cp	r8, r19
     bf0:	93 06       	cpc	r9, r19
     bf2:	29 f4       	brne	.+10     	; 0xbfe <vfprintf+0x2e8>
     bf4:	b7 01       	movw	r22, r14
     bf6:	8e e2       	ldi	r24, 0x2E	; 46
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     bfe:	c8 14       	cp	r12, r8
     c00:	d9 04       	cpc	r13, r9
     c02:	4c f0       	brlt	.+18     	; 0xc16 <vfprintf+0x300>
     c04:	8f 85       	ldd	r24, Y+15	; 0x0f
     c06:	98 89       	ldd	r25, Y+16	; 0x10
     c08:	88 15       	cp	r24, r8
     c0a:	99 05       	cpc	r25, r9
     c0c:	24 f4       	brge	.+8      	; 0xc16 <vfprintf+0x300>
     c0e:	ed 85       	ldd	r30, Y+13	; 0x0d
     c10:	fe 85       	ldd	r31, Y+14	; 0x0e
     c12:	81 81       	ldd	r24, Z+1	; 0x01
     c14:	01 c0       	rjmp	.+2      	; 0xc18 <vfprintf+0x302>
     c16:	80 e3       	ldi	r24, 0x30	; 48
     c18:	f1 e0       	ldi	r31, 0x01	; 1
     c1a:	8f 1a       	sub	r8, r31
     c1c:	91 08       	sbc	r9, r1
     c1e:	2d 85       	ldd	r18, Y+13	; 0x0d
     c20:	3e 85       	ldd	r19, Y+14	; 0x0e
     c22:	2f 5f       	subi	r18, 0xFF	; 255
     c24:	3f 4f       	sbci	r19, 0xFF	; 255
     c26:	3e 87       	std	Y+14, r19	; 0x0e
     c28:	2d 87       	std	Y+13, r18	; 0x0d
     c2a:	80 16       	cp	r8, r16
     c2c:	91 06       	cpc	r9, r17
     c2e:	2c f0       	brlt	.+10     	; 0xc3a <vfprintf+0x324>
     c30:	b7 01       	movw	r22, r14
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     c38:	d9 cf       	rjmp	.-78     	; 0xbec <vfprintf+0x2d6>
     c3a:	c8 14       	cp	r12, r8
     c3c:	d9 04       	cpc	r13, r9
     c3e:	41 f4       	brne	.+16     	; 0xc50 <vfprintf+0x33a>
     c40:	9a 81       	ldd	r25, Y+2	; 0x02
     c42:	96 33       	cpi	r25, 0x36	; 54
     c44:	20 f4       	brcc	.+8      	; 0xc4e <vfprintf+0x338>
     c46:	95 33       	cpi	r25, 0x35	; 53
     c48:	19 f4       	brne	.+6      	; 0xc50 <vfprintf+0x33a>
     c4a:	3c 85       	ldd	r19, Y+12	; 0x0c
     c4c:	34 ff       	sbrs	r19, 4
     c4e:	81 e3       	ldi	r24, 0x31	; 49
     c50:	b7 01       	movw	r22, r14
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	4e c0       	rjmp	.+156    	; 0xcf2 <vfprintf+0x3dc>
     c56:	8a 81       	ldd	r24, Y+2	; 0x02
     c58:	81 33       	cpi	r24, 0x31	; 49
     c5a:	19 f0       	breq	.+6      	; 0xc62 <vfprintf+0x34c>
     c5c:	9c 85       	ldd	r25, Y+12	; 0x0c
     c5e:	9f 7e       	andi	r25, 0xEF	; 239
     c60:	9c 87       	std	Y+12, r25	; 0x0c
     c62:	b7 01       	movw	r22, r14
     c64:	90 e0       	ldi	r25, 0x00	; 0
     c66:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     c6a:	11 11       	cpse	r17, r1
     c6c:	05 c0       	rjmp	.+10     	; 0xc78 <vfprintf+0x362>
     c6e:	94 fc       	sbrc	r9, 4
     c70:	18 c0       	rjmp	.+48     	; 0xca2 <vfprintf+0x38c>
     c72:	85 e6       	ldi	r24, 0x65	; 101
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	17 c0       	rjmp	.+46     	; 0xca6 <vfprintf+0x390>
     c78:	b7 01       	movw	r22, r14
     c7a:	8e e2       	ldi	r24, 0x2E	; 46
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     c82:	1e 5f       	subi	r17, 0xFE	; 254
     c84:	82 e0       	ldi	r24, 0x02	; 2
     c86:	01 e0       	ldi	r16, 0x01	; 1
     c88:	08 0f       	add	r16, r24
     c8a:	f3 01       	movw	r30, r6
     c8c:	e8 0f       	add	r30, r24
     c8e:	f1 1d       	adc	r31, r1
     c90:	80 81       	ld	r24, Z
     c92:	b7 01       	movw	r22, r14
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     c9a:	80 2f       	mov	r24, r16
     c9c:	01 13       	cpse	r16, r17
     c9e:	f3 cf       	rjmp	.-26     	; 0xc86 <vfprintf+0x370>
     ca0:	e6 cf       	rjmp	.-52     	; 0xc6e <vfprintf+0x358>
     ca2:	85 e4       	ldi	r24, 0x45	; 69
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	b7 01       	movw	r22, r14
     ca8:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     cac:	d7 fc       	sbrc	r13, 7
     cae:	06 c0       	rjmp	.+12     	; 0xcbc <vfprintf+0x3a6>
     cb0:	c1 14       	cp	r12, r1
     cb2:	d1 04       	cpc	r13, r1
     cb4:	41 f4       	brne	.+16     	; 0xcc6 <vfprintf+0x3b0>
     cb6:	ec 85       	ldd	r30, Y+12	; 0x0c
     cb8:	e4 ff       	sbrs	r30, 4
     cba:	05 c0       	rjmp	.+10     	; 0xcc6 <vfprintf+0x3b0>
     cbc:	d1 94       	neg	r13
     cbe:	c1 94       	neg	r12
     cc0:	d1 08       	sbc	r13, r1
     cc2:	8d e2       	ldi	r24, 0x2D	; 45
     cc4:	01 c0       	rjmp	.+2      	; 0xcc8 <vfprintf+0x3b2>
     cc6:	8b e2       	ldi	r24, 0x2B	; 43
     cc8:	b7 01       	movw	r22, r14
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     cd0:	80 e3       	ldi	r24, 0x30	; 48
     cd2:	2a e0       	ldi	r18, 0x0A	; 10
     cd4:	c2 16       	cp	r12, r18
     cd6:	d1 04       	cpc	r13, r1
     cd8:	2c f0       	brlt	.+10     	; 0xce4 <vfprintf+0x3ce>
     cda:	8f 5f       	subi	r24, 0xFF	; 255
     cdc:	fa e0       	ldi	r31, 0x0A	; 10
     cde:	cf 1a       	sub	r12, r31
     ce0:	d1 08       	sbc	r13, r1
     ce2:	f7 cf       	rjmp	.-18     	; 0xcd2 <vfprintf+0x3bc>
     ce4:	b7 01       	movw	r22, r14
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     cec:	b7 01       	movw	r22, r14
     cee:	c6 01       	movw	r24, r12
     cf0:	c0 96       	adiw	r24, 0x30	; 48
     cf2:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     cf6:	54 c1       	rjmp	.+680    	; 0xfa0 <vfprintf+0x68a>
     cf8:	83 36       	cpi	r24, 0x63	; 99
     cfa:	31 f0       	breq	.+12     	; 0xd08 <vfprintf+0x3f2>
     cfc:	83 37       	cpi	r24, 0x73	; 115
     cfe:	79 f0       	breq	.+30     	; 0xd1e <vfprintf+0x408>
     d00:	83 35       	cpi	r24, 0x53	; 83
     d02:	09 f0       	breq	.+2      	; 0xd06 <vfprintf+0x3f0>
     d04:	56 c0       	rjmp	.+172    	; 0xdb2 <vfprintf+0x49c>
     d06:	20 c0       	rjmp	.+64     	; 0xd48 <vfprintf+0x432>
     d08:	56 01       	movw	r10, r12
     d0a:	32 e0       	ldi	r19, 0x02	; 2
     d0c:	a3 0e       	add	r10, r19
     d0e:	b1 1c       	adc	r11, r1
     d10:	f6 01       	movw	r30, r12
     d12:	80 81       	ld	r24, Z
     d14:	89 83       	std	Y+1, r24	; 0x01
     d16:	01 e0       	ldi	r16, 0x01	; 1
     d18:	10 e0       	ldi	r17, 0x00	; 0
     d1a:	63 01       	movw	r12, r6
     d1c:	12 c0       	rjmp	.+36     	; 0xd42 <vfprintf+0x42c>
     d1e:	56 01       	movw	r10, r12
     d20:	f2 e0       	ldi	r31, 0x02	; 2
     d22:	af 0e       	add	r10, r31
     d24:	b1 1c       	adc	r11, r1
     d26:	f6 01       	movw	r30, r12
     d28:	c0 80       	ld	r12, Z
     d2a:	d1 80       	ldd	r13, Z+1	; 0x01
     d2c:	96 fe       	sbrs	r9, 6
     d2e:	03 c0       	rjmp	.+6      	; 0xd36 <vfprintf+0x420>
     d30:	61 2f       	mov	r22, r17
     d32:	70 e0       	ldi	r23, 0x00	; 0
     d34:	02 c0       	rjmp	.+4      	; 0xd3a <vfprintf+0x424>
     d36:	6f ef       	ldi	r22, 0xFF	; 255
     d38:	7f ef       	ldi	r23, 0xFF	; 255
     d3a:	c6 01       	movw	r24, r12
     d3c:	0e 94 98 0a 	call	0x1530	; 0x1530 <strnlen>
     d40:	8c 01       	movw	r16, r24
     d42:	f9 2d       	mov	r31, r9
     d44:	ff 77       	andi	r31, 0x7F	; 127
     d46:	14 c0       	rjmp	.+40     	; 0xd70 <vfprintf+0x45a>
     d48:	56 01       	movw	r10, r12
     d4a:	22 e0       	ldi	r18, 0x02	; 2
     d4c:	a2 0e       	add	r10, r18
     d4e:	b1 1c       	adc	r11, r1
     d50:	f6 01       	movw	r30, r12
     d52:	c0 80       	ld	r12, Z
     d54:	d1 80       	ldd	r13, Z+1	; 0x01
     d56:	96 fe       	sbrs	r9, 6
     d58:	03 c0       	rjmp	.+6      	; 0xd60 <vfprintf+0x44a>
     d5a:	61 2f       	mov	r22, r17
     d5c:	70 e0       	ldi	r23, 0x00	; 0
     d5e:	02 c0       	rjmp	.+4      	; 0xd64 <vfprintf+0x44e>
     d60:	6f ef       	ldi	r22, 0xFF	; 255
     d62:	7f ef       	ldi	r23, 0xFF	; 255
     d64:	c6 01       	movw	r24, r12
     d66:	0e 94 8d 0a 	call	0x151a	; 0x151a <strnlen_P>
     d6a:	8c 01       	movw	r16, r24
     d6c:	f9 2d       	mov	r31, r9
     d6e:	f0 68       	ori	r31, 0x80	; 128
     d70:	9f 2e       	mov	r9, r31
     d72:	f3 fd       	sbrc	r31, 3
     d74:	1a c0       	rjmp	.+52     	; 0xdaa <vfprintf+0x494>
     d76:	85 2d       	mov	r24, r5
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	08 17       	cp	r16, r24
     d7c:	19 07       	cpc	r17, r25
     d7e:	a8 f4       	brcc	.+42     	; 0xdaa <vfprintf+0x494>
     d80:	b7 01       	movw	r22, r14
     d82:	80 e2       	ldi	r24, 0x20	; 32
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     d8a:	5a 94       	dec	r5
     d8c:	f4 cf       	rjmp	.-24     	; 0xd76 <vfprintf+0x460>
     d8e:	f6 01       	movw	r30, r12
     d90:	97 fc       	sbrc	r9, 7
     d92:	85 91       	lpm	r24, Z+
     d94:	97 fe       	sbrs	r9, 7
     d96:	81 91       	ld	r24, Z+
     d98:	6f 01       	movw	r12, r30
     d9a:	b7 01       	movw	r22, r14
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     da2:	51 10       	cpse	r5, r1
     da4:	5a 94       	dec	r5
     da6:	01 50       	subi	r16, 0x01	; 1
     da8:	11 09       	sbc	r17, r1
     daa:	01 15       	cp	r16, r1
     dac:	11 05       	cpc	r17, r1
     dae:	79 f7       	brne	.-34     	; 0xd8e <vfprintf+0x478>
     db0:	f7 c0       	rjmp	.+494    	; 0xfa0 <vfprintf+0x68a>
     db2:	84 36       	cpi	r24, 0x64	; 100
     db4:	11 f0       	breq	.+4      	; 0xdba <vfprintf+0x4a4>
     db6:	89 36       	cpi	r24, 0x69	; 105
     db8:	61 f5       	brne	.+88     	; 0xe12 <vfprintf+0x4fc>
     dba:	56 01       	movw	r10, r12
     dbc:	97 fe       	sbrs	r9, 7
     dbe:	09 c0       	rjmp	.+18     	; 0xdd2 <vfprintf+0x4bc>
     dc0:	24 e0       	ldi	r18, 0x04	; 4
     dc2:	a2 0e       	add	r10, r18
     dc4:	b1 1c       	adc	r11, r1
     dc6:	f6 01       	movw	r30, r12
     dc8:	60 81       	ld	r22, Z
     dca:	71 81       	ldd	r23, Z+1	; 0x01
     dcc:	82 81       	ldd	r24, Z+2	; 0x02
     dce:	93 81       	ldd	r25, Z+3	; 0x03
     dd0:	0a c0       	rjmp	.+20     	; 0xde6 <vfprintf+0x4d0>
     dd2:	f2 e0       	ldi	r31, 0x02	; 2
     dd4:	af 0e       	add	r10, r31
     dd6:	b1 1c       	adc	r11, r1
     dd8:	f6 01       	movw	r30, r12
     dda:	60 81       	ld	r22, Z
     ddc:	71 81       	ldd	r23, Z+1	; 0x01
     dde:	07 2e       	mov	r0, r23
     de0:	00 0c       	add	r0, r0
     de2:	88 0b       	sbc	r24, r24
     de4:	99 0b       	sbc	r25, r25
     de6:	f9 2d       	mov	r31, r9
     de8:	ff 76       	andi	r31, 0x6F	; 111
     dea:	9f 2e       	mov	r9, r31
     dec:	97 ff       	sbrs	r25, 7
     dee:	09 c0       	rjmp	.+18     	; 0xe02 <vfprintf+0x4ec>
     df0:	90 95       	com	r25
     df2:	80 95       	com	r24
     df4:	70 95       	com	r23
     df6:	61 95       	neg	r22
     df8:	7f 4f       	sbci	r23, 0xFF	; 255
     dfa:	8f 4f       	sbci	r24, 0xFF	; 255
     dfc:	9f 4f       	sbci	r25, 0xFF	; 255
     dfe:	f0 68       	ori	r31, 0x80	; 128
     e00:	9f 2e       	mov	r9, r31
     e02:	2a e0       	ldi	r18, 0x0A	; 10
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	a3 01       	movw	r20, r6
     e08:	0e 94 1b 0b 	call	0x1636	; 0x1636 <__ultoa_invert>
     e0c:	c8 2e       	mov	r12, r24
     e0e:	c6 18       	sub	r12, r6
     e10:	3f c0       	rjmp	.+126    	; 0xe90 <vfprintf+0x57a>
     e12:	09 2d       	mov	r16, r9
     e14:	85 37       	cpi	r24, 0x75	; 117
     e16:	21 f4       	brne	.+8      	; 0xe20 <vfprintf+0x50a>
     e18:	0f 7e       	andi	r16, 0xEF	; 239
     e1a:	2a e0       	ldi	r18, 0x0A	; 10
     e1c:	30 e0       	ldi	r19, 0x00	; 0
     e1e:	1d c0       	rjmp	.+58     	; 0xe5a <vfprintf+0x544>
     e20:	09 7f       	andi	r16, 0xF9	; 249
     e22:	8f 36       	cpi	r24, 0x6F	; 111
     e24:	91 f0       	breq	.+36     	; 0xe4a <vfprintf+0x534>
     e26:	18 f4       	brcc	.+6      	; 0xe2e <vfprintf+0x518>
     e28:	88 35       	cpi	r24, 0x58	; 88
     e2a:	59 f0       	breq	.+22     	; 0xe42 <vfprintf+0x52c>
     e2c:	c3 c0       	rjmp	.+390    	; 0xfb4 <vfprintf+0x69e>
     e2e:	80 37       	cpi	r24, 0x70	; 112
     e30:	19 f0       	breq	.+6      	; 0xe38 <vfprintf+0x522>
     e32:	88 37       	cpi	r24, 0x78	; 120
     e34:	11 f0       	breq	.+4      	; 0xe3a <vfprintf+0x524>
     e36:	be c0       	rjmp	.+380    	; 0xfb4 <vfprintf+0x69e>
     e38:	00 61       	ori	r16, 0x10	; 16
     e3a:	04 ff       	sbrs	r16, 4
     e3c:	09 c0       	rjmp	.+18     	; 0xe50 <vfprintf+0x53a>
     e3e:	04 60       	ori	r16, 0x04	; 4
     e40:	07 c0       	rjmp	.+14     	; 0xe50 <vfprintf+0x53a>
     e42:	94 fe       	sbrs	r9, 4
     e44:	08 c0       	rjmp	.+16     	; 0xe56 <vfprintf+0x540>
     e46:	06 60       	ori	r16, 0x06	; 6
     e48:	06 c0       	rjmp	.+12     	; 0xe56 <vfprintf+0x540>
     e4a:	28 e0       	ldi	r18, 0x08	; 8
     e4c:	30 e0       	ldi	r19, 0x00	; 0
     e4e:	05 c0       	rjmp	.+10     	; 0xe5a <vfprintf+0x544>
     e50:	20 e1       	ldi	r18, 0x10	; 16
     e52:	30 e0       	ldi	r19, 0x00	; 0
     e54:	02 c0       	rjmp	.+4      	; 0xe5a <vfprintf+0x544>
     e56:	20 e1       	ldi	r18, 0x10	; 16
     e58:	32 e0       	ldi	r19, 0x02	; 2
     e5a:	56 01       	movw	r10, r12
     e5c:	07 ff       	sbrs	r16, 7
     e5e:	09 c0       	rjmp	.+18     	; 0xe72 <vfprintf+0x55c>
     e60:	84 e0       	ldi	r24, 0x04	; 4
     e62:	a8 0e       	add	r10, r24
     e64:	b1 1c       	adc	r11, r1
     e66:	f6 01       	movw	r30, r12
     e68:	60 81       	ld	r22, Z
     e6a:	71 81       	ldd	r23, Z+1	; 0x01
     e6c:	82 81       	ldd	r24, Z+2	; 0x02
     e6e:	93 81       	ldd	r25, Z+3	; 0x03
     e70:	08 c0       	rjmp	.+16     	; 0xe82 <vfprintf+0x56c>
     e72:	f2 e0       	ldi	r31, 0x02	; 2
     e74:	af 0e       	add	r10, r31
     e76:	b1 1c       	adc	r11, r1
     e78:	f6 01       	movw	r30, r12
     e7a:	60 81       	ld	r22, Z
     e7c:	71 81       	ldd	r23, Z+1	; 0x01
     e7e:	80 e0       	ldi	r24, 0x00	; 0
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	a3 01       	movw	r20, r6
     e84:	0e 94 1b 0b 	call	0x1636	; 0x1636 <__ultoa_invert>
     e88:	c8 2e       	mov	r12, r24
     e8a:	c6 18       	sub	r12, r6
     e8c:	0f 77       	andi	r16, 0x7F	; 127
     e8e:	90 2e       	mov	r9, r16
     e90:	96 fe       	sbrs	r9, 6
     e92:	0b c0       	rjmp	.+22     	; 0xeaa <vfprintf+0x594>
     e94:	09 2d       	mov	r16, r9
     e96:	0e 7f       	andi	r16, 0xFE	; 254
     e98:	c1 16       	cp	r12, r17
     e9a:	50 f4       	brcc	.+20     	; 0xeb0 <vfprintf+0x59a>
     e9c:	94 fe       	sbrs	r9, 4
     e9e:	0a c0       	rjmp	.+20     	; 0xeb4 <vfprintf+0x59e>
     ea0:	92 fc       	sbrc	r9, 2
     ea2:	08 c0       	rjmp	.+16     	; 0xeb4 <vfprintf+0x59e>
     ea4:	09 2d       	mov	r16, r9
     ea6:	0e 7e       	andi	r16, 0xEE	; 238
     ea8:	05 c0       	rjmp	.+10     	; 0xeb4 <vfprintf+0x59e>
     eaa:	dc 2c       	mov	r13, r12
     eac:	09 2d       	mov	r16, r9
     eae:	03 c0       	rjmp	.+6      	; 0xeb6 <vfprintf+0x5a0>
     eb0:	dc 2c       	mov	r13, r12
     eb2:	01 c0       	rjmp	.+2      	; 0xeb6 <vfprintf+0x5a0>
     eb4:	d1 2e       	mov	r13, r17
     eb6:	04 ff       	sbrs	r16, 4
     eb8:	0d c0       	rjmp	.+26     	; 0xed4 <vfprintf+0x5be>
     eba:	fe 01       	movw	r30, r28
     ebc:	ec 0d       	add	r30, r12
     ebe:	f1 1d       	adc	r31, r1
     ec0:	80 81       	ld	r24, Z
     ec2:	80 33       	cpi	r24, 0x30	; 48
     ec4:	11 f4       	brne	.+4      	; 0xeca <vfprintf+0x5b4>
     ec6:	09 7e       	andi	r16, 0xE9	; 233
     ec8:	09 c0       	rjmp	.+18     	; 0xedc <vfprintf+0x5c6>
     eca:	02 ff       	sbrs	r16, 2
     ecc:	06 c0       	rjmp	.+12     	; 0xeda <vfprintf+0x5c4>
     ece:	d3 94       	inc	r13
     ed0:	d3 94       	inc	r13
     ed2:	04 c0       	rjmp	.+8      	; 0xedc <vfprintf+0x5c6>
     ed4:	80 2f       	mov	r24, r16
     ed6:	86 78       	andi	r24, 0x86	; 134
     ed8:	09 f0       	breq	.+2      	; 0xedc <vfprintf+0x5c6>
     eda:	d3 94       	inc	r13
     edc:	03 fd       	sbrc	r16, 3
     ede:	11 c0       	rjmp	.+34     	; 0xf02 <vfprintf+0x5ec>
     ee0:	00 ff       	sbrs	r16, 0
     ee2:	06 c0       	rjmp	.+12     	; 0xef0 <vfprintf+0x5da>
     ee4:	1c 2d       	mov	r17, r12
     ee6:	d5 14       	cp	r13, r5
     ee8:	80 f4       	brcc	.+32     	; 0xf0a <vfprintf+0x5f4>
     eea:	15 0d       	add	r17, r5
     eec:	1d 19       	sub	r17, r13
     eee:	0d c0       	rjmp	.+26     	; 0xf0a <vfprintf+0x5f4>
     ef0:	d5 14       	cp	r13, r5
     ef2:	58 f4       	brcc	.+22     	; 0xf0a <vfprintf+0x5f4>
     ef4:	b7 01       	movw	r22, r14
     ef6:	80 e2       	ldi	r24, 0x20	; 32
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     efe:	d3 94       	inc	r13
     f00:	f7 cf       	rjmp	.-18     	; 0xef0 <vfprintf+0x5da>
     f02:	d5 14       	cp	r13, r5
     f04:	10 f4       	brcc	.+4      	; 0xf0a <vfprintf+0x5f4>
     f06:	5d 18       	sub	r5, r13
     f08:	01 c0       	rjmp	.+2      	; 0xf0c <vfprintf+0x5f6>
     f0a:	51 2c       	mov	r5, r1
     f0c:	04 ff       	sbrs	r16, 4
     f0e:	10 c0       	rjmp	.+32     	; 0xf30 <vfprintf+0x61a>
     f10:	b7 01       	movw	r22, r14
     f12:	80 e3       	ldi	r24, 0x30	; 48
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     f1a:	02 ff       	sbrs	r16, 2
     f1c:	17 c0       	rjmp	.+46     	; 0xf4c <vfprintf+0x636>
     f1e:	01 fd       	sbrc	r16, 1
     f20:	03 c0       	rjmp	.+6      	; 0xf28 <vfprintf+0x612>
     f22:	88 e7       	ldi	r24, 0x78	; 120
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	02 c0       	rjmp	.+4      	; 0xf2c <vfprintf+0x616>
     f28:	88 e5       	ldi	r24, 0x58	; 88
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	b7 01       	movw	r22, r14
     f2e:	0c c0       	rjmp	.+24     	; 0xf48 <vfprintf+0x632>
     f30:	80 2f       	mov	r24, r16
     f32:	86 78       	andi	r24, 0x86	; 134
     f34:	59 f0       	breq	.+22     	; 0xf4c <vfprintf+0x636>
     f36:	01 ff       	sbrs	r16, 1
     f38:	02 c0       	rjmp	.+4      	; 0xf3e <vfprintf+0x628>
     f3a:	8b e2       	ldi	r24, 0x2B	; 43
     f3c:	01 c0       	rjmp	.+2      	; 0xf40 <vfprintf+0x62a>
     f3e:	80 e2       	ldi	r24, 0x20	; 32
     f40:	07 fd       	sbrc	r16, 7
     f42:	8d e2       	ldi	r24, 0x2D	; 45
     f44:	b7 01       	movw	r22, r14
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     f4c:	c1 16       	cp	r12, r17
     f4e:	38 f4       	brcc	.+14     	; 0xf5e <vfprintf+0x648>
     f50:	b7 01       	movw	r22, r14
     f52:	80 e3       	ldi	r24, 0x30	; 48
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     f5a:	11 50       	subi	r17, 0x01	; 1
     f5c:	f7 cf       	rjmp	.-18     	; 0xf4c <vfprintf+0x636>
     f5e:	ca 94       	dec	r12
     f60:	f3 01       	movw	r30, r6
     f62:	ec 0d       	add	r30, r12
     f64:	f1 1d       	adc	r31, r1
     f66:	80 81       	ld	r24, Z
     f68:	b7 01       	movw	r22, r14
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     f70:	c1 10       	cpse	r12, r1
     f72:	f5 cf       	rjmp	.-22     	; 0xf5e <vfprintf+0x648>
     f74:	15 c0       	rjmp	.+42     	; 0xfa0 <vfprintf+0x68a>
     f76:	f4 e0       	ldi	r31, 0x04	; 4
     f78:	f5 15       	cp	r31, r5
     f7a:	60 f5       	brcc	.+88     	; 0xfd4 <vfprintf+0x6be>
     f7c:	84 e0       	ldi	r24, 0x04	; 4
     f7e:	58 1a       	sub	r5, r24
     f80:	93 fe       	sbrs	r9, 3
     f82:	1f c0       	rjmp	.+62     	; 0xfc2 <vfprintf+0x6ac>
     f84:	01 11       	cpse	r16, r1
     f86:	27 c0       	rjmp	.+78     	; 0xfd6 <vfprintf+0x6c0>
     f88:	2c 85       	ldd	r18, Y+12	; 0x0c
     f8a:	23 ff       	sbrs	r18, 3
     f8c:	2a c0       	rjmp	.+84     	; 0xfe2 <vfprintf+0x6cc>
     f8e:	0c e6       	ldi	r16, 0x6C	; 108
     f90:	10 e0       	ldi	r17, 0x00	; 0
     f92:	39 2d       	mov	r19, r9
     f94:	30 71       	andi	r19, 0x10	; 16
     f96:	93 2e       	mov	r9, r19
     f98:	f8 01       	movw	r30, r16
     f9a:	84 91       	lpm	r24, Z
     f9c:	81 11       	cpse	r24, r1
     f9e:	24 c0       	rjmp	.+72     	; 0xfe8 <vfprintf+0x6d2>
     fa0:	55 20       	and	r5, r5
     fa2:	09 f4       	brne	.+2      	; 0xfa6 <vfprintf+0x690>
     fa4:	e4 cc       	rjmp	.-1592   	; 0x96e <vfprintf+0x58>
     fa6:	b7 01       	movw	r22, r14
     fa8:	80 e2       	ldi	r24, 0x20	; 32
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     fb0:	5a 94       	dec	r5
     fb2:	f6 cf       	rjmp	.-20     	; 0xfa0 <vfprintf+0x68a>
     fb4:	f7 01       	movw	r30, r14
     fb6:	86 81       	ldd	r24, Z+6	; 0x06
     fb8:	97 81       	ldd	r25, Z+7	; 0x07
     fba:	26 c0       	rjmp	.+76     	; 0x1008 <vfprintf+0x6f2>
     fbc:	8f ef       	ldi	r24, 0xFF	; 255
     fbe:	9f ef       	ldi	r25, 0xFF	; 255
     fc0:	23 c0       	rjmp	.+70     	; 0x1008 <vfprintf+0x6f2>
     fc2:	b7 01       	movw	r22, r14
     fc4:	80 e2       	ldi	r24, 0x20	; 32
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     fcc:	5a 94       	dec	r5
     fce:	51 10       	cpse	r5, r1
     fd0:	f8 cf       	rjmp	.-16     	; 0xfc2 <vfprintf+0x6ac>
     fd2:	d8 cf       	rjmp	.-80     	; 0xf84 <vfprintf+0x66e>
     fd4:	51 2c       	mov	r5, r1
     fd6:	b7 01       	movw	r22, r14
     fd8:	80 2f       	mov	r24, r16
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     fe0:	d3 cf       	rjmp	.-90     	; 0xf88 <vfprintf+0x672>
     fe2:	00 e7       	ldi	r16, 0x70	; 112
     fe4:	10 e0       	ldi	r17, 0x00	; 0
     fe6:	d5 cf       	rjmp	.-86     	; 0xf92 <vfprintf+0x67c>
     fe8:	91 10       	cpse	r9, r1
     fea:	80 52       	subi	r24, 0x20	; 32
     fec:	b7 01       	movw	r22, r14
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	0e 94 df 0a 	call	0x15be	; 0x15be <fputc>
     ff4:	0f 5f       	subi	r16, 0xFF	; 255
     ff6:	1f 4f       	sbci	r17, 0xFF	; 255
     ff8:	cf cf       	rjmp	.-98     	; 0xf98 <vfprintf+0x682>
     ffa:	23 e0       	ldi	r18, 0x03	; 3
     ffc:	25 15       	cp	r18, r5
     ffe:	10 f4       	brcc	.+4      	; 0x1004 <vfprintf+0x6ee>
    1000:	83 e0       	ldi	r24, 0x03	; 3
    1002:	bd cf       	rjmp	.-134    	; 0xf7e <vfprintf+0x668>
    1004:	51 2c       	mov	r5, r1
    1006:	c0 cf       	rjmp	.-128    	; 0xf88 <vfprintf+0x672>
    1008:	60 96       	adiw	r28, 0x10	; 16
    100a:	e2 e1       	ldi	r30, 0x12	; 18
    100c:	0c 94 78 09 	jmp	0x12f0	; 0x12f0 <__epilogue_restores__>

00001010 <__divsf3>:
    1010:	0e 94 1c 08 	call	0x1038	; 0x1038 <__divsf3x>
    1014:	0c 94 fd 08 	jmp	0x11fa	; 0x11fa <__fp_round>
    1018:	0e 94 f6 08 	call	0x11ec	; 0x11ec <__fp_pscB>
    101c:	58 f0       	brcs	.+22     	; 0x1034 <__divsf3+0x24>
    101e:	0e 94 ef 08 	call	0x11de	; 0x11de <__fp_pscA>
    1022:	40 f0       	brcs	.+16     	; 0x1034 <__divsf3+0x24>
    1024:	29 f4       	brne	.+10     	; 0x1030 <__divsf3+0x20>
    1026:	5f 3f       	cpi	r21, 0xFF	; 255
    1028:	29 f0       	breq	.+10     	; 0x1034 <__divsf3+0x24>
    102a:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__fp_inf>
    102e:	51 11       	cpse	r21, r1
    1030:	0c 94 31 09 	jmp	0x1262	; 0x1262 <__fp_szero>
    1034:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <__fp_nan>

00001038 <__divsf3x>:
    1038:	0e 94 0e 09 	call	0x121c	; 0x121c <__fp_split3>
    103c:	68 f3       	brcs	.-38     	; 0x1018 <__divsf3+0x8>

0000103e <__divsf3_pse>:
    103e:	99 23       	and	r25, r25
    1040:	b1 f3       	breq	.-20     	; 0x102e <__divsf3+0x1e>
    1042:	55 23       	and	r21, r21
    1044:	91 f3       	breq	.-28     	; 0x102a <__divsf3+0x1a>
    1046:	95 1b       	sub	r25, r21
    1048:	55 0b       	sbc	r21, r21
    104a:	bb 27       	eor	r27, r27
    104c:	aa 27       	eor	r26, r26
    104e:	62 17       	cp	r22, r18
    1050:	73 07       	cpc	r23, r19
    1052:	84 07       	cpc	r24, r20
    1054:	38 f0       	brcs	.+14     	; 0x1064 <__divsf3_pse+0x26>
    1056:	9f 5f       	subi	r25, 0xFF	; 255
    1058:	5f 4f       	sbci	r21, 0xFF	; 255
    105a:	22 0f       	add	r18, r18
    105c:	33 1f       	adc	r19, r19
    105e:	44 1f       	adc	r20, r20
    1060:	aa 1f       	adc	r26, r26
    1062:	a9 f3       	breq	.-22     	; 0x104e <__divsf3_pse+0x10>
    1064:	35 d0       	rcall	.+106    	; 0x10d0 <__divsf3_pse+0x92>
    1066:	0e 2e       	mov	r0, r30
    1068:	3a f0       	brmi	.+14     	; 0x1078 <__divsf3_pse+0x3a>
    106a:	e0 e8       	ldi	r30, 0x80	; 128
    106c:	32 d0       	rcall	.+100    	; 0x10d2 <__divsf3_pse+0x94>
    106e:	91 50       	subi	r25, 0x01	; 1
    1070:	50 40       	sbci	r21, 0x00	; 0
    1072:	e6 95       	lsr	r30
    1074:	00 1c       	adc	r0, r0
    1076:	ca f7       	brpl	.-14     	; 0x106a <__divsf3_pse+0x2c>
    1078:	2b d0       	rcall	.+86     	; 0x10d0 <__divsf3_pse+0x92>
    107a:	fe 2f       	mov	r31, r30
    107c:	29 d0       	rcall	.+82     	; 0x10d0 <__divsf3_pse+0x92>
    107e:	66 0f       	add	r22, r22
    1080:	77 1f       	adc	r23, r23
    1082:	88 1f       	adc	r24, r24
    1084:	bb 1f       	adc	r27, r27
    1086:	26 17       	cp	r18, r22
    1088:	37 07       	cpc	r19, r23
    108a:	48 07       	cpc	r20, r24
    108c:	ab 07       	cpc	r26, r27
    108e:	b0 e8       	ldi	r27, 0x80	; 128
    1090:	09 f0       	breq	.+2      	; 0x1094 <__divsf3_pse+0x56>
    1092:	bb 0b       	sbc	r27, r27
    1094:	80 2d       	mov	r24, r0
    1096:	bf 01       	movw	r22, r30
    1098:	ff 27       	eor	r31, r31
    109a:	93 58       	subi	r25, 0x83	; 131
    109c:	5f 4f       	sbci	r21, 0xFF	; 255
    109e:	3a f0       	brmi	.+14     	; 0x10ae <__divsf3_pse+0x70>
    10a0:	9e 3f       	cpi	r25, 0xFE	; 254
    10a2:	51 05       	cpc	r21, r1
    10a4:	78 f0       	brcs	.+30     	; 0x10c4 <__divsf3_pse+0x86>
    10a6:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__fp_inf>
    10aa:	0c 94 31 09 	jmp	0x1262	; 0x1262 <__fp_szero>
    10ae:	5f 3f       	cpi	r21, 0xFF	; 255
    10b0:	e4 f3       	brlt	.-8      	; 0x10aa <__divsf3_pse+0x6c>
    10b2:	98 3e       	cpi	r25, 0xE8	; 232
    10b4:	d4 f3       	brlt	.-12     	; 0x10aa <__divsf3_pse+0x6c>
    10b6:	86 95       	lsr	r24
    10b8:	77 95       	ror	r23
    10ba:	67 95       	ror	r22
    10bc:	b7 95       	ror	r27
    10be:	f7 95       	ror	r31
    10c0:	9f 5f       	subi	r25, 0xFF	; 255
    10c2:	c9 f7       	brne	.-14     	; 0x10b6 <__divsf3_pse+0x78>
    10c4:	88 0f       	add	r24, r24
    10c6:	91 1d       	adc	r25, r1
    10c8:	96 95       	lsr	r25
    10ca:	87 95       	ror	r24
    10cc:	97 f9       	bld	r25, 7
    10ce:	08 95       	ret
    10d0:	e1 e0       	ldi	r30, 0x01	; 1
    10d2:	66 0f       	add	r22, r22
    10d4:	77 1f       	adc	r23, r23
    10d6:	88 1f       	adc	r24, r24
    10d8:	bb 1f       	adc	r27, r27
    10da:	62 17       	cp	r22, r18
    10dc:	73 07       	cpc	r23, r19
    10de:	84 07       	cpc	r24, r20
    10e0:	ba 07       	cpc	r27, r26
    10e2:	20 f0       	brcs	.+8      	; 0x10ec <__divsf3_pse+0xae>
    10e4:	62 1b       	sub	r22, r18
    10e6:	73 0b       	sbc	r23, r19
    10e8:	84 0b       	sbc	r24, r20
    10ea:	ba 0b       	sbc	r27, r26
    10ec:	ee 1f       	adc	r30, r30
    10ee:	88 f7       	brcc	.-30     	; 0x10d2 <__divsf3_pse+0x94>
    10f0:	e0 95       	com	r30
    10f2:	08 95       	ret

000010f4 <__fixunssfsi>:
    10f4:	0e 94 16 09 	call	0x122c	; 0x122c <__fp_splitA>
    10f8:	88 f0       	brcs	.+34     	; 0x111c <__fixunssfsi+0x28>
    10fa:	9f 57       	subi	r25, 0x7F	; 127
    10fc:	98 f0       	brcs	.+38     	; 0x1124 <__fixunssfsi+0x30>
    10fe:	b9 2f       	mov	r27, r25
    1100:	99 27       	eor	r25, r25
    1102:	b7 51       	subi	r27, 0x17	; 23
    1104:	b0 f0       	brcs	.+44     	; 0x1132 <__fixunssfsi+0x3e>
    1106:	e1 f0       	breq	.+56     	; 0x1140 <__fixunssfsi+0x4c>
    1108:	66 0f       	add	r22, r22
    110a:	77 1f       	adc	r23, r23
    110c:	88 1f       	adc	r24, r24
    110e:	99 1f       	adc	r25, r25
    1110:	1a f0       	brmi	.+6      	; 0x1118 <__fixunssfsi+0x24>
    1112:	ba 95       	dec	r27
    1114:	c9 f7       	brne	.-14     	; 0x1108 <__fixunssfsi+0x14>
    1116:	14 c0       	rjmp	.+40     	; 0x1140 <__fixunssfsi+0x4c>
    1118:	b1 30       	cpi	r27, 0x01	; 1
    111a:	91 f0       	breq	.+36     	; 0x1140 <__fixunssfsi+0x4c>
    111c:	0e 94 30 09 	call	0x1260	; 0x1260 <__fp_zero>
    1120:	b1 e0       	ldi	r27, 0x01	; 1
    1122:	08 95       	ret
    1124:	0c 94 30 09 	jmp	0x1260	; 0x1260 <__fp_zero>
    1128:	67 2f       	mov	r22, r23
    112a:	78 2f       	mov	r23, r24
    112c:	88 27       	eor	r24, r24
    112e:	b8 5f       	subi	r27, 0xF8	; 248
    1130:	39 f0       	breq	.+14     	; 0x1140 <__fixunssfsi+0x4c>
    1132:	b9 3f       	cpi	r27, 0xF9	; 249
    1134:	cc f3       	brlt	.-14     	; 0x1128 <__fixunssfsi+0x34>
    1136:	86 95       	lsr	r24
    1138:	77 95       	ror	r23
    113a:	67 95       	ror	r22
    113c:	b3 95       	inc	r27
    113e:	d9 f7       	brne	.-10     	; 0x1136 <__fixunssfsi+0x42>
    1140:	3e f4       	brtc	.+14     	; 0x1150 <__fixunssfsi+0x5c>
    1142:	90 95       	com	r25
    1144:	80 95       	com	r24
    1146:	70 95       	com	r23
    1148:	61 95       	neg	r22
    114a:	7f 4f       	sbci	r23, 0xFF	; 255
    114c:	8f 4f       	sbci	r24, 0xFF	; 255
    114e:	9f 4f       	sbci	r25, 0xFF	; 255
    1150:	08 95       	ret

00001152 <__floatunsisf>:
    1152:	e8 94       	clt
    1154:	09 c0       	rjmp	.+18     	; 0x1168 <__floatsisf+0x12>

00001156 <__floatsisf>:
    1156:	97 fb       	bst	r25, 7
    1158:	3e f4       	brtc	.+14     	; 0x1168 <__floatsisf+0x12>
    115a:	90 95       	com	r25
    115c:	80 95       	com	r24
    115e:	70 95       	com	r23
    1160:	61 95       	neg	r22
    1162:	7f 4f       	sbci	r23, 0xFF	; 255
    1164:	8f 4f       	sbci	r24, 0xFF	; 255
    1166:	9f 4f       	sbci	r25, 0xFF	; 255
    1168:	99 23       	and	r25, r25
    116a:	a9 f0       	breq	.+42     	; 0x1196 <__floatsisf+0x40>
    116c:	f9 2f       	mov	r31, r25
    116e:	96 e9       	ldi	r25, 0x96	; 150
    1170:	bb 27       	eor	r27, r27
    1172:	93 95       	inc	r25
    1174:	f6 95       	lsr	r31
    1176:	87 95       	ror	r24
    1178:	77 95       	ror	r23
    117a:	67 95       	ror	r22
    117c:	b7 95       	ror	r27
    117e:	f1 11       	cpse	r31, r1
    1180:	f8 cf       	rjmp	.-16     	; 0x1172 <__floatsisf+0x1c>
    1182:	fa f4       	brpl	.+62     	; 0x11c2 <__floatsisf+0x6c>
    1184:	bb 0f       	add	r27, r27
    1186:	11 f4       	brne	.+4      	; 0x118c <__floatsisf+0x36>
    1188:	60 ff       	sbrs	r22, 0
    118a:	1b c0       	rjmp	.+54     	; 0x11c2 <__floatsisf+0x6c>
    118c:	6f 5f       	subi	r22, 0xFF	; 255
    118e:	7f 4f       	sbci	r23, 0xFF	; 255
    1190:	8f 4f       	sbci	r24, 0xFF	; 255
    1192:	9f 4f       	sbci	r25, 0xFF	; 255
    1194:	16 c0       	rjmp	.+44     	; 0x11c2 <__floatsisf+0x6c>
    1196:	88 23       	and	r24, r24
    1198:	11 f0       	breq	.+4      	; 0x119e <__floatsisf+0x48>
    119a:	96 e9       	ldi	r25, 0x96	; 150
    119c:	11 c0       	rjmp	.+34     	; 0x11c0 <__floatsisf+0x6a>
    119e:	77 23       	and	r23, r23
    11a0:	21 f0       	breq	.+8      	; 0x11aa <__floatsisf+0x54>
    11a2:	9e e8       	ldi	r25, 0x8E	; 142
    11a4:	87 2f       	mov	r24, r23
    11a6:	76 2f       	mov	r23, r22
    11a8:	05 c0       	rjmp	.+10     	; 0x11b4 <__floatsisf+0x5e>
    11aa:	66 23       	and	r22, r22
    11ac:	71 f0       	breq	.+28     	; 0x11ca <__floatsisf+0x74>
    11ae:	96 e8       	ldi	r25, 0x86	; 134
    11b0:	86 2f       	mov	r24, r22
    11b2:	70 e0       	ldi	r23, 0x00	; 0
    11b4:	60 e0       	ldi	r22, 0x00	; 0
    11b6:	2a f0       	brmi	.+10     	; 0x11c2 <__floatsisf+0x6c>
    11b8:	9a 95       	dec	r25
    11ba:	66 0f       	add	r22, r22
    11bc:	77 1f       	adc	r23, r23
    11be:	88 1f       	adc	r24, r24
    11c0:	da f7       	brpl	.-10     	; 0x11b8 <__floatsisf+0x62>
    11c2:	88 0f       	add	r24, r24
    11c4:	96 95       	lsr	r25
    11c6:	87 95       	ror	r24
    11c8:	97 f9       	bld	r25, 7
    11ca:	08 95       	ret

000011cc <__fp_inf>:
    11cc:	97 f9       	bld	r25, 7
    11ce:	9f 67       	ori	r25, 0x7F	; 127
    11d0:	80 e8       	ldi	r24, 0x80	; 128
    11d2:	70 e0       	ldi	r23, 0x00	; 0
    11d4:	60 e0       	ldi	r22, 0x00	; 0
    11d6:	08 95       	ret

000011d8 <__fp_nan>:
    11d8:	9f ef       	ldi	r25, 0xFF	; 255
    11da:	80 ec       	ldi	r24, 0xC0	; 192
    11dc:	08 95       	ret

000011de <__fp_pscA>:
    11de:	00 24       	eor	r0, r0
    11e0:	0a 94       	dec	r0
    11e2:	16 16       	cp	r1, r22
    11e4:	17 06       	cpc	r1, r23
    11e6:	18 06       	cpc	r1, r24
    11e8:	09 06       	cpc	r0, r25
    11ea:	08 95       	ret

000011ec <__fp_pscB>:
    11ec:	00 24       	eor	r0, r0
    11ee:	0a 94       	dec	r0
    11f0:	12 16       	cp	r1, r18
    11f2:	13 06       	cpc	r1, r19
    11f4:	14 06       	cpc	r1, r20
    11f6:	05 06       	cpc	r0, r21
    11f8:	08 95       	ret

000011fa <__fp_round>:
    11fa:	09 2e       	mov	r0, r25
    11fc:	03 94       	inc	r0
    11fe:	00 0c       	add	r0, r0
    1200:	11 f4       	brne	.+4      	; 0x1206 <__fp_round+0xc>
    1202:	88 23       	and	r24, r24
    1204:	52 f0       	brmi	.+20     	; 0x121a <__fp_round+0x20>
    1206:	bb 0f       	add	r27, r27
    1208:	40 f4       	brcc	.+16     	; 0x121a <__fp_round+0x20>
    120a:	bf 2b       	or	r27, r31
    120c:	11 f4       	brne	.+4      	; 0x1212 <__fp_round+0x18>
    120e:	60 ff       	sbrs	r22, 0
    1210:	04 c0       	rjmp	.+8      	; 0x121a <__fp_round+0x20>
    1212:	6f 5f       	subi	r22, 0xFF	; 255
    1214:	7f 4f       	sbci	r23, 0xFF	; 255
    1216:	8f 4f       	sbci	r24, 0xFF	; 255
    1218:	9f 4f       	sbci	r25, 0xFF	; 255
    121a:	08 95       	ret

0000121c <__fp_split3>:
    121c:	57 fd       	sbrc	r21, 7
    121e:	90 58       	subi	r25, 0x80	; 128
    1220:	44 0f       	add	r20, r20
    1222:	55 1f       	adc	r21, r21
    1224:	59 f0       	breq	.+22     	; 0x123c <__fp_splitA+0x10>
    1226:	5f 3f       	cpi	r21, 0xFF	; 255
    1228:	71 f0       	breq	.+28     	; 0x1246 <__fp_splitA+0x1a>
    122a:	47 95       	ror	r20

0000122c <__fp_splitA>:
    122c:	88 0f       	add	r24, r24
    122e:	97 fb       	bst	r25, 7
    1230:	99 1f       	adc	r25, r25
    1232:	61 f0       	breq	.+24     	; 0x124c <__fp_splitA+0x20>
    1234:	9f 3f       	cpi	r25, 0xFF	; 255
    1236:	79 f0       	breq	.+30     	; 0x1256 <__fp_splitA+0x2a>
    1238:	87 95       	ror	r24
    123a:	08 95       	ret
    123c:	12 16       	cp	r1, r18
    123e:	13 06       	cpc	r1, r19
    1240:	14 06       	cpc	r1, r20
    1242:	55 1f       	adc	r21, r21
    1244:	f2 cf       	rjmp	.-28     	; 0x122a <__fp_split3+0xe>
    1246:	46 95       	lsr	r20
    1248:	f1 df       	rcall	.-30     	; 0x122c <__fp_splitA>
    124a:	08 c0       	rjmp	.+16     	; 0x125c <__fp_splitA+0x30>
    124c:	16 16       	cp	r1, r22
    124e:	17 06       	cpc	r1, r23
    1250:	18 06       	cpc	r1, r24
    1252:	99 1f       	adc	r25, r25
    1254:	f1 cf       	rjmp	.-30     	; 0x1238 <__fp_splitA+0xc>
    1256:	86 95       	lsr	r24
    1258:	71 05       	cpc	r23, r1
    125a:	61 05       	cpc	r22, r1
    125c:	08 94       	sec
    125e:	08 95       	ret

00001260 <__fp_zero>:
    1260:	e8 94       	clt

00001262 <__fp_szero>:
    1262:	bb 27       	eor	r27, r27
    1264:	66 27       	eor	r22, r22
    1266:	77 27       	eor	r23, r23
    1268:	cb 01       	movw	r24, r22
    126a:	97 f9       	bld	r25, 7
    126c:	08 95       	ret

0000126e <__divmodsi4>:
    126e:	05 2e       	mov	r0, r21
    1270:	97 fb       	bst	r25, 7
    1272:	1e f4       	brtc	.+6      	; 0x127a <__divmodsi4+0xc>
    1274:	00 94       	com	r0
    1276:	0e 94 4e 09 	call	0x129c	; 0x129c <__negsi2>
    127a:	57 fd       	sbrc	r21, 7
    127c:	07 d0       	rcall	.+14     	; 0x128c <__divmodsi4_neg2>
    127e:	0e 94 93 09 	call	0x1326	; 0x1326 <__udivmodsi4>
    1282:	07 fc       	sbrc	r0, 7
    1284:	03 d0       	rcall	.+6      	; 0x128c <__divmodsi4_neg2>
    1286:	4e f4       	brtc	.+18     	; 0x129a <__divmodsi4_exit>
    1288:	0c 94 4e 09 	jmp	0x129c	; 0x129c <__negsi2>

0000128c <__divmodsi4_neg2>:
    128c:	50 95       	com	r21
    128e:	40 95       	com	r20
    1290:	30 95       	com	r19
    1292:	21 95       	neg	r18
    1294:	3f 4f       	sbci	r19, 0xFF	; 255
    1296:	4f 4f       	sbci	r20, 0xFF	; 255
    1298:	5f 4f       	sbci	r21, 0xFF	; 255

0000129a <__divmodsi4_exit>:
    129a:	08 95       	ret

0000129c <__negsi2>:
    129c:	90 95       	com	r25
    129e:	80 95       	com	r24
    12a0:	70 95       	com	r23
    12a2:	61 95       	neg	r22
    12a4:	7f 4f       	sbci	r23, 0xFF	; 255
    12a6:	8f 4f       	sbci	r24, 0xFF	; 255
    12a8:	9f 4f       	sbci	r25, 0xFF	; 255
    12aa:	08 95       	ret

000012ac <__tablejump2__>:
    12ac:	ee 0f       	add	r30, r30
    12ae:	ff 1f       	adc	r31, r31
    12b0:	05 90       	lpm	r0, Z+
    12b2:	f4 91       	lpm	r31, Z
    12b4:	e0 2d       	mov	r30, r0
    12b6:	09 94       	ijmp

000012b8 <__prologue_saves__>:
    12b8:	2f 92       	push	r2
    12ba:	3f 92       	push	r3
    12bc:	4f 92       	push	r4
    12be:	5f 92       	push	r5
    12c0:	6f 92       	push	r6
    12c2:	7f 92       	push	r7
    12c4:	8f 92       	push	r8
    12c6:	9f 92       	push	r9
    12c8:	af 92       	push	r10
    12ca:	bf 92       	push	r11
    12cc:	cf 92       	push	r12
    12ce:	df 92       	push	r13
    12d0:	ef 92       	push	r14
    12d2:	ff 92       	push	r15
    12d4:	0f 93       	push	r16
    12d6:	1f 93       	push	r17
    12d8:	cf 93       	push	r28
    12da:	df 93       	push	r29
    12dc:	cd b7       	in	r28, 0x3d	; 61
    12de:	de b7       	in	r29, 0x3e	; 62
    12e0:	ca 1b       	sub	r28, r26
    12e2:	db 0b       	sbc	r29, r27
    12e4:	0f b6       	in	r0, 0x3f	; 63
    12e6:	f8 94       	cli
    12e8:	de bf       	out	0x3e, r29	; 62
    12ea:	0f be       	out	0x3f, r0	; 63
    12ec:	cd bf       	out	0x3d, r28	; 61
    12ee:	09 94       	ijmp

000012f0 <__epilogue_restores__>:
    12f0:	2a 88       	ldd	r2, Y+18	; 0x12
    12f2:	39 88       	ldd	r3, Y+17	; 0x11
    12f4:	48 88       	ldd	r4, Y+16	; 0x10
    12f6:	5f 84       	ldd	r5, Y+15	; 0x0f
    12f8:	6e 84       	ldd	r6, Y+14	; 0x0e
    12fa:	7d 84       	ldd	r7, Y+13	; 0x0d
    12fc:	8c 84       	ldd	r8, Y+12	; 0x0c
    12fe:	9b 84       	ldd	r9, Y+11	; 0x0b
    1300:	aa 84       	ldd	r10, Y+10	; 0x0a
    1302:	b9 84       	ldd	r11, Y+9	; 0x09
    1304:	c8 84       	ldd	r12, Y+8	; 0x08
    1306:	df 80       	ldd	r13, Y+7	; 0x07
    1308:	ee 80       	ldd	r14, Y+6	; 0x06
    130a:	fd 80       	ldd	r15, Y+5	; 0x05
    130c:	0c 81       	ldd	r16, Y+4	; 0x04
    130e:	1b 81       	ldd	r17, Y+3	; 0x03
    1310:	aa 81       	ldd	r26, Y+2	; 0x02
    1312:	b9 81       	ldd	r27, Y+1	; 0x01
    1314:	ce 0f       	add	r28, r30
    1316:	d1 1d       	adc	r29, r1
    1318:	0f b6       	in	r0, 0x3f	; 63
    131a:	f8 94       	cli
    131c:	de bf       	out	0x3e, r29	; 62
    131e:	0f be       	out	0x3f, r0	; 63
    1320:	cd bf       	out	0x3d, r28	; 61
    1322:	ed 01       	movw	r28, r26
    1324:	08 95       	ret

00001326 <__udivmodsi4>:
    1326:	a1 e2       	ldi	r26, 0x21	; 33
    1328:	1a 2e       	mov	r1, r26
    132a:	aa 1b       	sub	r26, r26
    132c:	bb 1b       	sub	r27, r27
    132e:	fd 01       	movw	r30, r26
    1330:	0d c0       	rjmp	.+26     	; 0x134c <__udivmodsi4_ep>

00001332 <__udivmodsi4_loop>:
    1332:	aa 1f       	adc	r26, r26
    1334:	bb 1f       	adc	r27, r27
    1336:	ee 1f       	adc	r30, r30
    1338:	ff 1f       	adc	r31, r31
    133a:	a2 17       	cp	r26, r18
    133c:	b3 07       	cpc	r27, r19
    133e:	e4 07       	cpc	r30, r20
    1340:	f5 07       	cpc	r31, r21
    1342:	20 f0       	brcs	.+8      	; 0x134c <__udivmodsi4_ep>
    1344:	a2 1b       	sub	r26, r18
    1346:	b3 0b       	sbc	r27, r19
    1348:	e4 0b       	sbc	r30, r20
    134a:	f5 0b       	sbc	r31, r21

0000134c <__udivmodsi4_ep>:
    134c:	66 1f       	adc	r22, r22
    134e:	77 1f       	adc	r23, r23
    1350:	88 1f       	adc	r24, r24
    1352:	99 1f       	adc	r25, r25
    1354:	1a 94       	dec	r1
    1356:	69 f7       	brne	.-38     	; 0x1332 <__udivmodsi4_loop>
    1358:	60 95       	com	r22
    135a:	70 95       	com	r23
    135c:	80 95       	com	r24
    135e:	90 95       	com	r25
    1360:	9b 01       	movw	r18, r22
    1362:	ac 01       	movw	r20, r24
    1364:	bd 01       	movw	r22, r26
    1366:	cf 01       	movw	r24, r30
    1368:	08 95       	ret

0000136a <__ftoa_engine>:
    136a:	28 30       	cpi	r18, 0x08	; 8
    136c:	08 f0       	brcs	.+2      	; 0x1370 <__ftoa_engine+0x6>
    136e:	27 e0       	ldi	r18, 0x07	; 7
    1370:	33 27       	eor	r19, r19
    1372:	da 01       	movw	r26, r20
    1374:	99 0f       	add	r25, r25
    1376:	31 1d       	adc	r19, r1
    1378:	87 fd       	sbrc	r24, 7
    137a:	91 60       	ori	r25, 0x01	; 1
    137c:	00 96       	adiw	r24, 0x00	; 0
    137e:	61 05       	cpc	r22, r1
    1380:	71 05       	cpc	r23, r1
    1382:	39 f4       	brne	.+14     	; 0x1392 <__ftoa_engine+0x28>
    1384:	32 60       	ori	r19, 0x02	; 2
    1386:	2e 5f       	subi	r18, 0xFE	; 254
    1388:	3d 93       	st	X+, r19
    138a:	30 e3       	ldi	r19, 0x30	; 48
    138c:	2a 95       	dec	r18
    138e:	e1 f7       	brne	.-8      	; 0x1388 <__ftoa_engine+0x1e>
    1390:	08 95       	ret
    1392:	9f 3f       	cpi	r25, 0xFF	; 255
    1394:	30 f0       	brcs	.+12     	; 0x13a2 <__ftoa_engine+0x38>
    1396:	80 38       	cpi	r24, 0x80	; 128
    1398:	71 05       	cpc	r23, r1
    139a:	61 05       	cpc	r22, r1
    139c:	09 f0       	breq	.+2      	; 0x13a0 <__ftoa_engine+0x36>
    139e:	3c 5f       	subi	r19, 0xFC	; 252
    13a0:	3c 5f       	subi	r19, 0xFC	; 252
    13a2:	3d 93       	st	X+, r19
    13a4:	91 30       	cpi	r25, 0x01	; 1
    13a6:	08 f0       	brcs	.+2      	; 0x13aa <__ftoa_engine+0x40>
    13a8:	80 68       	ori	r24, 0x80	; 128
    13aa:	91 1d       	adc	r25, r1
    13ac:	df 93       	push	r29
    13ae:	cf 93       	push	r28
    13b0:	1f 93       	push	r17
    13b2:	0f 93       	push	r16
    13b4:	ff 92       	push	r15
    13b6:	ef 92       	push	r14
    13b8:	19 2f       	mov	r17, r25
    13ba:	98 7f       	andi	r25, 0xF8	; 248
    13bc:	96 95       	lsr	r25
    13be:	e9 2f       	mov	r30, r25
    13c0:	96 95       	lsr	r25
    13c2:	96 95       	lsr	r25
    13c4:	e9 0f       	add	r30, r25
    13c6:	ff 27       	eor	r31, r31
    13c8:	e2 53       	subi	r30, 0x32	; 50
    13ca:	ff 4f       	sbci	r31, 0xFF	; 255
    13cc:	99 27       	eor	r25, r25
    13ce:	33 27       	eor	r19, r19
    13d0:	ee 24       	eor	r14, r14
    13d2:	ff 24       	eor	r15, r15
    13d4:	a7 01       	movw	r20, r14
    13d6:	e7 01       	movw	r28, r14
    13d8:	05 90       	lpm	r0, Z+
    13da:	08 94       	sec
    13dc:	07 94       	ror	r0
    13de:	28 f4       	brcc	.+10     	; 0x13ea <__ftoa_engine+0x80>
    13e0:	36 0f       	add	r19, r22
    13e2:	e7 1e       	adc	r14, r23
    13e4:	f8 1e       	adc	r15, r24
    13e6:	49 1f       	adc	r20, r25
    13e8:	51 1d       	adc	r21, r1
    13ea:	66 0f       	add	r22, r22
    13ec:	77 1f       	adc	r23, r23
    13ee:	88 1f       	adc	r24, r24
    13f0:	99 1f       	adc	r25, r25
    13f2:	06 94       	lsr	r0
    13f4:	a1 f7       	brne	.-24     	; 0x13de <__ftoa_engine+0x74>
    13f6:	05 90       	lpm	r0, Z+
    13f8:	07 94       	ror	r0
    13fa:	28 f4       	brcc	.+10     	; 0x1406 <__ftoa_engine+0x9c>
    13fc:	e7 0e       	add	r14, r23
    13fe:	f8 1e       	adc	r15, r24
    1400:	49 1f       	adc	r20, r25
    1402:	56 1f       	adc	r21, r22
    1404:	c1 1d       	adc	r28, r1
    1406:	77 0f       	add	r23, r23
    1408:	88 1f       	adc	r24, r24
    140a:	99 1f       	adc	r25, r25
    140c:	66 1f       	adc	r22, r22
    140e:	06 94       	lsr	r0
    1410:	a1 f7       	brne	.-24     	; 0x13fa <__ftoa_engine+0x90>
    1412:	05 90       	lpm	r0, Z+
    1414:	07 94       	ror	r0
    1416:	28 f4       	brcc	.+10     	; 0x1422 <__ftoa_engine+0xb8>
    1418:	f8 0e       	add	r15, r24
    141a:	49 1f       	adc	r20, r25
    141c:	56 1f       	adc	r21, r22
    141e:	c7 1f       	adc	r28, r23
    1420:	d1 1d       	adc	r29, r1
    1422:	88 0f       	add	r24, r24
    1424:	99 1f       	adc	r25, r25
    1426:	66 1f       	adc	r22, r22
    1428:	77 1f       	adc	r23, r23
    142a:	06 94       	lsr	r0
    142c:	a1 f7       	brne	.-24     	; 0x1416 <__ftoa_engine+0xac>
    142e:	05 90       	lpm	r0, Z+
    1430:	07 94       	ror	r0
    1432:	20 f4       	brcc	.+8      	; 0x143c <__ftoa_engine+0xd2>
    1434:	49 0f       	add	r20, r25
    1436:	56 1f       	adc	r21, r22
    1438:	c7 1f       	adc	r28, r23
    143a:	d8 1f       	adc	r29, r24
    143c:	99 0f       	add	r25, r25
    143e:	66 1f       	adc	r22, r22
    1440:	77 1f       	adc	r23, r23
    1442:	88 1f       	adc	r24, r24
    1444:	06 94       	lsr	r0
    1446:	a9 f7       	brne	.-22     	; 0x1432 <__ftoa_engine+0xc8>
    1448:	84 91       	lpm	r24, Z
    144a:	10 95       	com	r17
    144c:	17 70       	andi	r17, 0x07	; 7
    144e:	41 f0       	breq	.+16     	; 0x1460 <__ftoa_engine+0xf6>
    1450:	d6 95       	lsr	r29
    1452:	c7 95       	ror	r28
    1454:	57 95       	ror	r21
    1456:	47 95       	ror	r20
    1458:	f7 94       	ror	r15
    145a:	e7 94       	ror	r14
    145c:	1a 95       	dec	r17
    145e:	c1 f7       	brne	.-16     	; 0x1450 <__ftoa_engine+0xe6>
    1460:	e4 e7       	ldi	r30, 0x74	; 116
    1462:	f0 e0       	ldi	r31, 0x00	; 0
    1464:	68 94       	set
    1466:	15 90       	lpm	r1, Z+
    1468:	15 91       	lpm	r17, Z+
    146a:	35 91       	lpm	r19, Z+
    146c:	65 91       	lpm	r22, Z+
    146e:	95 91       	lpm	r25, Z+
    1470:	05 90       	lpm	r0, Z+
    1472:	7f e2       	ldi	r23, 0x2F	; 47
    1474:	73 95       	inc	r23
    1476:	e1 18       	sub	r14, r1
    1478:	f1 0a       	sbc	r15, r17
    147a:	43 0b       	sbc	r20, r19
    147c:	56 0b       	sbc	r21, r22
    147e:	c9 0b       	sbc	r28, r25
    1480:	d0 09       	sbc	r29, r0
    1482:	c0 f7       	brcc	.-16     	; 0x1474 <__ftoa_engine+0x10a>
    1484:	e1 0c       	add	r14, r1
    1486:	f1 1e       	adc	r15, r17
    1488:	43 1f       	adc	r20, r19
    148a:	56 1f       	adc	r21, r22
    148c:	c9 1f       	adc	r28, r25
    148e:	d0 1d       	adc	r29, r0
    1490:	7e f4       	brtc	.+30     	; 0x14b0 <__ftoa_engine+0x146>
    1492:	70 33       	cpi	r23, 0x30	; 48
    1494:	11 f4       	brne	.+4      	; 0x149a <__ftoa_engine+0x130>
    1496:	8a 95       	dec	r24
    1498:	e6 cf       	rjmp	.-52     	; 0x1466 <__ftoa_engine+0xfc>
    149a:	e8 94       	clt
    149c:	01 50       	subi	r16, 0x01	; 1
    149e:	30 f0       	brcs	.+12     	; 0x14ac <__ftoa_engine+0x142>
    14a0:	08 0f       	add	r16, r24
    14a2:	0a f4       	brpl	.+2      	; 0x14a6 <__ftoa_engine+0x13c>
    14a4:	00 27       	eor	r16, r16
    14a6:	02 17       	cp	r16, r18
    14a8:	08 f4       	brcc	.+2      	; 0x14ac <__ftoa_engine+0x142>
    14aa:	20 2f       	mov	r18, r16
    14ac:	23 95       	inc	r18
    14ae:	02 2f       	mov	r16, r18
    14b0:	7a 33       	cpi	r23, 0x3A	; 58
    14b2:	28 f0       	brcs	.+10     	; 0x14be <__ftoa_engine+0x154>
    14b4:	79 e3       	ldi	r23, 0x39	; 57
    14b6:	7d 93       	st	X+, r23
    14b8:	2a 95       	dec	r18
    14ba:	e9 f7       	brne	.-6      	; 0x14b6 <__ftoa_engine+0x14c>
    14bc:	10 c0       	rjmp	.+32     	; 0x14de <__ftoa_engine+0x174>
    14be:	7d 93       	st	X+, r23
    14c0:	2a 95       	dec	r18
    14c2:	89 f6       	brne	.-94     	; 0x1466 <__ftoa_engine+0xfc>
    14c4:	06 94       	lsr	r0
    14c6:	97 95       	ror	r25
    14c8:	67 95       	ror	r22
    14ca:	37 95       	ror	r19
    14cc:	17 95       	ror	r17
    14ce:	17 94       	ror	r1
    14d0:	e1 18       	sub	r14, r1
    14d2:	f1 0a       	sbc	r15, r17
    14d4:	43 0b       	sbc	r20, r19
    14d6:	56 0b       	sbc	r21, r22
    14d8:	c9 0b       	sbc	r28, r25
    14da:	d0 09       	sbc	r29, r0
    14dc:	98 f0       	brcs	.+38     	; 0x1504 <__ftoa_engine+0x19a>
    14de:	23 95       	inc	r18
    14e0:	7e 91       	ld	r23, -X
    14e2:	73 95       	inc	r23
    14e4:	7a 33       	cpi	r23, 0x3A	; 58
    14e6:	08 f0       	brcs	.+2      	; 0x14ea <__ftoa_engine+0x180>
    14e8:	70 e3       	ldi	r23, 0x30	; 48
    14ea:	7c 93       	st	X, r23
    14ec:	20 13       	cpse	r18, r16
    14ee:	b8 f7       	brcc	.-18     	; 0x14de <__ftoa_engine+0x174>
    14f0:	7e 91       	ld	r23, -X
    14f2:	70 61       	ori	r23, 0x10	; 16
    14f4:	7d 93       	st	X+, r23
    14f6:	30 f0       	brcs	.+12     	; 0x1504 <__ftoa_engine+0x19a>
    14f8:	83 95       	inc	r24
    14fa:	71 e3       	ldi	r23, 0x31	; 49
    14fc:	7d 93       	st	X+, r23
    14fe:	70 e3       	ldi	r23, 0x30	; 48
    1500:	2a 95       	dec	r18
    1502:	e1 f7       	brne	.-8      	; 0x14fc <__ftoa_engine+0x192>
    1504:	11 24       	eor	r1, r1
    1506:	ef 90       	pop	r14
    1508:	ff 90       	pop	r15
    150a:	0f 91       	pop	r16
    150c:	1f 91       	pop	r17
    150e:	cf 91       	pop	r28
    1510:	df 91       	pop	r29
    1512:	99 27       	eor	r25, r25
    1514:	87 fd       	sbrc	r24, 7
    1516:	90 95       	com	r25
    1518:	08 95       	ret

0000151a <strnlen_P>:
    151a:	fc 01       	movw	r30, r24
    151c:	05 90       	lpm	r0, Z+
    151e:	61 50       	subi	r22, 0x01	; 1
    1520:	70 40       	sbci	r23, 0x00	; 0
    1522:	01 10       	cpse	r0, r1
    1524:	d8 f7       	brcc	.-10     	; 0x151c <strnlen_P+0x2>
    1526:	80 95       	com	r24
    1528:	90 95       	com	r25
    152a:	8e 0f       	add	r24, r30
    152c:	9f 1f       	adc	r25, r31
    152e:	08 95       	ret

00001530 <strnlen>:
    1530:	fc 01       	movw	r30, r24
    1532:	61 50       	subi	r22, 0x01	; 1
    1534:	70 40       	sbci	r23, 0x00	; 0
    1536:	01 90       	ld	r0, Z+
    1538:	01 10       	cpse	r0, r1
    153a:	d8 f7       	brcc	.-10     	; 0x1532 <strnlen+0x2>
    153c:	80 95       	com	r24
    153e:	90 95       	com	r25
    1540:	8e 0f       	add	r24, r30
    1542:	9f 1f       	adc	r25, r31
    1544:	08 95       	ret

00001546 <ltoa>:
    1546:	25 32       	cpi	r18, 0x25	; 37
    1548:	31 05       	cpc	r19, r1
    154a:	20 f4       	brcc	.+8      	; 0x1554 <ltoa+0xe>
    154c:	22 30       	cpi	r18, 0x02	; 2
    154e:	10 f0       	brcs	.+4      	; 0x1554 <ltoa+0xe>
    1550:	0c 94 ae 0a 	jmp	0x155c	; 0x155c <__ltoa_ncheck>
    1554:	fa 01       	movw	r30, r20
    1556:	10 82       	st	Z, r1
    1558:	ca 01       	movw	r24, r20
    155a:	08 95       	ret

0000155c <__ltoa_ncheck>:
    155c:	bb 27       	eor	r27, r27
    155e:	2a 30       	cpi	r18, 0x0A	; 10
    1560:	51 f4       	brne	.+20     	; 0x1576 <__ltoa_ncheck+0x1a>
    1562:	99 23       	and	r25, r25
    1564:	42 f4       	brpl	.+16     	; 0x1576 <__ltoa_ncheck+0x1a>
    1566:	bd e2       	ldi	r27, 0x2D	; 45
    1568:	90 95       	com	r25
    156a:	80 95       	com	r24
    156c:	70 95       	com	r23
    156e:	61 95       	neg	r22
    1570:	7f 4f       	sbci	r23, 0xFF	; 255
    1572:	8f 4f       	sbci	r24, 0xFF	; 255
    1574:	9f 4f       	sbci	r25, 0xFF	; 255
    1576:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__ultoa_common>

0000157a <__ultoa_ncheck>:
    157a:	bb 27       	eor	r27, r27

0000157c <__ultoa_common>:
    157c:	fa 01       	movw	r30, r20
    157e:	a6 2f       	mov	r26, r22
    1580:	62 17       	cp	r22, r18
    1582:	71 05       	cpc	r23, r1
    1584:	81 05       	cpc	r24, r1
    1586:	91 05       	cpc	r25, r1
    1588:	33 0b       	sbc	r19, r19
    158a:	30 fb       	bst	r19, 0
    158c:	66 f0       	brts	.+24     	; 0x15a6 <__ultoa_common+0x2a>
    158e:	aa 27       	eor	r26, r26
    1590:	66 0f       	add	r22, r22
    1592:	77 1f       	adc	r23, r23
    1594:	88 1f       	adc	r24, r24
    1596:	99 1f       	adc	r25, r25
    1598:	aa 1f       	adc	r26, r26
    159a:	a2 17       	cp	r26, r18
    159c:	10 f0       	brcs	.+4      	; 0x15a2 <__ultoa_common+0x26>
    159e:	a2 1b       	sub	r26, r18
    15a0:	63 95       	inc	r22
    15a2:	38 50       	subi	r19, 0x08	; 8
    15a4:	a9 f7       	brne	.-22     	; 0x1590 <__ultoa_common+0x14>
    15a6:	a0 5d       	subi	r26, 0xD0	; 208
    15a8:	aa 33       	cpi	r26, 0x3A	; 58
    15aa:	08 f0       	brcs	.+2      	; 0x15ae <__ultoa_common+0x32>
    15ac:	a9 5d       	subi	r26, 0xD9	; 217
    15ae:	a1 93       	st	Z+, r26
    15b0:	36 f7       	brtc	.-52     	; 0x157e <__ultoa_common+0x2>
    15b2:	b1 11       	cpse	r27, r1
    15b4:	b1 93       	st	Z+, r27
    15b6:	10 82       	st	Z, r1
    15b8:	ca 01       	movw	r24, r20
    15ba:	0c 94 79 0b 	jmp	0x16f2	; 0x16f2 <strrev>

000015be <fputc>:
    15be:	0f 93       	push	r16
    15c0:	1f 93       	push	r17
    15c2:	cf 93       	push	r28
    15c4:	df 93       	push	r29
    15c6:	fb 01       	movw	r30, r22
    15c8:	23 81       	ldd	r18, Z+3	; 0x03
    15ca:	21 fd       	sbrc	r18, 1
    15cc:	03 c0       	rjmp	.+6      	; 0x15d4 <fputc+0x16>
    15ce:	8f ef       	ldi	r24, 0xFF	; 255
    15d0:	9f ef       	ldi	r25, 0xFF	; 255
    15d2:	2c c0       	rjmp	.+88     	; 0x162c <fputc+0x6e>
    15d4:	22 ff       	sbrs	r18, 2
    15d6:	16 c0       	rjmp	.+44     	; 0x1604 <fputc+0x46>
    15d8:	46 81       	ldd	r20, Z+6	; 0x06
    15da:	57 81       	ldd	r21, Z+7	; 0x07
    15dc:	24 81       	ldd	r18, Z+4	; 0x04
    15de:	35 81       	ldd	r19, Z+5	; 0x05
    15e0:	42 17       	cp	r20, r18
    15e2:	53 07       	cpc	r21, r19
    15e4:	44 f4       	brge	.+16     	; 0x15f6 <fputc+0x38>
    15e6:	a0 81       	ld	r26, Z
    15e8:	b1 81       	ldd	r27, Z+1	; 0x01
    15ea:	9d 01       	movw	r18, r26
    15ec:	2f 5f       	subi	r18, 0xFF	; 255
    15ee:	3f 4f       	sbci	r19, 0xFF	; 255
    15f0:	31 83       	std	Z+1, r19	; 0x01
    15f2:	20 83       	st	Z, r18
    15f4:	8c 93       	st	X, r24
    15f6:	26 81       	ldd	r18, Z+6	; 0x06
    15f8:	37 81       	ldd	r19, Z+7	; 0x07
    15fa:	2f 5f       	subi	r18, 0xFF	; 255
    15fc:	3f 4f       	sbci	r19, 0xFF	; 255
    15fe:	37 83       	std	Z+7, r19	; 0x07
    1600:	26 83       	std	Z+6, r18	; 0x06
    1602:	14 c0       	rjmp	.+40     	; 0x162c <fputc+0x6e>
    1604:	8b 01       	movw	r16, r22
    1606:	ec 01       	movw	r28, r24
    1608:	fb 01       	movw	r30, r22
    160a:	00 84       	ldd	r0, Z+8	; 0x08
    160c:	f1 85       	ldd	r31, Z+9	; 0x09
    160e:	e0 2d       	mov	r30, r0
    1610:	09 95       	icall
    1612:	89 2b       	or	r24, r25
    1614:	e1 f6       	brne	.-72     	; 0x15ce <fputc+0x10>
    1616:	d8 01       	movw	r26, r16
    1618:	16 96       	adiw	r26, 0x06	; 6
    161a:	8d 91       	ld	r24, X+
    161c:	9c 91       	ld	r25, X
    161e:	17 97       	sbiw	r26, 0x07	; 7
    1620:	01 96       	adiw	r24, 0x01	; 1
    1622:	17 96       	adiw	r26, 0x07	; 7
    1624:	9c 93       	st	X, r25
    1626:	8e 93       	st	-X, r24
    1628:	16 97       	sbiw	r26, 0x06	; 6
    162a:	ce 01       	movw	r24, r28
    162c:	df 91       	pop	r29
    162e:	cf 91       	pop	r28
    1630:	1f 91       	pop	r17
    1632:	0f 91       	pop	r16
    1634:	08 95       	ret

00001636 <__ultoa_invert>:
    1636:	fa 01       	movw	r30, r20
    1638:	aa 27       	eor	r26, r26
    163a:	28 30       	cpi	r18, 0x08	; 8
    163c:	51 f1       	breq	.+84     	; 0x1692 <__ultoa_invert+0x5c>
    163e:	20 31       	cpi	r18, 0x10	; 16
    1640:	81 f1       	breq	.+96     	; 0x16a2 <__ultoa_invert+0x6c>
    1642:	e8 94       	clt
    1644:	6f 93       	push	r22
    1646:	6e 7f       	andi	r22, 0xFE	; 254
    1648:	6e 5f       	subi	r22, 0xFE	; 254
    164a:	7f 4f       	sbci	r23, 0xFF	; 255
    164c:	8f 4f       	sbci	r24, 0xFF	; 255
    164e:	9f 4f       	sbci	r25, 0xFF	; 255
    1650:	af 4f       	sbci	r26, 0xFF	; 255
    1652:	b1 e0       	ldi	r27, 0x01	; 1
    1654:	3e d0       	rcall	.+124    	; 0x16d2 <__ultoa_invert+0x9c>
    1656:	b4 e0       	ldi	r27, 0x04	; 4
    1658:	3c d0       	rcall	.+120    	; 0x16d2 <__ultoa_invert+0x9c>
    165a:	67 0f       	add	r22, r23
    165c:	78 1f       	adc	r23, r24
    165e:	89 1f       	adc	r24, r25
    1660:	9a 1f       	adc	r25, r26
    1662:	a1 1d       	adc	r26, r1
    1664:	68 0f       	add	r22, r24
    1666:	79 1f       	adc	r23, r25
    1668:	8a 1f       	adc	r24, r26
    166a:	91 1d       	adc	r25, r1
    166c:	a1 1d       	adc	r26, r1
    166e:	6a 0f       	add	r22, r26
    1670:	71 1d       	adc	r23, r1
    1672:	81 1d       	adc	r24, r1
    1674:	91 1d       	adc	r25, r1
    1676:	a1 1d       	adc	r26, r1
    1678:	20 d0       	rcall	.+64     	; 0x16ba <__ultoa_invert+0x84>
    167a:	09 f4       	brne	.+2      	; 0x167e <__ultoa_invert+0x48>
    167c:	68 94       	set
    167e:	3f 91       	pop	r19
    1680:	2a e0       	ldi	r18, 0x0A	; 10
    1682:	26 9f       	mul	r18, r22
    1684:	11 24       	eor	r1, r1
    1686:	30 19       	sub	r19, r0
    1688:	30 5d       	subi	r19, 0xD0	; 208
    168a:	31 93       	st	Z+, r19
    168c:	de f6       	brtc	.-74     	; 0x1644 <__ultoa_invert+0xe>
    168e:	cf 01       	movw	r24, r30
    1690:	08 95       	ret
    1692:	46 2f       	mov	r20, r22
    1694:	47 70       	andi	r20, 0x07	; 7
    1696:	40 5d       	subi	r20, 0xD0	; 208
    1698:	41 93       	st	Z+, r20
    169a:	b3 e0       	ldi	r27, 0x03	; 3
    169c:	0f d0       	rcall	.+30     	; 0x16bc <__ultoa_invert+0x86>
    169e:	c9 f7       	brne	.-14     	; 0x1692 <__ultoa_invert+0x5c>
    16a0:	f6 cf       	rjmp	.-20     	; 0x168e <__ultoa_invert+0x58>
    16a2:	46 2f       	mov	r20, r22
    16a4:	4f 70       	andi	r20, 0x0F	; 15
    16a6:	40 5d       	subi	r20, 0xD0	; 208
    16a8:	4a 33       	cpi	r20, 0x3A	; 58
    16aa:	18 f0       	brcs	.+6      	; 0x16b2 <__ultoa_invert+0x7c>
    16ac:	49 5d       	subi	r20, 0xD9	; 217
    16ae:	31 fd       	sbrc	r19, 1
    16b0:	40 52       	subi	r20, 0x20	; 32
    16b2:	41 93       	st	Z+, r20
    16b4:	02 d0       	rcall	.+4      	; 0x16ba <__ultoa_invert+0x84>
    16b6:	a9 f7       	brne	.-22     	; 0x16a2 <__ultoa_invert+0x6c>
    16b8:	ea cf       	rjmp	.-44     	; 0x168e <__ultoa_invert+0x58>
    16ba:	b4 e0       	ldi	r27, 0x04	; 4
    16bc:	a6 95       	lsr	r26
    16be:	97 95       	ror	r25
    16c0:	87 95       	ror	r24
    16c2:	77 95       	ror	r23
    16c4:	67 95       	ror	r22
    16c6:	ba 95       	dec	r27
    16c8:	c9 f7       	brne	.-14     	; 0x16bc <__ultoa_invert+0x86>
    16ca:	00 97       	sbiw	r24, 0x00	; 0
    16cc:	61 05       	cpc	r22, r1
    16ce:	71 05       	cpc	r23, r1
    16d0:	08 95       	ret
    16d2:	9b 01       	movw	r18, r22
    16d4:	ac 01       	movw	r20, r24
    16d6:	0a 2e       	mov	r0, r26
    16d8:	06 94       	lsr	r0
    16da:	57 95       	ror	r21
    16dc:	47 95       	ror	r20
    16de:	37 95       	ror	r19
    16e0:	27 95       	ror	r18
    16e2:	ba 95       	dec	r27
    16e4:	c9 f7       	brne	.-14     	; 0x16d8 <__ultoa_invert+0xa2>
    16e6:	62 0f       	add	r22, r18
    16e8:	73 1f       	adc	r23, r19
    16ea:	84 1f       	adc	r24, r20
    16ec:	95 1f       	adc	r25, r21
    16ee:	a0 1d       	adc	r26, r0
    16f0:	08 95       	ret

000016f2 <strrev>:
    16f2:	dc 01       	movw	r26, r24
    16f4:	fc 01       	movw	r30, r24
    16f6:	67 2f       	mov	r22, r23
    16f8:	71 91       	ld	r23, Z+
    16fa:	77 23       	and	r23, r23
    16fc:	e1 f7       	brne	.-8      	; 0x16f6 <strrev+0x4>
    16fe:	32 97       	sbiw	r30, 0x02	; 2
    1700:	04 c0       	rjmp	.+8      	; 0x170a <strrev+0x18>
    1702:	7c 91       	ld	r23, X
    1704:	6d 93       	st	X+, r22
    1706:	70 83       	st	Z, r23
    1708:	62 91       	ld	r22, -Z
    170a:	ae 17       	cp	r26, r30
    170c:	bf 07       	cpc	r27, r31
    170e:	c8 f3       	brcs	.-14     	; 0x1702 <strrev+0x10>
    1710:	08 95       	ret

00001712 <__do_global_dtors>:
    1712:	10 e0       	ldi	r17, 0x00	; 0
    1714:	c8 eb       	ldi	r28, 0xB8	; 184
    1716:	d0 e0       	ldi	r29, 0x00	; 0
    1718:	04 c0       	rjmp	.+8      	; 0x1722 <__do_global_dtors+0x10>
    171a:	fe 01       	movw	r30, r28
    171c:	0e 94 56 09 	call	0x12ac	; 0x12ac <__tablejump2__>
    1720:	21 96       	adiw	r28, 0x01	; 1
    1722:	c9 3b       	cpi	r28, 0xB9	; 185
    1724:	d1 07       	cpc	r29, r17
    1726:	c9 f7       	brne	.-14     	; 0x171a <__do_global_dtors+0x8>
    1728:	f8 94       	cli

0000172a <__stop_program>:
    172a:	ff cf       	rjmp	.-2      	; 0x172a <__stop_program>
