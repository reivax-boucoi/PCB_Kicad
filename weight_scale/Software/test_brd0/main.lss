
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a0  00800100  000016aa  0000173e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000019  008001a0  008001a0  000017de  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000017de  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000017f0  2**2
                  CONTENTS, READONLY
  5 .avr.prop     00000016  00000000  00000000  00001830  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000078  00000000  00000000  00001846  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001feb  00000000  00000000  000018be  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001083  00000000  00000000  000038a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000077c  00000000  00000000  0000492c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000003ec  00000000  00000000  000050a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000008c5  00000000  00000000  00005494  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000eb2  00000000  00000000  00005d59  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000a8  00000000  00000000  00006c0b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__dtors_end>
       4:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
       8:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
       c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      10:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      14:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      18:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      1c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      20:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      24:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      28:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      2c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      30:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      34:	0c 94 49 01 	jmp	0x292	; 0x292 <__vector_13>
      38:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      3c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      40:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      44:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      48:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      4c:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__vector_19>
      50:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      54:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      58:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>

0000005c <__trampolines_end>:
      5c:	6e 61       	ori	r22, 0x1E	; 30
      5e:	6e 00       	.word	0x006e	; ????

00000060 <__c.2228>:
      60:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      70:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      80:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      90:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      a0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      b0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      c0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      d0:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      e0:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      f0:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     100:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     110:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     120:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     130:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     140:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     150:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000015e <__ctors_start>:
     15e:	61 04       	cpc	r6, r1

00000160 <__ctors_end>:
     160:	6a 04       	cpc	r6, r10

00000162 <__dtors_end>:
     162:	11 24       	eor	r1, r1
     164:	1f be       	out	0x3f, r1	; 63
     166:	cf ef       	ldi	r28, 0xFF	; 255
     168:	d4 e0       	ldi	r29, 0x04	; 4
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
     16e:	11 e0       	ldi	r17, 0x01	; 1
     170:	a0 e0       	ldi	r26, 0x00	; 0
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	ea ea       	ldi	r30, 0xAA	; 170
     176:	f6 e1       	ldi	r31, 0x16	; 22
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
     17a:	05 90       	lpm	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	a0 3a       	cpi	r26, 0xA0	; 160
     180:	b1 07       	cpc	r27, r17
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
     184:	21 e0       	ldi	r18, 0x01	; 1
     186:	a0 ea       	ldi	r26, 0xA0	; 160
     188:	b1 e0       	ldi	r27, 0x01	; 1
     18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
     18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
     18e:	a9 3b       	cpi	r26, 0xB9	; 185
     190:	b2 07       	cpc	r27, r18
     192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>

00000194 <__do_global_ctors>:
     194:	10 e0       	ldi	r17, 0x00	; 0
     196:	c0 eb       	ldi	r28, 0xB0	; 176
     198:	d0 e0       	ldi	r29, 0x00	; 0
     19a:	04 c0       	rjmp	.+8      	; 0x1a4 <__do_global_ctors+0x10>
     19c:	21 97       	sbiw	r28, 0x01	; 1
     19e:	fe 01       	movw	r30, r28
     1a0:	0e 94 21 09 	call	0x1242	; 0x1242 <__tablejump2__>
     1a4:	cf 3a       	cpi	r28, 0xAF	; 175
     1a6:	d1 07       	cpc	r29, r17
     1a8:	c9 f7       	brne	.-14     	; 0x19c <__do_global_ctors+0x8>
     1aa:	0e 94 0d 04 	call	0x81a	; 0x81a <main>
     1ae:	0c 94 48 0b 	jmp	0x1690	; 0x1690 <__do_global_dtors>

000001b2 <__bad_interrupt>:
     1b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b6 <__vector_19>:
}




ISR(ADC_vect){
     1b6:	1f 92       	push	r1
     1b8:	0f 92       	push	r0
     1ba:	0f b6       	in	r0, 0x3f	; 63
     1bc:	0f 92       	push	r0
     1be:	11 24       	eor	r1, r1
     1c0:	cf 92       	push	r12
     1c2:	df 92       	push	r13
     1c4:	ef 92       	push	r14
     1c6:	ff 92       	push	r15
     1c8:	2f 93       	push	r18
     1ca:	3f 93       	push	r19
     1cc:	4f 93       	push	r20
     1ce:	5f 93       	push	r21
     1d0:	6f 93       	push	r22
     1d2:	7f 93       	push	r23
     1d4:	8f 93       	push	r24
     1d6:	9f 93       	push	r25
     1d8:	af 93       	push	r26
     1da:	bf 93       	push	r27
     1dc:	ef 93       	push	r30
     1de:	ff 93       	push	r31
	uint16_t ADC_val=ADCL;
     1e0:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7fc078>
	ADC_val+=ADCH<<8;
     1e4:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7fc079>
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	98 2f       	mov	r25, r24
     1ec:	88 27       	eor	r24, r24
     1ee:	68 0f       	add	r22, r24
     1f0:	79 2f       	mov	r23, r25
     1f2:	71 1d       	adc	r23, r1
	//CNT=1.1*1024/Vref
	//Vref=1.1*1024/CNT
	//1.02578
	//1.0127
	//
	uint32_t cnt=(109875.0)/ADC_val;// in tens of mV, i.e. 330=>3.30V
     1f4:	90 e0       	ldi	r25, 0x00	; 0
     1f6:	80 e0       	ldi	r24, 0x00	; 0
     1f8:	0e 94 74 08 	call	0x10e8	; 0x10e8 <__floatunsisf>
     1fc:	9b 01       	movw	r18, r22
     1fe:	ac 01       	movw	r20, r24
     200:	60 e8       	ldi	r22, 0x80	; 128
     202:	79 e9       	ldi	r23, 0x99	; 153
     204:	86 ed       	ldi	r24, 0xD6	; 214
     206:	97 e4       	ldi	r25, 0x47	; 71
     208:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <__divsf3>
     20c:	0e 94 45 08 	call	0x108a	; 0x108a <__fixunssfsi>
     210:	6b 01       	movw	r12, r22
     212:	7c 01       	movw	r14, r24
	myLCD.setNb(cnt,3);
     214:	43 e0       	ldi	r20, 0x03	; 3
     216:	0e 94 7f 03 	call	0x6fe	; 0x6fe <_ZN3LCD5setNbElh>
	if(cnt>=BATT_FULL){
     21a:	8f e4       	ldi	r24, 0x4F	; 79
     21c:	c8 16       	cp	r12, r24
     21e:	81 e0       	ldi	r24, 0x01	; 1
     220:	d8 06       	cpc	r13, r24
     222:	e1 04       	cpc	r14, r1
     224:	f1 04       	cpc	r15, r1
     226:	c0 f0       	brcs	.+48     	; 0x258 <__EEPROM_REGION_LENGTH__+0x58>
		myLCD.setBattery(LCD::FULL);
     228:	87 e0       	ldi	r24, 0x07	; 7
	}else if(cnt>=BATT_ONEBAR){
		myLCD.setBattery(LCD::ONEBAR);
	}else if(cnt>=BATT_EMPTY){
		myLCD.setBattery(LCD::EMPTY);
	}else{
		myLCD.setBattery(LCD::NONE);
     22a:	0e 94 fd 02 	call	0x5fa	; 0x5fa <_ZN3LCD10setBatteryENS_7BatteryE>
		//we should shutdown here
	}
}
     22e:	ff 91       	pop	r31
     230:	ef 91       	pop	r30
     232:	bf 91       	pop	r27
     234:	af 91       	pop	r26
     236:	9f 91       	pop	r25
     238:	8f 91       	pop	r24
     23a:	7f 91       	pop	r23
     23c:	6f 91       	pop	r22
     23e:	5f 91       	pop	r21
     240:	4f 91       	pop	r20
     242:	3f 91       	pop	r19
     244:	2f 91       	pop	r18
     246:	ff 90       	pop	r15
     248:	ef 90       	pop	r14
     24a:	df 90       	pop	r13
     24c:	cf 90       	pop	r12
     24e:	0f 90       	pop	r0
     250:	0f be       	out	0x3f, r0	; 63
     252:	0f 90       	pop	r0
     254:	1f 90       	pop	r1
     256:	18 95       	reti
	//
	uint32_t cnt=(109875.0)/ADC_val;// in tens of mV, i.e. 330=>3.30V
	myLCD.setNb(cnt,3);
	if(cnt>=BATT_FULL){
		myLCD.setBattery(LCD::FULL);
	}else if(cnt>=BATT_TWOBAR){
     258:	85 e4       	ldi	r24, 0x45	; 69
     25a:	c8 16       	cp	r12, r24
     25c:	81 e0       	ldi	r24, 0x01	; 1
     25e:	d8 06       	cpc	r13, r24
     260:	e1 04       	cpc	r14, r1
     262:	f1 04       	cpc	r15, r1
     264:	10 f0       	brcs	.+4      	; 0x26a <__EEPROM_REGION_LENGTH__+0x6a>
		myLCD.setBattery(LCD::TWOBAR);
     266:	86 e0       	ldi	r24, 0x06	; 6
     268:	e0 cf       	rjmp	.-64     	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
	}else if(cnt>=BATT_ONEBAR){
     26a:	8b e3       	ldi	r24, 0x3B	; 59
     26c:	c8 16       	cp	r12, r24
     26e:	81 e0       	ldi	r24, 0x01	; 1
     270:	d8 06       	cpc	r13, r24
     272:	e1 04       	cpc	r14, r1
     274:	f1 04       	cpc	r15, r1
     276:	10 f0       	brcs	.+4      	; 0x27c <__EEPROM_REGION_LENGTH__+0x7c>
		myLCD.setBattery(LCD::ONEBAR);
     278:	85 e0       	ldi	r24, 0x05	; 5
     27a:	d7 cf       	rjmp	.-82     	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
	}else if(cnt>=BATT_EMPTY){
     27c:	81 e3       	ldi	r24, 0x31	; 49
     27e:	c8 16       	cp	r12, r24
     280:	81 e0       	ldi	r24, 0x01	; 1
     282:	d8 06       	cpc	r13, r24
     284:	e1 04       	cpc	r14, r1
     286:	f1 04       	cpc	r15, r1
     288:	10 f0       	brcs	.+4      	; 0x28e <__EEPROM_REGION_LENGTH__+0x8e>
		myLCD.setBattery(LCD::EMPTY);
     28a:	81 e0       	ldi	r24, 0x01	; 1
     28c:	ce cf       	rjmp	.-100    	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
	}else{
		myLCD.setBattery(LCD::NONE);
     28e:	80 e0       	ldi	r24, 0x00	; 0
     290:	cc cf       	rjmp	.-104    	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>

00000292 <__vector_13>:
		//we should shutdown here
	}
}

ISR(USART0_RX_vect){
     292:	1f 92       	push	r1
     294:	0f 92       	push	r0
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	0f 92       	push	r0
     29a:	11 24       	eor	r1, r1
     29c:	2f 93       	push	r18
     29e:	3f 93       	push	r19
     2a0:	4f 93       	push	r20
     2a2:	5f 93       	push	r21
     2a4:	6f 93       	push	r22
     2a6:	7f 93       	push	r23
     2a8:	8f 93       	push	r24
     2aa:	9f 93       	push	r25
     2ac:	af 93       	push	r26
     2ae:	bf 93       	push	r27
     2b0:	ef 93       	push	r30
     2b2:	ff 93       	push	r31
	uart.receive();
     2b4:	83 ea       	ldi	r24, 0xA3	; 163
     2b6:	91 e0       	ldi	r25, 0x01	; 1
     2b8:	0e 94 24 02 	call	0x448	; 0x448 <_ZN4UART7receiveEv>
}
     2bc:	ff 91       	pop	r31
     2be:	ef 91       	pop	r30
     2c0:	bf 91       	pop	r27
     2c2:	af 91       	pop	r26
     2c4:	9f 91       	pop	r25
     2c6:	8f 91       	pop	r24
     2c8:	7f 91       	pop	r23
     2ca:	6f 91       	pop	r22
     2cc:	5f 91       	pop	r21
     2ce:	4f 91       	pop	r20
     2d0:	3f 91       	pop	r19
     2d2:	2f 91       	pop	r18
     2d4:	0f 90       	pop	r0
     2d6:	0f be       	out	0x3f, r0	; 63
     2d8:	0f 90       	pop	r0
     2da:	1f 90       	pop	r1
     2dc:	18 95       	reti

000002de <_ZN4UARTC1Ev>:
#include "UART.h"

UART::UART(void){
     2de:	dc 01       	movw	r26, r24
    UBRR0H = (UART_BAUD>>8);
     2e0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
    UBRR0L = UART_BAUD;	// set baud rate
     2e4:	83 e3       	ldi	r24, 0x33	; 51
     2e6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
    UCSR0B|= (1<<TXEN0)|(1<<RXEN0);	// enable receiver and transmitter
     2ea:	e1 ec       	ldi	r30, 0xC1	; 193
     2ec:	f0 e0       	ldi	r31, 0x00	; 0
     2ee:	90 81       	ld	r25, Z
     2f0:	98 61       	ori	r25, 0x18	; 24
     2f2:	90 83       	st	Z, r25
    // Async. mode, 8bit, No parity, 1 stop bit
    UCSR0C = (0<<UMSEL0)|(0<<UPM00)|(0<<USBS0)|(3<<UCSZ00)|(0<<UCPOL0);
     2f4:	86 e0       	ldi	r24, 0x06	; 6
     2f6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7fc0c2>
    
    dataReady=false;
     2fa:	54 96       	adiw	r26, 0x14	; 20
     2fc:	1c 92       	st	X, r1
     2fe:	54 97       	sbiw	r26, 0x14	; 20
    data_len=0;
     300:	55 96       	adiw	r26, 0x15	; 21
     302:	1c 92       	st	X, r1
    
    UCSR0B |= (1<<RXCIE0);
     304:	80 81       	ld	r24, Z
     306:	80 68       	ori	r24, 0x80	; 128
     308:	80 83       	st	Z, r24
}
     30a:	08 95       	ret

0000030c <_ZN4UARTD1Ev>:

UART::~UART(void){
    
}
     30c:	08 95       	ret

0000030e <_ZN4UART8sendByteEc>:

void UART::sendByte(char b){
    while (!( UCSR0A & (1<<UDRE0)));	// wait while register is free
     30e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
     312:	85 ff       	sbrs	r24, 5
     314:	fc cf       	rjmp	.-8      	; 0x30e <_ZN4UART8sendByteEc>
    UDR0 = b;	// load data in the register
     316:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
}
     31a:	08 95       	ret

0000031c <_ZN4UART10sendStringEPc>:

void UART::sendString(char* data){
     31c:	0f 93       	push	r16
     31e:	1f 93       	push	r17
     320:	cf 93       	push	r28
     322:	df 93       	push	r29
     324:	8c 01       	movw	r16, r24
     326:	eb 01       	movw	r28, r22
    while(*data>0){
     328:	69 91       	ld	r22, Y+
     32a:	66 23       	and	r22, r22
     32c:	21 f0       	breq	.+8      	; 0x336 <_ZN4UART10sendStringEPc+0x1a>
		sendByte(*data++);
     32e:	c8 01       	movw	r24, r16
     330:	0e 94 87 01 	call	0x30e	; 0x30e <_ZN4UART8sendByteEc>
    while (!( UCSR0A & (1<<UDRE0)));	// wait while register is free
    UDR0 = b;	// load data in the register
}

void UART::sendString(char* data){
    while(*data>0){
     334:	f9 cf       	rjmp	.-14     	; 0x328 <_ZN4UART10sendStringEPc+0xc>
		sendByte(*data++);
	}
}
     336:	df 91       	pop	r29
     338:	cf 91       	pop	r28
     33a:	1f 91       	pop	r17
     33c:	0f 91       	pop	r16
     33e:	08 95       	ret

00000340 <_ZN4UART10sendStringEPcb>:

void UART::sendString(char* data, bool lineReturn){
     340:	ff 92       	push	r15
     342:	0f 93       	push	r16
     344:	1f 93       	push	r17
     346:	cf 93       	push	r28
     348:	df 93       	push	r29
     34a:	8c 01       	movw	r16, r24
     34c:	f4 2e       	mov	r15, r20
     34e:	eb 01       	movw	r28, r22
    while(*data>0){
     350:	69 91       	ld	r22, Y+
     352:	66 23       	and	r22, r22
     354:	21 f0       	breq	.+8      	; 0x35e <_ZN4UART10sendStringEPcb+0x1e>
		sendByte(*data++);
     356:	c8 01       	movw	r24, r16
     358:	0e 94 87 01 	call	0x30e	; 0x30e <_ZN4UART8sendByteEc>
		sendByte(*data++);
	}
}

void UART::sendString(char* data, bool lineReturn){
    while(*data>0){
     35c:	f9 cf       	rjmp	.-14     	; 0x350 <_ZN4UART10sendStringEPcb+0x10>
		sendByte(*data++);
	}
    if(lineReturn){
     35e:	ff 20       	and	r15, r15
     360:	69 f0       	breq	.+26     	; 0x37c <_ZN4UART10sendStringEPcb+0x3c>
        sendByte('\r');
     362:	6d e0       	ldi	r22, 0x0D	; 13
     364:	c8 01       	movw	r24, r16
     366:	0e 94 87 01 	call	0x30e	; 0x30e <_ZN4UART8sendByteEc>
        sendByte('\n');
     36a:	6a e0       	ldi	r22, 0x0A	; 10
     36c:	c8 01       	movw	r24, r16
    }
}
     36e:	df 91       	pop	r29
     370:	cf 91       	pop	r28
     372:	1f 91       	pop	r17
     374:	0f 91       	pop	r16
     376:	ff 90       	pop	r15
    while(*data>0){
		sendByte(*data++);
	}
    if(lineReturn){
        sendByte('\r');
        sendByte('\n');
     378:	0c 94 87 01 	jmp	0x30e	; 0x30e <_ZN4UART8sendByteEc>
    }
}
     37c:	df 91       	pop	r29
     37e:	cf 91       	pop	r28
     380:	1f 91       	pop	r17
     382:	0f 91       	pop	r16
     384:	ff 90       	pop	r15
     386:	08 95       	ret

00000388 <_ZN4UART6sendNbElhb>:

void UART::sendNb(int32_t nb,uint8_t base, bool lineReturn){
     388:	ef 92       	push	r14
     38a:	ff 92       	push	r15
     38c:	0f 93       	push	r16
     38e:	cf 93       	push	r28
     390:	df 93       	push	r29
     392:	cd b7       	in	r28, 0x3d	; 61
     394:	de b7       	in	r29, 0x3e	; 62
     396:	a3 97       	sbiw	r28, 0x23	; 35
     398:	0f b6       	in	r0, 0x3f	; 63
     39a:	f8 94       	cli
     39c:	de bf       	out	0x3e, r29	; 62
     39e:	0f be       	out	0x3f, r0	; 63
     3a0:	cd bf       	out	0x3d, r28	; 61
     3a2:	7c 01       	movw	r14, r24
     3a4:	cb 01       	movw	r24, r22
     3a6:	ba 01       	movw	r22, r20
    char buffer [35];
    ltoa(nb,buffer,base);
     3a8:	30 e0       	ldi	r19, 0x00	; 0
extern __inline__ __ATTR_GNU_INLINE__
char *ltoa (long __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__ltoa (long, char *, int);
	return __ltoa (__val, __s, __radix);
     3aa:	ae 01       	movw	r20, r28
     3ac:	4f 5f       	subi	r20, 0xFF	; 255
     3ae:	5f 4f       	sbci	r21, 0xFF	; 255
     3b0:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <ltoa>
    sendString(buffer,lineReturn);
     3b4:	40 2f       	mov	r20, r16
     3b6:	be 01       	movw	r22, r28
     3b8:	6f 5f       	subi	r22, 0xFF	; 255
     3ba:	7f 4f       	sbci	r23, 0xFF	; 255
     3bc:	c7 01       	movw	r24, r14
     3be:	0e 94 a0 01 	call	0x340	; 0x340 <_ZN4UART10sendStringEPcb>
}
     3c2:	a3 96       	adiw	r28, 0x23	; 35
     3c4:	0f b6       	in	r0, 0x3f	; 63
     3c6:	f8 94       	cli
     3c8:	de bf       	out	0x3e, r29	; 62
     3ca:	0f be       	out	0x3f, r0	; 63
     3cc:	cd bf       	out	0x3d, r28	; 61
     3ce:	df 91       	pop	r29
     3d0:	cf 91       	pop	r28
     3d2:	0f 91       	pop	r16
     3d4:	ff 90       	pop	r15
     3d6:	ef 90       	pop	r14
     3d8:	08 95       	ret

000003da <_ZN4UART6sendNbEl>:

void UART::sendNb(int32_t nb){
     3da:	0f 93       	push	r16
     3dc:	1f 93       	push	r17
     3de:	cf 93       	push	r28
     3e0:	df 93       	push	r29
     3e2:	cd b7       	in	r28, 0x3d	; 61
     3e4:	de b7       	in	r29, 0x3e	; 62
     3e6:	2c 97       	sbiw	r28, 0x0c	; 12
     3e8:	0f b6       	in	r0, 0x3f	; 63
     3ea:	f8 94       	cli
     3ec:	de bf       	out	0x3e, r29	; 62
     3ee:	0f be       	out	0x3f, r0	; 63
     3f0:	cd bf       	out	0x3d, r28	; 61
     3f2:	8c 01       	movw	r16, r24
     3f4:	cb 01       	movw	r24, r22
     3f6:	ba 01       	movw	r22, r20
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__ltoa_ncheck (long, char *, unsigned char);
	return __ltoa_ncheck (__val, __s, __radix);
     3f8:	2a e0       	ldi	r18, 0x0A	; 10
     3fa:	ae 01       	movw	r20, r28
     3fc:	4f 5f       	subi	r20, 0xFF	; 255
     3fe:	5f 4f       	sbci	r21, 0xFF	; 255
     400:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <__ltoa_ncheck>
    char buffer [12];//32 bits in decimal is 4milions, 10 digits
    ltoa(nb,buffer,10);
    sendString(buffer);
     404:	be 01       	movw	r22, r28
     406:	6f 5f       	subi	r22, 0xFF	; 255
     408:	7f 4f       	sbci	r23, 0xFF	; 255
     40a:	c8 01       	movw	r24, r16
     40c:	0e 94 8e 01 	call	0x31c	; 0x31c <_ZN4UART10sendStringEPc>
    sendByte('\r');
     410:	6d e0       	ldi	r22, 0x0D	; 13
     412:	c8 01       	movw	r24, r16
     414:	0e 94 87 01 	call	0x30e	; 0x30e <_ZN4UART8sendByteEc>
    sendByte('\n');
     418:	6a e0       	ldi	r22, 0x0A	; 10
     41a:	c8 01       	movw	r24, r16
     41c:	0e 94 87 01 	call	0x30e	; 0x30e <_ZN4UART8sendByteEc>
}
     420:	2c 96       	adiw	r28, 0x0c	; 12
     422:	0f b6       	in	r0, 0x3f	; 63
     424:	f8 94       	cli
     426:	de bf       	out	0x3e, r29	; 62
     428:	0f be       	out	0x3f, r0	; 63
     42a:	cd bf       	out	0x3d, r28	; 61
     42c:	df 91       	pop	r29
     42e:	cf 91       	pop	r28
     430:	1f 91       	pop	r17
     432:	0f 91       	pop	r16
     434:	08 95       	ret

00000436 <_ZN4UART7getCharEv>:

char UART::getChar(void){
     436:	cf 93       	push	r28
    //while(!(UCSRA) & (1<<RXC));	// wait while data is being received
    char d=UDR0;
     438:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
#ifdef UART_ECHO
    sendByte(d);
     43c:	6c 2f       	mov	r22, r28
     43e:	0e 94 87 01 	call	0x30e	; 0x30e <_ZN4UART8sendByteEc>
#endif
    return d;	// return 8-bit data
}
     442:	8c 2f       	mov	r24, r28
     444:	cf 91       	pop	r28
     446:	08 95       	ret

00000448 <_ZN4UART7receiveEv>:

void UART::receive(void){
     448:	cf 93       	push	r28
     44a:	df 93       	push	r29
     44c:	ec 01       	movw	r28, r24
    char d=getChar();
     44e:	0e 94 1b 02 	call	0x436	; 0x436 <_ZN4UART7getCharEv>
    if(d=='\r'){
     452:	8d 30       	cpi	r24, 0x0D	; 13
     454:	29 f4       	brne	.+10     	; 0x460 <_ZN4UART7receiveEv+0x18>
        dataReady=true;
     456:	81 e0       	ldi	r24, 0x01	; 1
     458:	8c 8b       	std	Y+20, r24	; 0x14
    }else{    
        data[data_len]=d;
        data_len++;
    }
}
     45a:	df 91       	pop	r29
     45c:	cf 91       	pop	r28
     45e:	08 95       	ret
void UART::receive(void){
    char d=getChar();
    if(d=='\r'){
        dataReady=true;
    }else{    
        data[data_len]=d;
     460:	9d 89       	ldd	r25, Y+21	; 0x15
     462:	fe 01       	movw	r30, r28
     464:	e9 0f       	add	r30, r25
     466:	f1 1d       	adc	r31, r1
     468:	80 83       	st	Z, r24
        data_len++;
     46a:	9f 5f       	subi	r25, 0xFF	; 255
     46c:	9d 8b       	std	Y+21, r25	; 0x15
    }
}
     46e:	f5 cf       	rjmp	.-22     	; 0x45a <_ZN4UART7receiveEv+0x12>

00000470 <_ZN4UART8retrieveEv>:

char* UART::retrieve(void){
    data[data_len]='\0';
     470:	dc 01       	movw	r26, r24
     472:	55 96       	adiw	r26, 0x15	; 21
     474:	ec 91       	ld	r30, X
     476:	55 97       	sbiw	r26, 0x15	; 21
     478:	e8 0f       	add	r30, r24
     47a:	f9 2f       	mov	r31, r25
     47c:	f1 1d       	adc	r31, r1
     47e:	10 82       	st	Z, r1
    dataReady=false;
     480:	54 96       	adiw	r26, 0x14	; 20
     482:	1c 92       	st	X, r1
     484:	54 97       	sbiw	r26, 0x14	; 20
    data_len=0;
     486:	55 96       	adiw	r26, 0x15	; 21
     488:	1c 92       	st	X, r1
    return data;
}
     48a:	08 95       	ret

0000048c <_ZN4UART15isDataAvailableEv>:

bool UART::isDataAvailable(void){
     48c:	fc 01       	movw	r30, r24
    return dataReady & (data_len!=0);
     48e:	91 e0       	ldi	r25, 0x01	; 1
     490:	85 89       	ldd	r24, Z+21	; 0x15
     492:	81 11       	cpse	r24, r1
     494:	01 c0       	rjmp	.+2      	; 0x498 <_ZN4UART15isDataAvailableEv+0xc>
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	84 89       	ldd	r24, Z+20	; 0x14
}
     49a:	89 23       	and	r24, r25
     49c:	08 95       	ret

0000049e <_ZN3LCDC1Eb>:
		{{4,4,4,5,5,5,5},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}},
		{{2,2,2,3,3,3,3},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}},
		{{0,0,0,1,1,1,1},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}}};

LCD::LCD(bool lowP){
	DDRB |= (1 << PB0);
     49e:	20 9a       	sbi	0x04, 0	; 4
	PORTB |= (1<<PB0);
     4a0:	28 9a       	sbi	0x05, 0	; 5
	LCDCRB|=(1<<LCDMUX1)|(1<<LCDMUX0);
     4a2:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     4a6:	80 63       	ori	r24, 0x30	; 48
     4a8:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	
	if(lowP){
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD1)|(1<<LCDCD0); // prescaler 4096, division factor 32 & K=8 for duty 1/4
     4ac:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
LCD::LCD(bool lowP){
	DDRB |= (1 << PB0);
	PORTB |= (1<<PB0);
	LCDCRB|=(1<<LCDMUX1)|(1<<LCDMUX0);
	
	if(lowP){
     4b0:	66 23       	and	r22, r22
     4b2:	71 f0       	breq	.+28     	; 0x4d0 <_ZN3LCDC1Eb+0x32>
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD1)|(1<<LCDCD0); // prescaler 4096, division factor 32 & K=8 for duty 1/4
     4b4:	87 67       	ori	r24, 0x77	; 119
     4b6:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCDCCR|=(1<<LCDDC0);// 2.6V 70µs
     4ba:	80 91 e7 00 	lds	r24, 0x00E7	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     4be:	80 62       	ori	r24, 0x20	; 32
     4c0:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
		LCDCRA|=(1<<LCDEN)|(1<<LCDAB);//LCDAB=low power waveform
     4c4:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     4c8:	80 6c       	ori	r24, 0xC0	; 192
	}else{
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD2)|(1<<LCDCD0); // prescaler 4096, division factor 8 & K=8 for duty 1/4
		LCDCCR|=(1<<LCDCC1)|(1<<LCDCC2)|(1<<LCDDC1);//2.7V 1150µs
		LCDCRA|=(1<<LCDEN);
     4ca:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	}
}
     4ce:	08 95       	ret
	if(lowP){
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD1)|(1<<LCDCD0); // prescaler 4096, division factor 32 & K=8 for duty 1/4
		LCDCCR|=(1<<LCDDC0);// 2.6V 70µs
		LCDCRA|=(1<<LCDEN)|(1<<LCDAB);//LCDAB=low power waveform
	}else{
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD2)|(1<<LCDCD0); // prescaler 4096, division factor 8 & K=8 for duty 1/4
     4d0:	85 67       	ori	r24, 0x75	; 117
     4d2:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCDCCR|=(1<<LCDCC1)|(1<<LCDCC2)|(1<<LCDDC1);//2.7V 1150µs
     4d6:	80 91 e7 00 	lds	r24, 0x00E7	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     4da:	86 64       	ori	r24, 0x46	; 70
     4dc:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
		LCDCRA|=(1<<LCDEN);
     4e0:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     4e4:	80 68       	ori	r24, 0x80	; 128
     4e6:	f1 cf       	rjmp	.-30     	; 0x4ca <_ZN3LCDC1Eb+0x2c>

000004e8 <_ZN3LCDD1Ev>:
	}
}

LCD::~LCD() {
	LCDCRA|=(1<<LCDBL);
     4e8:	e4 ee       	ldi	r30, 0xE4	; 228
     4ea:	f0 e0       	ldi	r31, 0x00	; 0
     4ec:	80 81       	ld	r24, Z
     4ee:	81 60       	ori	r24, 0x01	; 1
     4f0:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4f2:	2f ef       	ldi	r18, 0xFF	; 255
     4f4:	84 e3       	ldi	r24, 0x34	; 52
     4f6:	9c e0       	ldi	r25, 0x0C	; 12
     4f8:	21 50       	subi	r18, 0x01	; 1
     4fa:	80 40       	sbci	r24, 0x00	; 0
     4fc:	90 40       	sbci	r25, 0x00	; 0
     4fe:	e1 f7       	brne	.-8      	; 0x4f8 <_ZN3LCDD1Ev+0x10>
     500:	00 c0       	rjmp	.+0      	; 0x502 <__stack+0x3>
     502:	00 00       	nop
	_delay_ms(500);
	LCDCRA&=~(1<<LCDEN);
     504:	80 81       	ld	r24, Z
     506:	8f 77       	andi	r24, 0x7F	; 127
     508:	80 83       	st	Z, r24
}
     50a:	08 95       	ret

0000050c <_ZN3LCD8setDigitEhh>:

void LCD::setDigit(uint8_t dig, uint8_t nb) {
     50c:	1f 93       	push	r17
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
     512:	e6 2f       	mov	r30, r22
     514:	f0 e0       	ldi	r31, 0x00	; 0
     516:	e2 58       	subi	r30, 0x82	; 130
     518:	fe 4f       	sbci	r31, 0xFE	; 254
     51a:	60 81       	ld	r22, Z
     51c:	70 e0       	ldi	r23, 0x00	; 0
     51e:	15 e1       	ldi	r17, 0x15	; 21
     520:	81 9f       	mul	r24, r17
     522:	c0 01       	movw	r24, r0
     524:	11 24       	eor	r1, r1
     526:	80 50       	subi	r24, 0x00	; 0
     528:	9f 4f       	sbci	r25, 0xFF	; 255
     52a:	30 e0       	ldi	r19, 0x00	; 0
     52c:	20 e0       	ldi	r18, 0x00	; 0
     52e:	a1 e0       	ldi	r26, 0x01	; 1
     530:	b0 e0       	ldi	r27, 0x00	; 0
     532:	f9 01       	movw	r30, r18
     534:	ee 0f       	add	r30, r30
     536:	ff 1f       	adc	r31, r31
     538:	e8 0f       	add	r30, r24
     53a:	f9 1f       	adc	r31, r25
     53c:	07 80       	ldd	r0, Z+7	; 0x07
     53e:	f0 85       	ldd	r31, Z+8	; 0x08
     540:	e0 2d       	mov	r30, r0
     542:	ec 01       	movw	r28, r24
     544:	c2 0f       	add	r28, r18
     546:	d3 1f       	adc	r29, r19
     548:	48 81       	ld	r20, Y
     54a:	ed 01       	movw	r28, r26
     54c:	02 c0       	rjmp	.+4      	; 0x552 <_ZN3LCD8setDigitEhh+0x46>
     54e:	cc 0f       	add	r28, r28
     550:	dd 1f       	adc	r29, r29
     552:	4a 95       	dec	r20
     554:	e2 f7       	brpl	.-8      	; 0x54e <_ZN3LCD8setDigitEhh+0x42>
     556:	ae 01       	movw	r20, r28
     558:	eb 01       	movw	r28, r22
     55a:	02 2e       	mov	r0, r18
     55c:	02 c0       	rjmp	.+4      	; 0x562 <_ZN3LCD8setDigitEhh+0x56>
     55e:	d5 95       	asr	r29
     560:	c7 95       	ror	r28
     562:	0a 94       	dec	r0
     564:	e2 f7       	brpl	.-8      	; 0x55e <_ZN3LCD8setDigitEhh+0x52>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     566:	50 81       	ld	r21, Z
	LCDCRA&=~(1<<LCDEN);
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
     568:	c0 ff       	sbrs	r28, 0
     56a:	0b c0       	rjmp	.+22     	; 0x582 <_ZN3LCD8setDigitEhh+0x76>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     56c:	45 2b       	or	r20, r21
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     56e:	40 83       	st	Z, r20
     570:	2f 5f       	subi	r18, 0xFF	; 255
     572:	3f 4f       	sbci	r19, 0xFF	; 255
	_delay_ms(500);
	LCDCRA&=~(1<<LCDEN);
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
     574:	28 30       	cpi	r18, 0x08	; 8
     576:	31 05       	cpc	r19, r1
     578:	e1 f6       	brne	.-72     	; 0x532 <_ZN3LCD8setDigitEhh+0x26>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
		}	
	}
}
     57a:	df 91       	pop	r29
     57c:	cf 91       	pop	r28
     57e:	1f 91       	pop	r17
     580:	08 95       	ret
void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     582:	40 95       	com	r20
     584:	45 23       	and	r20, r21
     586:	f3 cf       	rjmp	.-26     	; 0x56e <_ZN3LCD8setDigitEhh+0x62>

00000588 <_ZN3LCD8setDigitEhNS_6SymbolE>:
		}	
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
     588:	1f 93       	push	r17
     58a:	cf 93       	push	r28
     58c:	df 93       	push	r29
     58e:	15 e1       	ldi	r17, 0x15	; 21
     590:	81 9f       	mul	r24, r17
     592:	c0 01       	movw	r24, r0
     594:	11 24       	eor	r1, r1
     596:	80 50       	subi	r24, 0x00	; 0
     598:	9f 4f       	sbci	r25, 0xFF	; 255
     59a:	30 e0       	ldi	r19, 0x00	; 0
     59c:	20 e0       	ldi	r18, 0x00	; 0
     59e:	a1 e0       	ldi	r26, 0x01	; 1
     5a0:	b0 e0       	ldi	r27, 0x00	; 0
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
     5a2:	70 e0       	ldi	r23, 0x00	; 0
     5a4:	f9 01       	movw	r30, r18
     5a6:	ee 0f       	add	r30, r30
     5a8:	ff 1f       	adc	r31, r31
     5aa:	e8 0f       	add	r30, r24
     5ac:	f9 1f       	adc	r31, r25
     5ae:	07 80       	ldd	r0, Z+7	; 0x07
     5b0:	f0 85       	ldd	r31, Z+8	; 0x08
     5b2:	e0 2d       	mov	r30, r0
     5b4:	ec 01       	movw	r28, r24
     5b6:	c2 0f       	add	r28, r18
     5b8:	d3 1f       	adc	r29, r19
     5ba:	48 81       	ld	r20, Y
     5bc:	ed 01       	movw	r28, r26
     5be:	02 c0       	rjmp	.+4      	; 0x5c4 <_ZN3LCD8setDigitEhNS_6SymbolE+0x3c>
     5c0:	cc 0f       	add	r28, r28
     5c2:	dd 1f       	adc	r29, r29
     5c4:	4a 95       	dec	r20
     5c6:	e2 f7       	brpl	.-8      	; 0x5c0 <_ZN3LCD8setDigitEhNS_6SymbolE+0x38>
     5c8:	ae 01       	movw	r20, r28
     5ca:	eb 01       	movw	r28, r22
     5cc:	02 2e       	mov	r0, r18
     5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <_ZN3LCD8setDigitEhNS_6SymbolE+0x4c>
     5d0:	d5 95       	asr	r29
     5d2:	c7 95       	ror	r28
     5d4:	0a 94       	dec	r0
     5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <_ZN3LCD8setDigitEhNS_6SymbolE+0x48>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     5d8:	50 81       	ld	r21, Z
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
     5da:	c0 ff       	sbrs	r28, 0
     5dc:	0b c0       	rjmp	.+22     	; 0x5f4 <_ZN3LCD8setDigitEhNS_6SymbolE+0x6c>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     5de:	45 2b       	or	r20, r21
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     5e0:	40 83       	st	Z, r20
     5e2:	2f 5f       	subi	r18, 0xFF	; 255
     5e4:	3f 4f       	sbci	r19, 0xFF	; 255
		}	
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
     5e6:	28 30       	cpi	r18, 0x08	; 8
     5e8:	31 05       	cpc	r19, r1
     5ea:	e1 f6       	brne	.-72     	; 0x5a4 <_ZN3LCD8setDigitEhNS_6SymbolE+0x1c>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
		}
	}
}
     5ec:	df 91       	pop	r29
     5ee:	cf 91       	pop	r28
     5f0:	1f 91       	pop	r17
     5f2:	08 95       	ret
void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     5f4:	40 95       	com	r20
     5f6:	45 23       	and	r20, r21
     5f8:	f3 cf       	rjmp	.-26     	; 0x5e0 <_ZN3LCD8setDigitEhNS_6SymbolE+0x58>

000005fa <_ZN3LCD10setBatteryENS_7BatteryE>:
		}
	}
}

void LCD::setBattery(Battery b) {
	switch(b){
     5fa:	88 30       	cpi	r24, 0x08	; 8
     5fc:	08 f0       	brcs	.+2      	; 0x600 <_ZN3LCD10setBatteryENS_7BatteryE+0x6>
     5fe:	41 c0       	rjmp	.+130    	; 0x682 <_ZN3LCD10setBatteryENS_7BatteryE+0x88>
     600:	e8 2f       	mov	r30, r24
     602:	f0 e0       	ldi	r31, 0x00	; 0
     604:	e8 5f       	subi	r30, 0xF8	; 248
     606:	fc 4f       	sbci	r31, 0xFC	; 252
		LCDDR6 &=~(1<<4);
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
     608:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		}
	}
}

void LCD::setBattery(Battery b) {
	switch(b){
     60c:	0c 94 21 09 	jmp	0x1242	; 0x1242 <__tablejump2__>
     610:	10 03       	mulsu	r17, r16
     612:	1c 03       	fmul	r17, r20
     614:	1e 03       	fmul	r17, r22
     616:	2f 03       	fmul	r18, r23
     618:	42 03       	mulsu	r20, r18
     61a:	49 03       	fmul	r20, r17
     61c:	4b 03       	fmul	r20, r19
     61e:	57 03       	mulsu	r21, r23
	case NONE:
		LCDDR1 &=~(1<<4);
     620:	8f 7e       	andi	r24, 0xEF	; 239
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case EMPTY:
		LCDDR1 |=(1<<4);
     622:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     626:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     62a:	8f 7e       	andi	r24, 0xEF	; 239
		LCDDR11 |=(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case THIRD:
		LCDDR1 &=~(1<<4);
		LCDDR6 |=(1<<4);
     62c:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 &=~(1<<4);
     630:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     634:	8f 7e       	andi	r24, 0xEF	; 239
     636:	1e c0       	rjmp	.+60     	; 0x674 <_ZN3LCD10setBatteryENS_7BatteryE+0x7a>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case EMPTY:
		LCDDR1 |=(1<<4);
     638:	80 61       	ori	r24, 0x10	; 16
     63a:	f3 cf       	rjmp	.-26     	; 0x622 <_ZN3LCD10setBatteryENS_7BatteryE+0x28>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case FIRST:
		LCDDR1 &=~(1<<4);
     63c:	8f 7e       	andi	r24, 0xEF	; 239
		LCDDR6 |=(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case ONEBAR:
		LCDDR1 |=(1<<4);
     63e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     642:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     646:	8f 7e       	andi	r24, 0xEF	; 239
     648:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 &=~(1<<4);
     64c:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     650:	8f 7e       	andi	r24, 0xEF	; 239
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
		LCDDR6 |=(1<<4);
		LCDDR11 |=(1<<4);
     652:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
		LCDDR16 |=(1<<4);
     656:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     65a:	80 61       	ori	r24, 0x10	; 16
     65c:	10 c0       	rjmp	.+32     	; 0x67e <_ZN3LCD10setBatteryENS_7BatteryE+0x84>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case SECOND:
		LCDDR1 &=~(1<<4);
     65e:	8f 7e       	andi	r24, 0xEF	; 239
     660:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     664:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     668:	8f 7e       	andi	r24, 0xEF	; 239
     66a:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 |=(1<<4);
     66e:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     672:	80 61       	ori	r24, 0x10	; 16
		LCDDR16 &=~(1<<4);
		break;
	case THIRD:
		LCDDR1 &=~(1<<4);
		LCDDR6 |=(1<<4);
		LCDDR11 &=~(1<<4);
     674:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
		LCDDR16 &=~(1<<4);
     678:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     67c:	8f 7e       	andi	r24, 0xEF	; 239
		break;
	case FULL:
		LCDDR1 |=(1<<4);
		LCDDR6 |=(1<<4);
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
     67e:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
		break;
	}
}
     682:	08 95       	ret
		LCDDR6 &=~(1<<4);
		LCDDR11 |=(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case THIRD:
		LCDDR1 &=~(1<<4);
     684:	8f 7e       	andi	r24, 0xEF	; 239
     686:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 |=(1<<4);
     68a:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     68e:	80 61       	ori	r24, 0x10	; 16
     690:	cd cf       	rjmp	.-102    	; 0x62c <_ZN3LCD10setBatteryENS_7BatteryE+0x32>
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case ONEBAR:
		LCDDR1 |=(1<<4);
     692:	80 61       	ori	r24, 0x10	; 16
     694:	d4 cf       	rjmp	.-88     	; 0x63e <_ZN3LCD10setBatteryENS_7BatteryE+0x44>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case TWOBAR:
		LCDDR1 |=(1<<4);
     696:	80 61       	ori	r24, 0x10	; 16
     698:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     69c:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     6a0:	8f 7e       	andi	r24, 0xEF	; 239
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
		LCDDR6 |=(1<<4);
     6a2:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 |=(1<<4);
     6a6:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     6aa:	80 61       	ori	r24, 0x10	; 16
     6ac:	d2 cf       	rjmp	.-92     	; 0x652 <_ZN3LCD10setBatteryENS_7BatteryE+0x58>
		LCDDR6 &=~(1<<4);
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
     6ae:	80 61       	ori	r24, 0x10	; 16
     6b0:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 |=(1<<4);
     6b4:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     6b8:	80 61       	ori	r24, 0x10	; 16
     6ba:	f3 cf       	rjmp	.-26     	; 0x6a2 <_ZN3LCD10setBatteryENS_7BatteryE+0xa8>

000006bc <_ZN3LCD5setDPEb>:
		break;
	}
}

void LCD::setDP(bool b) {
	if(b){
     6bc:	88 23       	and	r24, r24
     6be:	31 f0       	breq	.+12     	; 0x6cc <_ZN3LCD5setDPEb+0x10>
		LCDDR15|=(1<<4);
     6c0:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     6c4:	80 61       	ori	r24, 0x10	; 16
	}else{
		LCDDR15&=~(1<<4);
     6c6:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
	}
}
     6ca:	08 95       	ret

void LCD::setDP(bool b) {
	if(b){
		LCDDR15|=(1<<4);
	}else{
		LCDDR15&=~(1<<4);
     6cc:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     6d0:	8f 7e       	andi	r24, 0xEF	; 239
     6d2:	f9 cf       	rjmp	.-14     	; 0x6c6 <_ZN3LCD5setDPEb+0xa>

000006d4 <_ZN3LCD6setClkEb>:
	}
}

void LCD::setClk(bool b) {
	if(b){
     6d4:	88 23       	and	r24, r24
     6d6:	31 f0       	breq	.+12     	; 0x6e4 <_ZN3LCD6setClkEb+0x10>
		LCDDR16|=1;
     6d8:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     6dc:	81 60       	ori	r24, 0x01	; 1
	}else{
		LCDDR16&=~1;
     6de:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
	}
}
     6e2:	08 95       	ret

void LCD::setClk(bool b) {
	if(b){
		LCDDR16|=1;
	}else{
		LCDDR16&=~1;
     6e4:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     6e8:	8e 7f       	andi	r24, 0xFE	; 254
     6ea:	f9 cf       	rjmp	.-14     	; 0x6de <_ZN3LCD6setClkEb+0xa>

000006ec <_ZN3LCD5getDPEv>:
	}
}

bool LCD::getDP(void) {
	return (LCDDR15 & (1<<4));
     6ec:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
}
     6f0:	82 95       	swap	r24
     6f2:	81 70       	andi	r24, 0x01	; 1
     6f4:	08 95       	ret

000006f6 <_ZN3LCD6getClkEv>:

bool LCD::getClk(void) {
	return (LCDDR16 & 1);
     6f6:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
}
     6fa:	81 70       	andi	r24, 0x01	; 1
     6fc:	08 95       	ret

000006fe <_ZN3LCD5setNbElh>:



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
     6fe:	4f 92       	push	r4
     700:	5f 92       	push	r5
     702:	6f 92       	push	r6
     704:	7f 92       	push	r7
     706:	8f 92       	push	r8
     708:	9f 92       	push	r9
     70a:	af 92       	push	r10
     70c:	bf 92       	push	r11
     70e:	cf 92       	push	r12
     710:	df 92       	push	r13
     712:	ef 92       	push	r14
     714:	ff 92       	push	r15
     716:	0f 93       	push	r16
     718:	1f 93       	push	r17
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
     71e:	6b 01       	movw	r12, r22
     720:	7c 01       	movw	r14, r24
     722:	c4 2f       	mov	r28, r20
	if(nb>999999 || nb <-99999){
     724:	dc 01       	movw	r26, r24
     726:	cb 01       	movw	r24, r22
     728:	81 56       	subi	r24, 0x61	; 97
     72a:	99 47       	sbci	r25, 0x79	; 121
     72c:	ae 4f       	sbci	r26, 0xFE	; 254
     72e:	bf 4f       	sbci	r27, 0xFF	; 255
     730:	8f 3d       	cpi	r24, 0xDF	; 223
     732:	98 4c       	sbci	r25, 0xC8	; 200
     734:	a0 41       	sbci	r26, 0x10	; 16
     736:	b1 05       	cpc	r27, r1
     738:	08 f0       	brcs	.+2      	; 0x73c <_ZN3LCD5setNbElh+0x3e>
     73a:	52 c0       	rjmp	.+164    	; 0x7e0 <_ZN3LCD5setNbElh+0xe2>
		return 1;
	}
	int8_t d=5;
	uint8_t min=6-dig;
     73c:	86 e0       	ldi	r24, 0x06	; 6
     73e:	84 1b       	sub	r24, r20
	if(nb<0){
     740:	f7 fe       	sbrs	r15, 7
     742:	0d c0       	rjmp	.+26     	; 0x75e <_ZN3LCD5setNbElh+0x60>
		setDigit(min,Minus);
     744:	60 e4       	ldi	r22, 0x40	; 64
     746:	0e 94 c4 02 	call	0x588	; 0x588 <_ZN3LCD8setDigitEhNS_6SymbolE>
		min++;
     74a:	87 e0       	ldi	r24, 0x07	; 7
     74c:	8c 1b       	sub	r24, r28
		nb=(~nb)+1;
     74e:	f0 94       	com	r15
     750:	e0 94       	com	r14
     752:	d0 94       	com	r13
     754:	c0 94       	com	r12
     756:	c1 1c       	adc	r12, r1
     758:	d1 1c       	adc	r13, r1
     75a:	e1 1c       	adc	r14, r1
     75c:	f1 1c       	adc	r15, r1
	return (LCDDR16 & 1);
}



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
     75e:	15 e0       	ldi	r17, 0x05	; 5
	if(nb<0){
		setDigit(min,Minus);
		min++;
		nb=(~nb)+1;
	}
	while(d>=min){
     760:	c8 2f       	mov	r28, r24
     762:	d0 e0       	ldi	r29, 0x00	; 0
		setDigit(d--,nb%10);
     764:	8a e0       	ldi	r24, 0x0A	; 10
     766:	48 2e       	mov	r4, r24
     768:	51 2c       	mov	r5, r1
     76a:	61 2c       	mov	r6, r1
     76c:	71 2c       	mov	r7, r1
	if(nb<0){
		setDigit(min,Minus);
		min++;
		nb=(~nb)+1;
	}
	while(d>=min){
     76e:	81 2f       	mov	r24, r17
     770:	01 2e       	mov	r0, r17
     772:	00 0c       	add	r0, r0
     774:	99 0b       	sbc	r25, r25
     776:	8c 17       	cp	r24, r28
     778:	9d 07       	cpc	r25, r29
     77a:	94 f4       	brge	.+36     	; 0x7a0 <_ZN3LCD5setNbElh+0xa2>



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
	if(nb>999999 || nb <-99999){
		return 1;
     77c:	80 e0       	ldi	r24, 0x00	; 0
		nb/=10;
		if(nb==0)break;
	}
	while(d>=min)setDigit(d--,Blank);
	return 0;
}
     77e:	df 91       	pop	r29
     780:	cf 91       	pop	r28
     782:	1f 91       	pop	r17
     784:	0f 91       	pop	r16
     786:	ff 90       	pop	r15
     788:	ef 90       	pop	r14
     78a:	df 90       	pop	r13
     78c:	cf 90       	pop	r12
     78e:	bf 90       	pop	r11
     790:	af 90       	pop	r10
     792:	9f 90       	pop	r9
     794:	8f 90       	pop	r8
     796:	7f 90       	pop	r7
     798:	6f 90       	pop	r6
     79a:	5f 90       	pop	r5
     79c:	4f 90       	pop	r4
     79e:	08 95       	ret
		setDigit(min,Minus);
		min++;
		nb=(~nb)+1;
	}
	while(d>=min){
		setDigit(d--,nb%10);
     7a0:	c7 01       	movw	r24, r14
     7a2:	b6 01       	movw	r22, r12
     7a4:	a3 01       	movw	r20, r6
     7a6:	92 01       	movw	r18, r4
     7a8:	0e 94 02 09 	call	0x1204	; 0x1204 <__divmodsi4>
     7ac:	49 01       	movw	r8, r18
     7ae:	5a 01       	movw	r10, r20
     7b0:	81 2f       	mov	r24, r17
     7b2:	11 50       	subi	r17, 0x01	; 1
     7b4:	0e 94 86 02 	call	0x50c	; 0x50c <_ZN3LCD8setDigitEhh>
		nb/=10;
     7b8:	64 01       	movw	r12, r8
     7ba:	75 01       	movw	r14, r10
		if(nb==0)break;
     7bc:	c1 14       	cp	r12, r1
     7be:	d1 04       	cpc	r13, r1
     7c0:	e1 04       	cpc	r14, r1
     7c2:	f1 04       	cpc	r15, r1
     7c4:	a1 f6       	brne	.-88     	; 0x76e <_ZN3LCD5setNbElh+0x70>
	}
	while(d>=min)setDigit(d--,Blank);
     7c6:	81 2f       	mov	r24, r17
     7c8:	01 2e       	mov	r0, r17
     7ca:	00 0c       	add	r0, r0
     7cc:	99 0b       	sbc	r25, r25
     7ce:	8c 17       	cp	r24, r28
     7d0:	9d 07       	cpc	r25, r29
     7d2:	a4 f2       	brlt	.-88     	; 0x77c <_ZN3LCD5setNbElh+0x7e>
     7d4:	60 e0       	ldi	r22, 0x00	; 0
     7d6:	81 2f       	mov	r24, r17
     7d8:	0e 94 c4 02 	call	0x588	; 0x588 <_ZN3LCD8setDigitEhNS_6SymbolE>
     7dc:	11 50       	subi	r17, 0x01	; 1
     7de:	f3 cf       	rjmp	.-26     	; 0x7c6 <_ZN3LCD5setNbElh+0xc8>



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
	if(nb>999999 || nb <-99999){
		return 1;
     7e0:	81 e0       	ldi	r24, 0x01	; 1
     7e2:	cd cf       	rjmp	.-102    	; 0x77e <_ZN3LCD5setNbElh+0x80>

000007e4 <_ZN3LCD5setNbEl>:
	while(d>=min)setDigit(d--,Blank);
	return 0;
}

uint8_t LCD::setNb(int32_t nb) {
	return setNb(nb,6);
     7e4:	46 e0       	ldi	r20, 0x06	; 6
     7e6:	0c 94 7f 03 	jmp	0x6fe	; 0x6fe <_ZN3LCD5setNbElh>

000007ea <_ZN3LCD5clearEb>:
}

void LCD::clear(void) {
	clear(true);
}
void LCD::clear(bool clearBatt) {
     7ea:	cf 93       	push	r28
	if(clearBatt)setBattery(NONE);
     7ec:	88 23       	and	r24, r24
     7ee:	19 f0       	breq	.+6      	; 0x7f6 <_ZN3LCD5clearEb+0xc>
     7f0:	80 e0       	ldi	r24, 0x00	; 0
     7f2:	0e 94 fd 02 	call	0x5fa	; 0x5fa <_ZN3LCD10setBatteryENS_7BatteryE>
	setClk(false);
     7f6:	80 e0       	ldi	r24, 0x00	; 0
     7f8:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <_ZN3LCD6setClkEb>
	setDP(false);
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	0e 94 5e 03 	call	0x6bc	; 0x6bc <_ZN3LCD5setDPEb>
	for(int8_t i=5;i>=0;i--)setDigit(i,Blank);
     802:	c5 e0       	ldi	r28, 0x05	; 5
     804:	60 e0       	ldi	r22, 0x00	; 0
     806:	8c 2f       	mov	r24, r28
     808:	0e 94 c4 02 	call	0x588	; 0x588 <_ZN3LCD8setDigitEhNS_6SymbolE>
     80c:	c1 50       	subi	r28, 0x01	; 1
     80e:	d0 f7       	brcc	.-12     	; 0x804 <_ZN3LCD5clearEb+0x1a>
}
     810:	cf 91       	pop	r28
     812:	08 95       	ret

00000814 <_ZN3LCD5clearEv>:
uint8_t LCD::setNb(int32_t nb) {
	return setNb(nb,6);
}

void LCD::clear(void) {
	clear(true);
     814:	81 e0       	ldi	r24, 0x01	; 1
     816:	0c 94 f5 03 	jmp	0x7ea	; 0x7ea <_ZN3LCD5clearEb>

0000081a <main>:
volatile uint8_t loop_cnt=0;
volatile uint8_t btn_state=0;

int main(void){
	
	DDRD=0b11000000; 	//LED0, LED1 as outputs, BTN 0/1 as inputs
     81a:	80 ec       	ldi	r24, 0xC0	; 192
     81c:	8a b9       	out	0x0a, r24	; 10
	PORTD=0b00110000;			//LED initial state:low, enable BTN pullups
     81e:	80 e3       	ldi	r24, 0x30	; 48
     820:	8b b9       	out	0x0b, r24	; 11
	
	DDRE=0b01100011;//IRQ as input, LoadCell_en/PWR_en as outputs, TX as output, RX as input
     822:	83 e6       	ldi	r24, 0x63	; 99
     824:	8d b9       	out	0x0d, r24	; 13
	PORTE=0b11100000;//Enable IRQ pullup, set LoadCell_en/PWR_en to 1
     826:	80 ee       	ldi	r24, 0xE0	; 224
     828:	8e b9       	out	0x0e, r24	; 14
	
	LED0_ON;
     82a:	5e 9a       	sbi	0x0b, 6	; 11
	LED1_ON;
     82c:	5f 9a       	sbi	0x0b, 7	; 11
	//PRR|=(1<<PRTIM1);//Shut down clock to Timer1
	
	ADMUX|=(1<<REFS0)|0b11110;//Set AVCC as reference voltage for ADC, ADC MUX input to 1.1V BG
     82e:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7fc07c>
     832:	8e 65       	ori	r24, 0x5E	; 94
     834:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7fc07c>
	ADCSRA|=(1<<ADEN)|(1<<ADIE)|(1<<ADPS1);//Enable conversin complete interrupt, Clock prescaler 12MHz/64=187kHz
     838:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
     83c:	8a 68       	ori	r24, 0x8A	; 138
     83e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
	sei();
     842:	78 94       	sei
	
	myLCD.setNb(12345,5);
     844:	45 e0       	ldi	r20, 0x05	; 5
     846:	69 e3       	ldi	r22, 0x39	; 57
     848:	70 e3       	ldi	r23, 0x30	; 48
     84a:	80 e0       	ldi	r24, 0x00	; 0
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	0e 94 7f 03 	call	0x6fe	; 0x6fe <_ZN3LCD5setNbElh>
	myLCD.setBattery(LCD::FULL);
     852:	87 e0       	ldi	r24, 0x07	; 7
     854:	0e 94 fd 02 	call	0x5fa	; 0x5fa <_ZN3LCD10setBatteryENS_7BatteryE>
		}

		if(BTN0!=btn_state){
			btn_state=BTN0;
			if(btn_state){
				LED0_Toggle;
     858:	c0 e4       	ldi	r28, 0x40	; 64
     85a:	8f e1       	ldi	r24, 0x1F	; 31
     85c:	9e e4       	ldi	r25, 0x4E	; 78
     85e:	01 97       	sbiw	r24, 0x01	; 1
     860:	f1 f7       	brne	.-4      	; 0x85e <main+0x44>
     862:	00 c0       	rjmp	.+0      	; 0x864 <main+0x4a>
     864:	00 00       	nop
	myLCD.setBattery(LCD::FULL);
	
	while(1){
	
		_delay_ms(10);
		loop_cnt++;
     866:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <loop_cnt>
     86a:	8f 5f       	subi	r24, 0xFF	; 255
     86c:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <loop_cnt>
		if(loop_cnt>9){
     870:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <loop_cnt>
     874:	8a 30       	cpi	r24, 0x0A	; 10
     876:	10 f0       	brcs	.+4      	; 0x87c <main+0x62>
			loop_cnt=0;
     878:	10 92 a1 01 	sts	0x01A1, r1	; 0x8001a1 <loop_cnt>
			//mySM.update();
		}

		if(BTN0!=btn_state){
     87c:	89 b1       	in	r24, 0x09	; 9
     87e:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <__data_end>
     882:	80 71       	andi	r24, 0x10	; 16
     884:	89 17       	cp	r24, r25
     886:	59 f0       	breq	.+22     	; 0x89e <main+0x84>
			btn_state=BTN0;
     888:	89 b1       	in	r24, 0x09	; 9
     88a:	80 71       	andi	r24, 0x10	; 16
     88c:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <__data_end>
			if(btn_state){
     890:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <__data_end>
     894:	88 23       	and	r24, r24
     896:	19 f0       	breq	.+6      	; 0x89e <main+0x84>
				LED0_Toggle;
     898:	8b b1       	in	r24, 0x0b	; 11
     89a:	8c 27       	eor	r24, r28
     89c:	8b b9       	out	0x0b, r24	; 11
			}
		}
		if(uart.isDataAvailable()){
     89e:	83 ea       	ldi	r24, 0xA3	; 163
     8a0:	91 e0       	ldi	r25, 0x01	; 1
     8a2:	0e 94 46 02 	call	0x48c	; 0x48c <_ZN4UART15isDataAvailableEv>
     8a6:	88 23       	and	r24, r24
     8a8:	c1 f2       	breq	.-80     	; 0x85a <main+0x40>
			char *cmd=uart.retrieve();
     8aa:	83 ea       	ldi	r24, 0xA3	; 163
     8ac:	91 e0       	ldi	r25, 0x01	; 1
     8ae:	0e 94 38 02 	call	0x470	; 0x470 <_ZN4UART8retrieveEv>
			uart.sendString("Start verbose streaming",true);
     8b2:	41 e0       	ldi	r20, 0x01	; 1
     8b4:	68 e8       	ldi	r22, 0x88	; 136
     8b6:	71 e0       	ldi	r23, 0x01	; 1
     8b8:	83 ea       	ldi	r24, 0xA3	; 163
     8ba:	91 e0       	ldi	r25, 0x01	; 1
     8bc:	0e 94 a0 01 	call	0x340	; 0x340 <_ZN4UART10sendStringEPcb>
     8c0:	cc cf       	rjmp	.-104    	; 0x85a <main+0x40>

000008c2 <_GLOBAL__sub_I_uart>:
#define BATT_EMPTY 305
#define BATT_ONEBAR 315
#define BATT_TWOBAR 325
#define BATT_FULL 335

UART uart;
     8c2:	83 ea       	ldi	r24, 0xA3	; 163
     8c4:	91 e0       	ldi	r25, 0x01	; 1
     8c6:	0e 94 6f 01 	call	0x2de	; 0x2de <_ZN4UARTC1Ev>
LCD myLCD=LCD(0);//Use 1 for lowest power LCD mode
     8ca:	60 e0       	ldi	r22, 0x00	; 0
     8cc:	82 ea       	ldi	r24, 0xA2	; 162
     8ce:	91 e0       	ldi	r25, 0x01	; 1
     8d0:	0c 94 4f 02 	jmp	0x49e	; 0x49e <_ZN3LCDC1Eb>

000008d4 <_GLOBAL__sub_D_uart>:
     8d4:	82 ea       	ldi	r24, 0xA2	; 162
     8d6:	91 e0       	ldi	r25, 0x01	; 1
     8d8:	0e 94 74 02 	call	0x4e8	; 0x4e8 <_ZN3LCDD1Ev>
#define BATT_EMPTY 305
#define BATT_ONEBAR 315
#define BATT_TWOBAR 325
#define BATT_FULL 335

UART uart;
     8dc:	83 ea       	ldi	r24, 0xA3	; 163
     8de:	91 e0       	ldi	r25, 0x01	; 1
     8e0:	0c 94 86 01 	jmp	0x30c	; 0x30c <_ZN4UARTD1Ev>

000008e4 <vfprintf>:
     8e4:	af e0       	ldi	r26, 0x0F	; 15
     8e6:	b0 e0       	ldi	r27, 0x00	; 0
     8e8:	e8 e7       	ldi	r30, 0x78	; 120
     8ea:	f4 e0       	ldi	r31, 0x04	; 4
     8ec:	0c 94 27 09 	jmp	0x124e	; 0x124e <__prologue_saves__>
     8f0:	6c 01       	movw	r12, r24
     8f2:	1b 01       	movw	r2, r22
     8f4:	5a 01       	movw	r10, r20
     8f6:	fc 01       	movw	r30, r24
     8f8:	17 82       	std	Z+7, r1	; 0x07
     8fa:	16 82       	std	Z+6, r1	; 0x06
     8fc:	83 81       	ldd	r24, Z+3	; 0x03
     8fe:	81 ff       	sbrs	r24, 1
     900:	48 c3       	rjmp	.+1680   	; 0xf92 <vfprintf+0x6ae>
     902:	9e 01       	movw	r18, r28
     904:	2f 5f       	subi	r18, 0xFF	; 255
     906:	3f 4f       	sbci	r19, 0xFF	; 255
     908:	49 01       	movw	r8, r18
     90a:	f6 01       	movw	r30, r12
     90c:	93 81       	ldd	r25, Z+3	; 0x03
     90e:	f1 01       	movw	r30, r2
     910:	93 fd       	sbrc	r25, 3
     912:	85 91       	lpm	r24, Z+
     914:	93 ff       	sbrs	r25, 3
     916:	81 91       	ld	r24, Z+
     918:	1f 01       	movw	r2, r30
     91a:	88 23       	and	r24, r24
     91c:	09 f4       	brne	.+2      	; 0x920 <vfprintf+0x3c>
     91e:	e7 c2       	rjmp	.+1486   	; 0xeee <vfprintf+0x60a>
     920:	85 32       	cpi	r24, 0x25	; 37
     922:	39 f4       	brne	.+14     	; 0x932 <vfprintf+0x4e>
     924:	93 fd       	sbrc	r25, 3
     926:	85 91       	lpm	r24, Z+
     928:	93 ff       	sbrs	r25, 3
     92a:	81 91       	ld	r24, Z+
     92c:	1f 01       	movw	r2, r30
     92e:	85 32       	cpi	r24, 0x25	; 37
     930:	39 f4       	brne	.+14     	; 0x940 <vfprintf+0x5c>
     932:	b6 01       	movw	r22, r12
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     93a:	35 01       	movw	r6, r10
     93c:	53 01       	movw	r10, r6
     93e:	e5 cf       	rjmp	.-54     	; 0x90a <vfprintf+0x26>
     940:	f1 2c       	mov	r15, r1
     942:	51 2c       	mov	r5, r1
     944:	00 e0       	ldi	r16, 0x00	; 0
     946:	00 32       	cpi	r16, 0x20	; 32
     948:	38 f4       	brcc	.+14     	; 0x958 <vfprintf+0x74>
     94a:	8b 32       	cpi	r24, 0x2B	; 43
     94c:	09 f1       	breq	.+66     	; 0x990 <vfprintf+0xac>
     94e:	90 f4       	brcc	.+36     	; 0x974 <vfprintf+0x90>
     950:	80 32       	cpi	r24, 0x20	; 32
     952:	f9 f0       	breq	.+62     	; 0x992 <vfprintf+0xae>
     954:	83 32       	cpi	r24, 0x23	; 35
     956:	09 f1       	breq	.+66     	; 0x99a <vfprintf+0xb6>
     958:	07 fd       	sbrc	r16, 7
     95a:	34 c0       	rjmp	.+104    	; 0x9c4 <vfprintf+0xe0>
     95c:	20 ed       	ldi	r18, 0xD0	; 208
     95e:	28 0f       	add	r18, r24
     960:	2a 30       	cpi	r18, 0x0A	; 10
     962:	20 f5       	brcc	.+72     	; 0x9ac <vfprintf+0xc8>
     964:	06 ff       	sbrs	r16, 6
     966:	1b c0       	rjmp	.+54     	; 0x99e <vfprintf+0xba>
     968:	fa e0       	ldi	r31, 0x0A	; 10
     96a:	ff 9e       	mul	r15, r31
     96c:	20 0d       	add	r18, r0
     96e:	11 24       	eor	r1, r1
     970:	f2 2e       	mov	r15, r18
     972:	05 c0       	rjmp	.+10     	; 0x97e <vfprintf+0x9a>
     974:	8d 32       	cpi	r24, 0x2D	; 45
     976:	79 f0       	breq	.+30     	; 0x996 <vfprintf+0xb2>
     978:	80 33       	cpi	r24, 0x30	; 48
     97a:	71 f7       	brne	.-36     	; 0x958 <vfprintf+0x74>
     97c:	01 60       	ori	r16, 0x01	; 1
     97e:	f1 01       	movw	r30, r2
     980:	93 fd       	sbrc	r25, 3
     982:	85 91       	lpm	r24, Z+
     984:	93 ff       	sbrs	r25, 3
     986:	81 91       	ld	r24, Z+
     988:	1f 01       	movw	r2, r30
     98a:	81 11       	cpse	r24, r1
     98c:	dc cf       	rjmp	.-72     	; 0x946 <vfprintf+0x62>
     98e:	1a c0       	rjmp	.+52     	; 0x9c4 <vfprintf+0xe0>
     990:	02 60       	ori	r16, 0x02	; 2
     992:	04 60       	ori	r16, 0x04	; 4
     994:	f4 cf       	rjmp	.-24     	; 0x97e <vfprintf+0x9a>
     996:	08 60       	ori	r16, 0x08	; 8
     998:	f2 cf       	rjmp	.-28     	; 0x97e <vfprintf+0x9a>
     99a:	00 61       	ori	r16, 0x10	; 16
     99c:	f0 cf       	rjmp	.-32     	; 0x97e <vfprintf+0x9a>
     99e:	3a e0       	ldi	r19, 0x0A	; 10
     9a0:	53 9e       	mul	r5, r19
     9a2:	20 0d       	add	r18, r0
     9a4:	11 24       	eor	r1, r1
     9a6:	52 2e       	mov	r5, r18
     9a8:	00 62       	ori	r16, 0x20	; 32
     9aa:	e9 cf       	rjmp	.-46     	; 0x97e <vfprintf+0x9a>
     9ac:	8e 32       	cpi	r24, 0x2E	; 46
     9ae:	21 f4       	brne	.+8      	; 0x9b8 <vfprintf+0xd4>
     9b0:	06 fd       	sbrc	r16, 6
     9b2:	9d c2       	rjmp	.+1338   	; 0xeee <vfprintf+0x60a>
     9b4:	00 64       	ori	r16, 0x40	; 64
     9b6:	e3 cf       	rjmp	.-58     	; 0x97e <vfprintf+0x9a>
     9b8:	8c 36       	cpi	r24, 0x6C	; 108
     9ba:	11 f4       	brne	.+4      	; 0x9c0 <vfprintf+0xdc>
     9bc:	00 68       	ori	r16, 0x80	; 128
     9be:	df cf       	rjmp	.-66     	; 0x97e <vfprintf+0x9a>
     9c0:	88 36       	cpi	r24, 0x68	; 104
     9c2:	e9 f2       	breq	.-70     	; 0x97e <vfprintf+0x9a>
     9c4:	9b eb       	ldi	r25, 0xBB	; 187
     9c6:	98 0f       	add	r25, r24
     9c8:	93 30       	cpi	r25, 0x03	; 3
     9ca:	08 f0       	brcs	.+2      	; 0x9ce <vfprintf+0xea>
     9cc:	5f c0       	rjmp	.+190    	; 0xa8c <vfprintf+0x1a8>
     9ce:	00 61       	ori	r16, 0x10	; 16
     9d0:	80 5e       	subi	r24, 0xE0	; 224
     9d2:	06 fd       	sbrc	r16, 6
     9d4:	02 c0       	rjmp	.+4      	; 0x9da <vfprintf+0xf6>
     9d6:	46 e0       	ldi	r20, 0x06	; 6
     9d8:	f4 2e       	mov	r15, r20
     9da:	10 2f       	mov	r17, r16
     9dc:	1f 73       	andi	r17, 0x3F	; 63
     9de:	85 36       	cpi	r24, 0x65	; 101
     9e0:	09 f0       	breq	.+2      	; 0x9e4 <vfprintf+0x100>
     9e2:	5b c0       	rjmp	.+182    	; 0xa9a <vfprintf+0x1b6>
     9e4:	10 64       	ori	r17, 0x40	; 64
     9e6:	17 ff       	sbrs	r17, 7
     9e8:	61 c0       	rjmp	.+194    	; 0xaac <vfprintf+0x1c8>
     9ea:	8f 2d       	mov	r24, r15
     9ec:	9b e3       	ldi	r25, 0x3B	; 59
     9ee:	9f 15       	cp	r25, r15
     9f0:	08 f4       	brcc	.+2      	; 0x9f4 <vfprintf+0x110>
     9f2:	8b e3       	ldi	r24, 0x3B	; 59
     9f4:	44 24       	eor	r4, r4
     9f6:	43 94       	inc	r4
     9f8:	48 0e       	add	r4, r24
     9fa:	27 e0       	ldi	r18, 0x07	; 7
     9fc:	35 01       	movw	r6, r10
     9fe:	f4 e0       	ldi	r31, 0x04	; 4
     a00:	6f 0e       	add	r6, r31
     a02:	71 1c       	adc	r7, r1
     a04:	f5 01       	movw	r30, r10
     a06:	60 81       	ld	r22, Z
     a08:	71 81       	ldd	r23, Z+1	; 0x01
     a0a:	82 81       	ldd	r24, Z+2	; 0x02
     a0c:	93 81       	ldd	r25, Z+3	; 0x03
     a0e:	04 2d       	mov	r16, r4
     a10:	a4 01       	movw	r20, r8
     a12:	0e 94 80 09 	call	0x1300	; 0x1300 <__ftoa_engine>
     a16:	5c 01       	movw	r10, r24
     a18:	f9 81       	ldd	r31, Y+1	; 0x01
     a1a:	fc 87       	std	Y+12, r31	; 0x0c
     a1c:	f0 ff       	sbrs	r31, 0
     a1e:	03 c0       	rjmp	.+6      	; 0xa26 <vfprintf+0x142>
     a20:	0d e2       	ldi	r16, 0x2D	; 45
     a22:	f3 ff       	sbrs	r31, 3
     a24:	07 c0       	rjmp	.+14     	; 0xa34 <vfprintf+0x150>
     a26:	0b e2       	ldi	r16, 0x2B	; 43
     a28:	11 fd       	sbrc	r17, 1
     a2a:	04 c0       	rjmp	.+8      	; 0xa34 <vfprintf+0x150>
     a2c:	01 2f       	mov	r16, r17
     a2e:	04 70       	andi	r16, 0x04	; 4
     a30:	12 fd       	sbrc	r17, 2
     a32:	00 e2       	ldi	r16, 0x20	; 32
     a34:	2c 85       	ldd	r18, Y+12	; 0x0c
     a36:	2c 70       	andi	r18, 0x0C	; 12
     a38:	e2 2e       	mov	r14, r18
     a3a:	09 f4       	brne	.+2      	; 0xa3e <vfprintf+0x15a>
     a3c:	57 c0       	rjmp	.+174    	; 0xaec <vfprintf+0x208>
     a3e:	01 11       	cpse	r16, r1
     a40:	ab c2       	rjmp	.+1366   	; 0xf98 <vfprintf+0x6b4>
     a42:	f3 e0       	ldi	r31, 0x03	; 3
     a44:	e1 2c       	mov	r14, r1
     a46:	f5 15       	cp	r31, r5
     a48:	a0 f4       	brcc	.+40     	; 0xa72 <vfprintf+0x18e>
     a4a:	83 e0       	ldi	r24, 0x03	; 3
     a4c:	e5 2c       	mov	r14, r5
     a4e:	e8 1a       	sub	r14, r24
     a50:	13 fd       	sbrc	r17, 3
     a52:	08 c0       	rjmp	.+16     	; 0xa64 <vfprintf+0x180>
     a54:	b6 01       	movw	r22, r12
     a56:	80 e2       	ldi	r24, 0x20	; 32
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     a5e:	ea 94       	dec	r14
     a60:	e1 10       	cpse	r14, r1
     a62:	f8 cf       	rjmp	.-16     	; 0xa54 <vfprintf+0x170>
     a64:	00 23       	and	r16, r16
     a66:	29 f0       	breq	.+10     	; 0xa72 <vfprintf+0x18e>
     a68:	b6 01       	movw	r22, r12
     a6a:	80 2f       	mov	r24, r16
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     a72:	3c 85       	ldd	r19, Y+12	; 0x0c
     a74:	2c e5       	ldi	r18, 0x5C	; 92
     a76:	a2 2e       	mov	r10, r18
     a78:	20 e0       	ldi	r18, 0x00	; 0
     a7a:	b2 2e       	mov	r11, r18
     a7c:	33 fd       	sbrc	r19, 3
     a7e:	04 c0       	rjmp	.+8      	; 0xa88 <vfprintf+0x1a4>
     a80:	90 e6       	ldi	r25, 0x60	; 96
     a82:	a9 2e       	mov	r10, r25
     a84:	90 e0       	ldi	r25, 0x00	; 0
     a86:	b9 2e       	mov	r11, r25
     a88:	10 71       	andi	r17, 0x10	; 16
     a8a:	22 c0       	rjmp	.+68     	; 0xad0 <vfprintf+0x1ec>
     a8c:	9b e9       	ldi	r25, 0x9B	; 155
     a8e:	98 0f       	add	r25, r24
     a90:	93 30       	cpi	r25, 0x03	; 3
     a92:	08 f0       	brcs	.+2      	; 0xa96 <vfprintf+0x1b2>
     a94:	33 c1       	rjmp	.+614    	; 0xcfc <vfprintf+0x418>
     a96:	0f 7e       	andi	r16, 0xEF	; 239
     a98:	9c cf       	rjmp	.-200    	; 0x9d2 <vfprintf+0xee>
     a9a:	86 36       	cpi	r24, 0x66	; 102
     a9c:	11 f4       	brne	.+4      	; 0xaa2 <vfprintf+0x1be>
     a9e:	10 68       	ori	r17, 0x80	; 128
     aa0:	a2 cf       	rjmp	.-188    	; 0x9e6 <vfprintf+0x102>
     aa2:	ff 20       	and	r15, r15
     aa4:	09 f4       	brne	.+2      	; 0xaa8 <vfprintf+0x1c4>
     aa6:	9f cf       	rjmp	.-194    	; 0x9e6 <vfprintf+0x102>
     aa8:	fa 94       	dec	r15
     aaa:	9d cf       	rjmp	.-198    	; 0x9e6 <vfprintf+0x102>
     aac:	e7 e0       	ldi	r30, 0x07	; 7
     aae:	2f 2d       	mov	r18, r15
     ab0:	ef 15       	cp	r30, r15
     ab2:	18 f4       	brcc	.+6      	; 0xaba <vfprintf+0x1d6>
     ab4:	27 e0       	ldi	r18, 0x07	; 7
     ab6:	37 e0       	ldi	r19, 0x07	; 7
     ab8:	f3 2e       	mov	r15, r19
     aba:	41 2c       	mov	r4, r1
     abc:	9f cf       	rjmp	.-194    	; 0x9fc <vfprintf+0x118>
     abe:	11 11       	cpse	r17, r1
     ac0:	80 52       	subi	r24, 0x20	; 32
     ac2:	b6 01       	movw	r22, r12
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     aca:	8f ef       	ldi	r24, 0xFF	; 255
     acc:	a8 1a       	sub	r10, r24
     ace:	b8 0a       	sbc	r11, r24
     ad0:	f5 01       	movw	r30, r10
     ad2:	84 91       	lpm	r24, Z
     ad4:	81 11       	cpse	r24, r1
     ad6:	f3 cf       	rjmp	.-26     	; 0xabe <vfprintf+0x1da>
     ad8:	ee 20       	and	r14, r14
     ada:	09 f4       	brne	.+2      	; 0xade <vfprintf+0x1fa>
     adc:	2f cf       	rjmp	.-418    	; 0x93c <vfprintf+0x58>
     ade:	b6 01       	movw	r22, r12
     ae0:	80 e2       	ldi	r24, 0x20	; 32
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     ae8:	ea 94       	dec	r14
     aea:	f6 cf       	rjmp	.-20     	; 0xad8 <vfprintf+0x1f4>
     aec:	17 ff       	sbrs	r17, 7
     aee:	6f c0       	rjmp	.+222    	; 0xbce <vfprintf+0x2ea>
     af0:	4a 0c       	add	r4, r10
     af2:	fc 85       	ldd	r31, Y+12	; 0x0c
     af4:	f4 ff       	sbrs	r31, 4
     af6:	04 c0       	rjmp	.+8      	; 0xb00 <vfprintf+0x21c>
     af8:	8a 81       	ldd	r24, Y+2	; 0x02
     afa:	81 33       	cpi	r24, 0x31	; 49
     afc:	09 f4       	brne	.+2      	; 0xb00 <vfprintf+0x21c>
     afe:	4a 94       	dec	r4
     b00:	14 14       	cp	r1, r4
     b02:	0c f0       	brlt	.+2      	; 0xb06 <vfprintf+0x222>
     b04:	86 c0       	rjmp	.+268    	; 0xc12 <vfprintf+0x32e>
     b06:	28 e0       	ldi	r18, 0x08	; 8
     b08:	24 15       	cp	r18, r4
     b0a:	10 f4       	brcc	.+4      	; 0xb10 <vfprintf+0x22c>
     b0c:	88 e0       	ldi	r24, 0x08	; 8
     b0e:	48 2e       	mov	r4, r24
     b10:	85 e0       	ldi	r24, 0x05	; 5
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	17 ff       	sbrs	r17, 7
     b16:	06 c0       	rjmp	.+12     	; 0xb24 <vfprintf+0x240>
     b18:	c5 01       	movw	r24, r10
     b1a:	b7 fe       	sbrs	r11, 7
     b1c:	02 c0       	rjmp	.+4      	; 0xb22 <vfprintf+0x23e>
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	80 e0       	ldi	r24, 0x00	; 0
     b22:	01 96       	adiw	r24, 0x01	; 1
     b24:	01 11       	cpse	r16, r1
     b26:	01 96       	adiw	r24, 0x01	; 1
     b28:	ff 20       	and	r15, r15
     b2a:	31 f0       	breq	.+12     	; 0xb38 <vfprintf+0x254>
     b2c:	2f 2d       	mov	r18, r15
     b2e:	30 e0       	ldi	r19, 0x00	; 0
     b30:	2f 5f       	subi	r18, 0xFF	; 255
     b32:	3f 4f       	sbci	r19, 0xFF	; 255
     b34:	82 0f       	add	r24, r18
     b36:	93 1f       	adc	r25, r19
     b38:	58 16       	cp	r5, r24
     b3a:	19 06       	cpc	r1, r25
     b3c:	19 f0       	breq	.+6      	; 0xb44 <vfprintf+0x260>
     b3e:	14 f0       	brlt	.+4      	; 0xb44 <vfprintf+0x260>
     b40:	e5 2c       	mov	r14, r5
     b42:	e8 1a       	sub	r14, r24
     b44:	81 2f       	mov	r24, r17
     b46:	89 70       	andi	r24, 0x09	; 9
     b48:	11 f4       	brne	.+4      	; 0xb4e <vfprintf+0x26a>
     b4a:	e1 10       	cpse	r14, r1
     b4c:	67 c0       	rjmp	.+206    	; 0xc1c <vfprintf+0x338>
     b4e:	00 23       	and	r16, r16
     b50:	29 f0       	breq	.+10     	; 0xb5c <vfprintf+0x278>
     b52:	b6 01       	movw	r22, r12
     b54:	80 2f       	mov	r24, r16
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     b5c:	13 fd       	sbrc	r17, 3
     b5e:	02 c0       	rjmp	.+4      	; 0xb64 <vfprintf+0x280>
     b60:	e1 10       	cpse	r14, r1
     b62:	63 c0       	rjmp	.+198    	; 0xc2a <vfprintf+0x346>
     b64:	17 ff       	sbrs	r17, 7
     b66:	7c c0       	rjmp	.+248    	; 0xc60 <vfprintf+0x37c>
     b68:	85 01       	movw	r16, r10
     b6a:	b7 fe       	sbrs	r11, 7
     b6c:	02 c0       	rjmp	.+4      	; 0xb72 <vfprintf+0x28e>
     b6e:	10 e0       	ldi	r17, 0x00	; 0
     b70:	00 e0       	ldi	r16, 0x00	; 0
     b72:	c5 01       	movw	r24, r10
     b74:	84 19       	sub	r24, r4
     b76:	91 09       	sbc	r25, r1
     b78:	2c 01       	movw	r4, r24
     b7a:	6f 2d       	mov	r22, r15
     b7c:	70 e0       	ldi	r23, 0x00	; 0
     b7e:	ee 27       	eor	r30, r30
     b80:	ff 27       	eor	r31, r31
     b82:	e6 1b       	sub	r30, r22
     b84:	f7 0b       	sbc	r31, r23
     b86:	ff 87       	std	Y+15, r31	; 0x0f
     b88:	ee 87       	std	Y+14, r30	; 0x0e
     b8a:	0f 3f       	cpi	r16, 0xFF	; 255
     b8c:	10 07       	cpc	r17, r16
     b8e:	29 f4       	brne	.+10     	; 0xb9a <vfprintf+0x2b6>
     b90:	b6 01       	movw	r22, r12
     b92:	8e e2       	ldi	r24, 0x2E	; 46
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     b9a:	a0 16       	cp	r10, r16
     b9c:	b1 06       	cpc	r11, r17
     b9e:	0c f4       	brge	.+2      	; 0xba2 <vfprintf+0x2be>
     ba0:	4b c0       	rjmp	.+150    	; 0xc38 <vfprintf+0x354>
     ba2:	40 16       	cp	r4, r16
     ba4:	51 06       	cpc	r5, r17
     ba6:	0c f0       	brlt	.+2      	; 0xbaa <vfprintf+0x2c6>
     ba8:	47 c0       	rjmp	.+142    	; 0xc38 <vfprintf+0x354>
     baa:	f5 01       	movw	r30, r10
     bac:	e0 1b       	sub	r30, r16
     bae:	f1 0b       	sbc	r31, r17
     bb0:	e8 0d       	add	r30, r8
     bb2:	f9 1d       	adc	r31, r9
     bb4:	81 81       	ldd	r24, Z+1	; 0x01
     bb6:	01 50       	subi	r16, 0x01	; 1
     bb8:	11 09       	sbc	r17, r1
     bba:	2e 85       	ldd	r18, Y+14	; 0x0e
     bbc:	3f 85       	ldd	r19, Y+15	; 0x0f
     bbe:	02 17       	cp	r16, r18
     bc0:	13 07       	cpc	r17, r19
     bc2:	e4 f1       	brlt	.+120    	; 0xc3c <vfprintf+0x358>
     bc4:	b6 01       	movw	r22, r12
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     bcc:	de cf       	rjmp	.-68     	; 0xb8a <vfprintf+0x2a6>
     bce:	16 fd       	sbrc	r17, 6
     bd0:	9f cf       	rjmp	.-194    	; 0xb10 <vfprintf+0x22c>
     bd2:	ef 2d       	mov	r30, r15
     bd4:	f0 e0       	ldi	r31, 0x00	; 0
     bd6:	ea 15       	cp	r30, r10
     bd8:	fb 05       	cpc	r31, r11
     bda:	34 f0       	brlt	.+12     	; 0xbe8 <vfprintf+0x304>
     bdc:	3c ef       	ldi	r19, 0xFC	; 252
     bde:	a3 16       	cp	r10, r19
     be0:	3f ef       	ldi	r19, 0xFF	; 255
     be2:	b3 06       	cpc	r11, r19
     be4:	0c f0       	brlt	.+2      	; 0xbe8 <vfprintf+0x304>
     be6:	10 68       	ori	r17, 0x80	; 128
     be8:	32 96       	adiw	r30, 0x02	; 2
     bea:	e8 0d       	add	r30, r8
     bec:	f9 1d       	adc	r31, r9
     bee:	01 c0       	rjmp	.+2      	; 0xbf2 <vfprintf+0x30e>
     bf0:	fa 94       	dec	r15
     bf2:	ff 20       	and	r15, r15
     bf4:	19 f0       	breq	.+6      	; 0xbfc <vfprintf+0x318>
     bf6:	82 91       	ld	r24, -Z
     bf8:	80 33       	cpi	r24, 0x30	; 48
     bfa:	d1 f3       	breq	.-12     	; 0xbf0 <vfprintf+0x30c>
     bfc:	17 ff       	sbrs	r17, 7
     bfe:	88 cf       	rjmp	.-240    	; 0xb10 <vfprintf+0x22c>
     c00:	44 24       	eor	r4, r4
     c02:	43 94       	inc	r4
     c04:	4f 0c       	add	r4, r15
     c06:	fa 14       	cp	r15, r10
     c08:	1b 04       	cpc	r1, r11
     c0a:	31 f0       	breq	.+12     	; 0xc18 <vfprintf+0x334>
     c0c:	2c f0       	brlt	.+10     	; 0xc18 <vfprintf+0x334>
     c0e:	fa 18       	sub	r15, r10
     c10:	7f cf       	rjmp	.-258    	; 0xb10 <vfprintf+0x22c>
     c12:	44 24       	eor	r4, r4
     c14:	43 94       	inc	r4
     c16:	7c cf       	rjmp	.-264    	; 0xb10 <vfprintf+0x22c>
     c18:	f1 2c       	mov	r15, r1
     c1a:	7a cf       	rjmp	.-268    	; 0xb10 <vfprintf+0x22c>
     c1c:	b6 01       	movw	r22, r12
     c1e:	80 e2       	ldi	r24, 0x20	; 32
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     c26:	ea 94       	dec	r14
     c28:	90 cf       	rjmp	.-224    	; 0xb4a <vfprintf+0x266>
     c2a:	b6 01       	movw	r22, r12
     c2c:	80 e3       	ldi	r24, 0x30	; 48
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     c34:	ea 94       	dec	r14
     c36:	94 cf       	rjmp	.-216    	; 0xb60 <vfprintf+0x27c>
     c38:	80 e3       	ldi	r24, 0x30	; 48
     c3a:	bd cf       	rjmp	.-134    	; 0xbb6 <vfprintf+0x2d2>
     c3c:	a0 16       	cp	r10, r16
     c3e:	b1 06       	cpc	r11, r17
     c40:	41 f4       	brne	.+16     	; 0xc52 <vfprintf+0x36e>
     c42:	9a 81       	ldd	r25, Y+2	; 0x02
     c44:	96 33       	cpi	r25, 0x36	; 54
     c46:	50 f4       	brcc	.+20     	; 0xc5c <vfprintf+0x378>
     c48:	95 33       	cpi	r25, 0x35	; 53
     c4a:	19 f4       	brne	.+6      	; 0xc52 <vfprintf+0x36e>
     c4c:	3c 85       	ldd	r19, Y+12	; 0x0c
     c4e:	34 ff       	sbrs	r19, 4
     c50:	05 c0       	rjmp	.+10     	; 0xc5c <vfprintf+0x378>
     c52:	b6 01       	movw	r22, r12
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     c5a:	3e cf       	rjmp	.-388    	; 0xad8 <vfprintf+0x1f4>
     c5c:	81 e3       	ldi	r24, 0x31	; 49
     c5e:	f9 cf       	rjmp	.-14     	; 0xc52 <vfprintf+0x36e>
     c60:	8a 81       	ldd	r24, Y+2	; 0x02
     c62:	81 33       	cpi	r24, 0x31	; 49
     c64:	19 f0       	breq	.+6      	; 0xc6c <vfprintf+0x388>
     c66:	9c 85       	ldd	r25, Y+12	; 0x0c
     c68:	9f 7e       	andi	r25, 0xEF	; 239
     c6a:	9c 87       	std	Y+12, r25	; 0x0c
     c6c:	b6 01       	movw	r22, r12
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     c74:	ff 20       	and	r15, r15
     c76:	a9 f0       	breq	.+42     	; 0xca2 <vfprintf+0x3be>
     c78:	b6 01       	movw	r22, r12
     c7a:	8e e2       	ldi	r24, 0x2E	; 46
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     c82:	f3 94       	inc	r15
     c84:	f3 94       	inc	r15
     c86:	e2 e0       	ldi	r30, 0x02	; 2
     c88:	01 e0       	ldi	r16, 0x01	; 1
     c8a:	0e 0f       	add	r16, r30
     c8c:	e8 0d       	add	r30, r8
     c8e:	f9 2d       	mov	r31, r9
     c90:	f1 1d       	adc	r31, r1
     c92:	80 81       	ld	r24, Z
     c94:	b6 01       	movw	r22, r12
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     c9c:	e0 2f       	mov	r30, r16
     c9e:	0f 11       	cpse	r16, r15
     ca0:	f3 cf       	rjmp	.-26     	; 0xc88 <vfprintf+0x3a4>
     ca2:	85 e6       	ldi	r24, 0x65	; 101
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	14 ff       	sbrs	r17, 4
     ca8:	02 c0       	rjmp	.+4      	; 0xcae <vfprintf+0x3ca>
     caa:	85 e4       	ldi	r24, 0x45	; 69
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	b6 01       	movw	r22, r12
     cb0:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     cb4:	b7 fc       	sbrc	r11, 7
     cb6:	06 c0       	rjmp	.+12     	; 0xcc4 <vfprintf+0x3e0>
     cb8:	a1 14       	cp	r10, r1
     cba:	b1 04       	cpc	r11, r1
     cbc:	c1 f4       	brne	.+48     	; 0xcee <vfprintf+0x40a>
     cbe:	ec 85       	ldd	r30, Y+12	; 0x0c
     cc0:	e4 ff       	sbrs	r30, 4
     cc2:	15 c0       	rjmp	.+42     	; 0xcee <vfprintf+0x40a>
     cc4:	b1 94       	neg	r11
     cc6:	a1 94       	neg	r10
     cc8:	b1 08       	sbc	r11, r1
     cca:	8d e2       	ldi	r24, 0x2D	; 45
     ccc:	b6 01       	movw	r22, r12
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     cd4:	80 e3       	ldi	r24, 0x30	; 48
     cd6:	2a e0       	ldi	r18, 0x0A	; 10
     cd8:	a2 16       	cp	r10, r18
     cda:	b1 04       	cpc	r11, r1
     cdc:	54 f4       	brge	.+20     	; 0xcf2 <vfprintf+0x40e>
     cde:	b6 01       	movw	r22, r12
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     ce6:	b6 01       	movw	r22, r12
     ce8:	c5 01       	movw	r24, r10
     cea:	c0 96       	adiw	r24, 0x30	; 48
     cec:	b4 cf       	rjmp	.-152    	; 0xc56 <vfprintf+0x372>
     cee:	8b e2       	ldi	r24, 0x2B	; 43
     cf0:	ed cf       	rjmp	.-38     	; 0xccc <vfprintf+0x3e8>
     cf2:	8f 5f       	subi	r24, 0xFF	; 255
     cf4:	fa e0       	ldi	r31, 0x0A	; 10
     cf6:	af 1a       	sub	r10, r31
     cf8:	b1 08       	sbc	r11, r1
     cfa:	ed cf       	rjmp	.-38     	; 0xcd6 <vfprintf+0x3f2>
     cfc:	83 36       	cpi	r24, 0x63	; 99
     cfe:	c9 f0       	breq	.+50     	; 0xd32 <vfprintf+0x44e>
     d00:	83 37       	cpi	r24, 0x73	; 115
     d02:	71 f1       	breq	.+92     	; 0xd60 <vfprintf+0x47c>
     d04:	83 35       	cpi	r24, 0x53	; 83
     d06:	09 f0       	breq	.+2      	; 0xd0a <vfprintf+0x426>
     d08:	5b c0       	rjmp	.+182    	; 0xdc0 <vfprintf+0x4dc>
     d0a:	35 01       	movw	r6, r10
     d0c:	f2 e0       	ldi	r31, 0x02	; 2
     d0e:	6f 0e       	add	r6, r31
     d10:	71 1c       	adc	r7, r1
     d12:	f5 01       	movw	r30, r10
     d14:	a0 80       	ld	r10, Z
     d16:	b1 80       	ldd	r11, Z+1	; 0x01
     d18:	6f 2d       	mov	r22, r15
     d1a:	70 e0       	ldi	r23, 0x00	; 0
     d1c:	06 fd       	sbrc	r16, 6
     d1e:	02 c0       	rjmp	.+4      	; 0xd24 <vfprintf+0x440>
     d20:	6f ef       	ldi	r22, 0xFF	; 255
     d22:	7f ef       	ldi	r23, 0xFF	; 255
     d24:	c5 01       	movw	r24, r10
     d26:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <strnlen_P>
     d2a:	9d 87       	std	Y+13, r25	; 0x0d
     d2c:	8c 87       	std	Y+12, r24	; 0x0c
     d2e:	00 68       	ori	r16, 0x80	; 128
     d30:	0d c0       	rjmp	.+26     	; 0xd4c <vfprintf+0x468>
     d32:	35 01       	movw	r6, r10
     d34:	32 e0       	ldi	r19, 0x02	; 2
     d36:	63 0e       	add	r6, r19
     d38:	71 1c       	adc	r7, r1
     d3a:	f5 01       	movw	r30, r10
     d3c:	80 81       	ld	r24, Z
     d3e:	89 83       	std	Y+1, r24	; 0x01
     d40:	21 e0       	ldi	r18, 0x01	; 1
     d42:	30 e0       	ldi	r19, 0x00	; 0
     d44:	3d 87       	std	Y+13, r19	; 0x0d
     d46:	2c 87       	std	Y+12, r18	; 0x0c
     d48:	54 01       	movw	r10, r8
     d4a:	0f 77       	andi	r16, 0x7F	; 127
     d4c:	03 fd       	sbrc	r16, 3
     d4e:	06 c0       	rjmp	.+12     	; 0xd5c <vfprintf+0x478>
     d50:	2c 85       	ldd	r18, Y+12	; 0x0c
     d52:	3d 85       	ldd	r19, Y+13	; 0x0d
     d54:	52 16       	cp	r5, r18
     d56:	13 06       	cpc	r1, r19
     d58:	09 f0       	breq	.+2      	; 0xd5c <vfprintf+0x478>
     d5a:	a8 f4       	brcc	.+42     	; 0xd86 <vfprintf+0x4a2>
     d5c:	e5 2c       	mov	r14, r5
     d5e:	2b c0       	rjmp	.+86     	; 0xdb6 <vfprintf+0x4d2>
     d60:	35 01       	movw	r6, r10
     d62:	32 e0       	ldi	r19, 0x02	; 2
     d64:	63 0e       	add	r6, r19
     d66:	71 1c       	adc	r7, r1
     d68:	f5 01       	movw	r30, r10
     d6a:	a0 80       	ld	r10, Z
     d6c:	b1 80       	ldd	r11, Z+1	; 0x01
     d6e:	6f 2d       	mov	r22, r15
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	06 fd       	sbrc	r16, 6
     d74:	02 c0       	rjmp	.+4      	; 0xd7a <vfprintf+0x496>
     d76:	6f ef       	ldi	r22, 0xFF	; 255
     d78:	7f ef       	ldi	r23, 0xFF	; 255
     d7a:	c5 01       	movw	r24, r10
     d7c:	0e 94 63 0a 	call	0x14c6	; 0x14c6 <strnlen>
     d80:	9d 87       	std	Y+13, r25	; 0x0d
     d82:	8c 87       	std	Y+12, r24	; 0x0c
     d84:	e2 cf       	rjmp	.-60     	; 0xd4a <vfprintf+0x466>
     d86:	b6 01       	movw	r22, r12
     d88:	80 e2       	ldi	r24, 0x20	; 32
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     d90:	5a 94       	dec	r5
     d92:	de cf       	rjmp	.-68     	; 0xd50 <vfprintf+0x46c>
     d94:	f5 01       	movw	r30, r10
     d96:	07 fd       	sbrc	r16, 7
     d98:	85 91       	lpm	r24, Z+
     d9a:	07 ff       	sbrs	r16, 7
     d9c:	81 91       	ld	r24, Z+
     d9e:	5f 01       	movw	r10, r30
     da0:	b6 01       	movw	r22, r12
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     da8:	e1 10       	cpse	r14, r1
     daa:	ea 94       	dec	r14
     dac:	8c 85       	ldd	r24, Y+12	; 0x0c
     dae:	9d 85       	ldd	r25, Y+13	; 0x0d
     db0:	01 97       	sbiw	r24, 0x01	; 1
     db2:	9d 87       	std	Y+13, r25	; 0x0d
     db4:	8c 87       	std	Y+12, r24	; 0x0c
     db6:	ec 85       	ldd	r30, Y+12	; 0x0c
     db8:	fd 85       	ldd	r31, Y+13	; 0x0d
     dba:	ef 2b       	or	r30, r31
     dbc:	59 f7       	brne	.-42     	; 0xd94 <vfprintf+0x4b0>
     dbe:	8c ce       	rjmp	.-744    	; 0xad8 <vfprintf+0x1f4>
     dc0:	84 36       	cpi	r24, 0x64	; 100
     dc2:	19 f0       	breq	.+6      	; 0xdca <vfprintf+0x4e6>
     dc4:	89 36       	cpi	r24, 0x69	; 105
     dc6:	09 f0       	breq	.+2      	; 0xdca <vfprintf+0x4e6>
     dc8:	74 c0       	rjmp	.+232    	; 0xeb2 <vfprintf+0x5ce>
     dca:	35 01       	movw	r6, r10
     dcc:	07 ff       	sbrs	r16, 7
     dce:	66 c0       	rjmp	.+204    	; 0xe9c <vfprintf+0x5b8>
     dd0:	f4 e0       	ldi	r31, 0x04	; 4
     dd2:	6f 0e       	add	r6, r31
     dd4:	71 1c       	adc	r7, r1
     dd6:	f5 01       	movw	r30, r10
     dd8:	60 81       	ld	r22, Z
     dda:	71 81       	ldd	r23, Z+1	; 0x01
     ddc:	82 81       	ldd	r24, Z+2	; 0x02
     dde:	93 81       	ldd	r25, Z+3	; 0x03
     de0:	10 2f       	mov	r17, r16
     de2:	1f 76       	andi	r17, 0x6F	; 111
     de4:	97 ff       	sbrs	r25, 7
     de6:	08 c0       	rjmp	.+16     	; 0xdf8 <vfprintf+0x514>
     de8:	90 95       	com	r25
     dea:	80 95       	com	r24
     dec:	70 95       	com	r23
     dee:	61 95       	neg	r22
     df0:	7f 4f       	sbci	r23, 0xFF	; 255
     df2:	8f 4f       	sbci	r24, 0xFF	; 255
     df4:	9f 4f       	sbci	r25, 0xFF	; 255
     df6:	10 68       	ori	r17, 0x80	; 128
     df8:	2a e0       	ldi	r18, 0x0A	; 10
     dfa:	30 e0       	ldi	r19, 0x00	; 0
     dfc:	a4 01       	movw	r20, r8
     dfe:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <__ultoa_invert>
     e02:	a8 2e       	mov	r10, r24
     e04:	a8 18       	sub	r10, r8
     e06:	ba 2c       	mov	r11, r10
     e08:	01 2f       	mov	r16, r17
     e0a:	16 ff       	sbrs	r17, 6
     e0c:	0a c0       	rjmp	.+20     	; 0xe22 <vfprintf+0x53e>
     e0e:	0e 7f       	andi	r16, 0xFE	; 254
     e10:	af 14       	cp	r10, r15
     e12:	38 f4       	brcc	.+14     	; 0xe22 <vfprintf+0x53e>
     e14:	14 ff       	sbrs	r17, 4
     e16:	04 c0       	rjmp	.+8      	; 0xe20 <vfprintf+0x53c>
     e18:	12 fd       	sbrc	r17, 2
     e1a:	02 c0       	rjmp	.+4      	; 0xe20 <vfprintf+0x53c>
     e1c:	01 2f       	mov	r16, r17
     e1e:	0e 7e       	andi	r16, 0xEE	; 238
     e20:	bf 2c       	mov	r11, r15
     e22:	04 ff       	sbrs	r16, 4
     e24:	8e c0       	rjmp	.+284    	; 0xf42 <vfprintf+0x65e>
     e26:	fe 01       	movw	r30, r28
     e28:	ea 0d       	add	r30, r10
     e2a:	f1 1d       	adc	r31, r1
     e2c:	80 81       	ld	r24, Z
     e2e:	80 33       	cpi	r24, 0x30	; 48
     e30:	09 f0       	breq	.+2      	; 0xe34 <vfprintf+0x550>
     e32:	80 c0       	rjmp	.+256    	; 0xf34 <vfprintf+0x650>
     e34:	09 7e       	andi	r16, 0xE9	; 233
     e36:	f0 2f       	mov	r31, r16
     e38:	f8 70       	andi	r31, 0x08	; 8
     e3a:	ef 2e       	mov	r14, r31
     e3c:	03 fd       	sbrc	r16, 3
     e3e:	90 c0       	rjmp	.+288    	; 0xf60 <vfprintf+0x67c>
     e40:	00 ff       	sbrs	r16, 0
     e42:	8a c0       	rjmp	.+276    	; 0xf58 <vfprintf+0x674>
     e44:	fa 2c       	mov	r15, r10
     e46:	b5 14       	cp	r11, r5
     e48:	10 f4       	brcc	.+4      	; 0xe4e <vfprintf+0x56a>
     e4a:	f5 0c       	add	r15, r5
     e4c:	fb 18       	sub	r15, r11
     e4e:	04 ff       	sbrs	r16, 4
     e50:	8d c0       	rjmp	.+282    	; 0xf6c <vfprintf+0x688>
     e52:	b6 01       	movw	r22, r12
     e54:	80 e3       	ldi	r24, 0x30	; 48
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     e5c:	02 ff       	sbrs	r16, 2
     e5e:	09 c0       	rjmp	.+18     	; 0xe72 <vfprintf+0x58e>
     e60:	88 e7       	ldi	r24, 0x78	; 120
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	01 ff       	sbrs	r16, 1
     e66:	02 c0       	rjmp	.+4      	; 0xe6c <vfprintf+0x588>
     e68:	88 e5       	ldi	r24, 0x58	; 88
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	b6 01       	movw	r22, r12
     e6e:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     e72:	af 14       	cp	r10, r15
     e74:	08 f4       	brcc	.+2      	; 0xe78 <vfprintf+0x594>
     e76:	86 c0       	rjmp	.+268    	; 0xf84 <vfprintf+0x6a0>
     e78:	aa 94       	dec	r10
     e7a:	0a 2d       	mov	r16, r10
     e7c:	10 e0       	ldi	r17, 0x00	; 0
     e7e:	0f 5f       	subi	r16, 0xFF	; 255
     e80:	1f 4f       	sbci	r17, 0xFF	; 255
     e82:	08 0d       	add	r16, r8
     e84:	19 1d       	adc	r17, r9
     e86:	f8 01       	movw	r30, r16
     e88:	82 91       	ld	r24, -Z
     e8a:	8f 01       	movw	r16, r30
     e8c:	b6 01       	movw	r22, r12
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     e94:	80 16       	cp	r8, r16
     e96:	91 06       	cpc	r9, r17
     e98:	b1 f7       	brne	.-20     	; 0xe86 <vfprintf+0x5a2>
     e9a:	1e ce       	rjmp	.-964    	; 0xad8 <vfprintf+0x1f4>
     e9c:	f2 e0       	ldi	r31, 0x02	; 2
     e9e:	6f 0e       	add	r6, r31
     ea0:	71 1c       	adc	r7, r1
     ea2:	f5 01       	movw	r30, r10
     ea4:	60 81       	ld	r22, Z
     ea6:	71 81       	ldd	r23, Z+1	; 0x01
     ea8:	07 2e       	mov	r0, r23
     eaa:	00 0c       	add	r0, r0
     eac:	88 0b       	sbc	r24, r24
     eae:	99 0b       	sbc	r25, r25
     eb0:	97 cf       	rjmp	.-210    	; 0xde0 <vfprintf+0x4fc>
     eb2:	10 2f       	mov	r17, r16
     eb4:	85 37       	cpi	r24, 0x75	; 117
     eb6:	a9 f4       	brne	.+42     	; 0xee2 <vfprintf+0x5fe>
     eb8:	1f 7e       	andi	r17, 0xEF	; 239
     eba:	2a e0       	ldi	r18, 0x0A	; 10
     ebc:	30 e0       	ldi	r19, 0x00	; 0
     ebe:	35 01       	movw	r6, r10
     ec0:	17 ff       	sbrs	r17, 7
     ec2:	2f c0       	rjmp	.+94     	; 0xf22 <vfprintf+0x63e>
     ec4:	f4 e0       	ldi	r31, 0x04	; 4
     ec6:	6f 0e       	add	r6, r31
     ec8:	71 1c       	adc	r7, r1
     eca:	f5 01       	movw	r30, r10
     ecc:	60 81       	ld	r22, Z
     ece:	71 81       	ldd	r23, Z+1	; 0x01
     ed0:	82 81       	ldd	r24, Z+2	; 0x02
     ed2:	93 81       	ldd	r25, Z+3	; 0x03
     ed4:	a4 01       	movw	r20, r8
     ed6:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <__ultoa_invert>
     eda:	a8 2e       	mov	r10, r24
     edc:	a8 18       	sub	r10, r8
     ede:	1f 77       	andi	r17, 0x7F	; 127
     ee0:	92 cf       	rjmp	.-220    	; 0xe06 <vfprintf+0x522>
     ee2:	19 7f       	andi	r17, 0xF9	; 249
     ee4:	8f 36       	cpi	r24, 0x6F	; 111
     ee6:	d1 f0       	breq	.+52     	; 0xf1c <vfprintf+0x638>
     ee8:	48 f4       	brcc	.+18     	; 0xefc <vfprintf+0x618>
     eea:	88 35       	cpi	r24, 0x58	; 88
     eec:	91 f0       	breq	.+36     	; 0xf12 <vfprintf+0x62e>
     eee:	f6 01       	movw	r30, r12
     ef0:	86 81       	ldd	r24, Z+6	; 0x06
     ef2:	97 81       	ldd	r25, Z+7	; 0x07
     ef4:	2f 96       	adiw	r28, 0x0f	; 15
     ef6:	e2 e1       	ldi	r30, 0x12	; 18
     ef8:	0c 94 43 09 	jmp	0x1286	; 0x1286 <__epilogue_restores__>
     efc:	80 37       	cpi	r24, 0x70	; 112
     efe:	39 f0       	breq	.+14     	; 0xf0e <vfprintf+0x62a>
     f00:	88 37       	cpi	r24, 0x78	; 120
     f02:	a9 f7       	brne	.-22     	; 0xeee <vfprintf+0x60a>
     f04:	14 fd       	sbrc	r17, 4
     f06:	14 60       	ori	r17, 0x04	; 4
     f08:	20 e1       	ldi	r18, 0x10	; 16
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	d8 cf       	rjmp	.-80     	; 0xebe <vfprintf+0x5da>
     f0e:	10 61       	ori	r17, 0x10	; 16
     f10:	f9 cf       	rjmp	.-14     	; 0xf04 <vfprintf+0x620>
     f12:	04 fd       	sbrc	r16, 4
     f14:	16 60       	ori	r17, 0x06	; 6
     f16:	20 e1       	ldi	r18, 0x10	; 16
     f18:	32 e0       	ldi	r19, 0x02	; 2
     f1a:	d1 cf       	rjmp	.-94     	; 0xebe <vfprintf+0x5da>
     f1c:	28 e0       	ldi	r18, 0x08	; 8
     f1e:	30 e0       	ldi	r19, 0x00	; 0
     f20:	ce cf       	rjmp	.-100    	; 0xebe <vfprintf+0x5da>
     f22:	f2 e0       	ldi	r31, 0x02	; 2
     f24:	6f 0e       	add	r6, r31
     f26:	71 1c       	adc	r7, r1
     f28:	f5 01       	movw	r30, r10
     f2a:	60 81       	ld	r22, Z
     f2c:	71 81       	ldd	r23, Z+1	; 0x01
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	80 e0       	ldi	r24, 0x00	; 0
     f32:	d0 cf       	rjmp	.-96     	; 0xed4 <vfprintf+0x5f0>
     f34:	02 fd       	sbrc	r16, 2
     f36:	02 c0       	rjmp	.+4      	; 0xf3c <vfprintf+0x658>
     f38:	b3 94       	inc	r11
     f3a:	7d cf       	rjmp	.-262    	; 0xe36 <vfprintf+0x552>
     f3c:	b3 94       	inc	r11
     f3e:	b3 94       	inc	r11
     f40:	7a cf       	rjmp	.-268    	; 0xe36 <vfprintf+0x552>
     f42:	80 2f       	mov	r24, r16
     f44:	86 78       	andi	r24, 0x86	; 134
     f46:	09 f4       	brne	.+2      	; 0xf4a <vfprintf+0x666>
     f48:	76 cf       	rjmp	.-276    	; 0xe36 <vfprintf+0x552>
     f4a:	f6 cf       	rjmp	.-20     	; 0xf38 <vfprintf+0x654>
     f4c:	b6 01       	movw	r22, r12
     f4e:	80 e2       	ldi	r24, 0x20	; 32
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     f56:	b3 94       	inc	r11
     f58:	b5 14       	cp	r11, r5
     f5a:	c0 f3       	brcs	.-16     	; 0xf4c <vfprintf+0x668>
     f5c:	e1 2c       	mov	r14, r1
     f5e:	77 cf       	rjmp	.-274    	; 0xe4e <vfprintf+0x56a>
     f60:	e5 2c       	mov	r14, r5
     f62:	eb 18       	sub	r14, r11
     f64:	b5 14       	cp	r11, r5
     f66:	08 f4       	brcc	.+2      	; 0xf6a <vfprintf+0x686>
     f68:	72 cf       	rjmp	.-284    	; 0xe4e <vfprintf+0x56a>
     f6a:	f8 cf       	rjmp	.-16     	; 0xf5c <vfprintf+0x678>
     f6c:	80 2f       	mov	r24, r16
     f6e:	86 78       	andi	r24, 0x86	; 134
     f70:	09 f4       	brne	.+2      	; 0xf74 <vfprintf+0x690>
     f72:	7f cf       	rjmp	.-258    	; 0xe72 <vfprintf+0x58e>
     f74:	8b e2       	ldi	r24, 0x2B	; 43
     f76:	01 ff       	sbrs	r16, 1
     f78:	80 e2       	ldi	r24, 0x20	; 32
     f7a:	07 fd       	sbrc	r16, 7
     f7c:	8d e2       	ldi	r24, 0x2D	; 45
     f7e:	b6 01       	movw	r22, r12
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	75 cf       	rjmp	.-278    	; 0xe6e <vfprintf+0x58a>
     f84:	b6 01       	movw	r22, r12
     f86:	80 e3       	ldi	r24, 0x30	; 48
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	0e 94 aa 0a 	call	0x1554	; 0x1554 <fputc>
     f8e:	fa 94       	dec	r15
     f90:	70 cf       	rjmp	.-288    	; 0xe72 <vfprintf+0x58e>
     f92:	8f ef       	ldi	r24, 0xFF	; 255
     f94:	9f ef       	ldi	r25, 0xFF	; 255
     f96:	ae cf       	rjmp	.-164    	; 0xef4 <vfprintf+0x610>
     f98:	24 e0       	ldi	r18, 0x04	; 4
     f9a:	e1 2c       	mov	r14, r1
     f9c:	25 15       	cp	r18, r5
     f9e:	08 f0       	brcs	.+2      	; 0xfa2 <vfprintf+0x6be>
     fa0:	63 cd       	rjmp	.-1338   	; 0xa68 <vfprintf+0x184>
     fa2:	84 e0       	ldi	r24, 0x04	; 4
     fa4:	53 cd       	rjmp	.-1370   	; 0xa4c <vfprintf+0x168>

00000fa6 <__divsf3>:
     fa6:	0e 94 e7 07 	call	0xfce	; 0xfce <__divsf3x>
     faa:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <__fp_round>
     fae:	0e 94 c1 08 	call	0x1182	; 0x1182 <__fp_pscB>
     fb2:	58 f0       	brcs	.+22     	; 0xfca <__divsf3+0x24>
     fb4:	0e 94 ba 08 	call	0x1174	; 0x1174 <__fp_pscA>
     fb8:	40 f0       	brcs	.+16     	; 0xfca <__divsf3+0x24>
     fba:	29 f4       	brne	.+10     	; 0xfc6 <__divsf3+0x20>
     fbc:	5f 3f       	cpi	r21, 0xFF	; 255
     fbe:	29 f0       	breq	.+10     	; 0xfca <__divsf3+0x24>
     fc0:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <__fp_inf>
     fc4:	51 11       	cpse	r21, r1
     fc6:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__fp_szero>
     fca:	0c 94 b7 08 	jmp	0x116e	; 0x116e <__fp_nan>

00000fce <__divsf3x>:
     fce:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__fp_split3>
     fd2:	68 f3       	brcs	.-38     	; 0xfae <__divsf3+0x8>

00000fd4 <__divsf3_pse>:
     fd4:	99 23       	and	r25, r25
     fd6:	b1 f3       	breq	.-20     	; 0xfc4 <__divsf3+0x1e>
     fd8:	55 23       	and	r21, r21
     fda:	91 f3       	breq	.-28     	; 0xfc0 <__divsf3+0x1a>
     fdc:	95 1b       	sub	r25, r21
     fde:	55 0b       	sbc	r21, r21
     fe0:	bb 27       	eor	r27, r27
     fe2:	aa 27       	eor	r26, r26
     fe4:	62 17       	cp	r22, r18
     fe6:	73 07       	cpc	r23, r19
     fe8:	84 07       	cpc	r24, r20
     fea:	38 f0       	brcs	.+14     	; 0xffa <__divsf3_pse+0x26>
     fec:	9f 5f       	subi	r25, 0xFF	; 255
     fee:	5f 4f       	sbci	r21, 0xFF	; 255
     ff0:	22 0f       	add	r18, r18
     ff2:	33 1f       	adc	r19, r19
     ff4:	44 1f       	adc	r20, r20
     ff6:	aa 1f       	adc	r26, r26
     ff8:	a9 f3       	breq	.-22     	; 0xfe4 <__divsf3_pse+0x10>
     ffa:	35 d0       	rcall	.+106    	; 0x1066 <__divsf3_pse+0x92>
     ffc:	0e 2e       	mov	r0, r30
     ffe:	3a f0       	brmi	.+14     	; 0x100e <__divsf3_pse+0x3a>
    1000:	e0 e8       	ldi	r30, 0x80	; 128
    1002:	32 d0       	rcall	.+100    	; 0x1068 <__divsf3_pse+0x94>
    1004:	91 50       	subi	r25, 0x01	; 1
    1006:	50 40       	sbci	r21, 0x00	; 0
    1008:	e6 95       	lsr	r30
    100a:	00 1c       	adc	r0, r0
    100c:	ca f7       	brpl	.-14     	; 0x1000 <__divsf3_pse+0x2c>
    100e:	2b d0       	rcall	.+86     	; 0x1066 <__divsf3_pse+0x92>
    1010:	fe 2f       	mov	r31, r30
    1012:	29 d0       	rcall	.+82     	; 0x1066 <__divsf3_pse+0x92>
    1014:	66 0f       	add	r22, r22
    1016:	77 1f       	adc	r23, r23
    1018:	88 1f       	adc	r24, r24
    101a:	bb 1f       	adc	r27, r27
    101c:	26 17       	cp	r18, r22
    101e:	37 07       	cpc	r19, r23
    1020:	48 07       	cpc	r20, r24
    1022:	ab 07       	cpc	r26, r27
    1024:	b0 e8       	ldi	r27, 0x80	; 128
    1026:	09 f0       	breq	.+2      	; 0x102a <__divsf3_pse+0x56>
    1028:	bb 0b       	sbc	r27, r27
    102a:	80 2d       	mov	r24, r0
    102c:	bf 01       	movw	r22, r30
    102e:	ff 27       	eor	r31, r31
    1030:	93 58       	subi	r25, 0x83	; 131
    1032:	5f 4f       	sbci	r21, 0xFF	; 255
    1034:	3a f0       	brmi	.+14     	; 0x1044 <__divsf3_pse+0x70>
    1036:	9e 3f       	cpi	r25, 0xFE	; 254
    1038:	51 05       	cpc	r21, r1
    103a:	78 f0       	brcs	.+30     	; 0x105a <__divsf3_pse+0x86>
    103c:	0c 94 b1 08 	jmp	0x1162	; 0x1162 <__fp_inf>
    1040:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__fp_szero>
    1044:	5f 3f       	cpi	r21, 0xFF	; 255
    1046:	e4 f3       	brlt	.-8      	; 0x1040 <__divsf3_pse+0x6c>
    1048:	98 3e       	cpi	r25, 0xE8	; 232
    104a:	d4 f3       	brlt	.-12     	; 0x1040 <__divsf3_pse+0x6c>
    104c:	86 95       	lsr	r24
    104e:	77 95       	ror	r23
    1050:	67 95       	ror	r22
    1052:	b7 95       	ror	r27
    1054:	f7 95       	ror	r31
    1056:	9f 5f       	subi	r25, 0xFF	; 255
    1058:	c9 f7       	brne	.-14     	; 0x104c <__divsf3_pse+0x78>
    105a:	88 0f       	add	r24, r24
    105c:	91 1d       	adc	r25, r1
    105e:	96 95       	lsr	r25
    1060:	87 95       	ror	r24
    1062:	97 f9       	bld	r25, 7
    1064:	08 95       	ret
    1066:	e1 e0       	ldi	r30, 0x01	; 1
    1068:	66 0f       	add	r22, r22
    106a:	77 1f       	adc	r23, r23
    106c:	88 1f       	adc	r24, r24
    106e:	bb 1f       	adc	r27, r27
    1070:	62 17       	cp	r22, r18
    1072:	73 07       	cpc	r23, r19
    1074:	84 07       	cpc	r24, r20
    1076:	ba 07       	cpc	r27, r26
    1078:	20 f0       	brcs	.+8      	; 0x1082 <__divsf3_pse+0xae>
    107a:	62 1b       	sub	r22, r18
    107c:	73 0b       	sbc	r23, r19
    107e:	84 0b       	sbc	r24, r20
    1080:	ba 0b       	sbc	r27, r26
    1082:	ee 1f       	adc	r30, r30
    1084:	88 f7       	brcc	.-30     	; 0x1068 <__divsf3_pse+0x94>
    1086:	e0 95       	com	r30
    1088:	08 95       	ret

0000108a <__fixunssfsi>:
    108a:	0e 94 e1 08 	call	0x11c2	; 0x11c2 <__fp_splitA>
    108e:	88 f0       	brcs	.+34     	; 0x10b2 <__fixunssfsi+0x28>
    1090:	9f 57       	subi	r25, 0x7F	; 127
    1092:	98 f0       	brcs	.+38     	; 0x10ba <__fixunssfsi+0x30>
    1094:	b9 2f       	mov	r27, r25
    1096:	99 27       	eor	r25, r25
    1098:	b7 51       	subi	r27, 0x17	; 23
    109a:	b0 f0       	brcs	.+44     	; 0x10c8 <__fixunssfsi+0x3e>
    109c:	e1 f0       	breq	.+56     	; 0x10d6 <__fixunssfsi+0x4c>
    109e:	66 0f       	add	r22, r22
    10a0:	77 1f       	adc	r23, r23
    10a2:	88 1f       	adc	r24, r24
    10a4:	99 1f       	adc	r25, r25
    10a6:	1a f0       	brmi	.+6      	; 0x10ae <__fixunssfsi+0x24>
    10a8:	ba 95       	dec	r27
    10aa:	c9 f7       	brne	.-14     	; 0x109e <__fixunssfsi+0x14>
    10ac:	14 c0       	rjmp	.+40     	; 0x10d6 <__fixunssfsi+0x4c>
    10ae:	b1 30       	cpi	r27, 0x01	; 1
    10b0:	91 f0       	breq	.+36     	; 0x10d6 <__fixunssfsi+0x4c>
    10b2:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <__fp_zero>
    10b6:	b1 e0       	ldi	r27, 0x01	; 1
    10b8:	08 95       	ret
    10ba:	0c 94 fb 08 	jmp	0x11f6	; 0x11f6 <__fp_zero>
    10be:	67 2f       	mov	r22, r23
    10c0:	78 2f       	mov	r23, r24
    10c2:	88 27       	eor	r24, r24
    10c4:	b8 5f       	subi	r27, 0xF8	; 248
    10c6:	39 f0       	breq	.+14     	; 0x10d6 <__fixunssfsi+0x4c>
    10c8:	b9 3f       	cpi	r27, 0xF9	; 249
    10ca:	cc f3       	brlt	.-14     	; 0x10be <__fixunssfsi+0x34>
    10cc:	86 95       	lsr	r24
    10ce:	77 95       	ror	r23
    10d0:	67 95       	ror	r22
    10d2:	b3 95       	inc	r27
    10d4:	d9 f7       	brne	.-10     	; 0x10cc <__fixunssfsi+0x42>
    10d6:	3e f4       	brtc	.+14     	; 0x10e6 <__fixunssfsi+0x5c>
    10d8:	90 95       	com	r25
    10da:	80 95       	com	r24
    10dc:	70 95       	com	r23
    10de:	61 95       	neg	r22
    10e0:	7f 4f       	sbci	r23, 0xFF	; 255
    10e2:	8f 4f       	sbci	r24, 0xFF	; 255
    10e4:	9f 4f       	sbci	r25, 0xFF	; 255
    10e6:	08 95       	ret

000010e8 <__floatunsisf>:
    10e8:	e8 94       	clt
    10ea:	09 c0       	rjmp	.+18     	; 0x10fe <__floatsisf+0x12>

000010ec <__floatsisf>:
    10ec:	97 fb       	bst	r25, 7
    10ee:	3e f4       	brtc	.+14     	; 0x10fe <__floatsisf+0x12>
    10f0:	90 95       	com	r25
    10f2:	80 95       	com	r24
    10f4:	70 95       	com	r23
    10f6:	61 95       	neg	r22
    10f8:	7f 4f       	sbci	r23, 0xFF	; 255
    10fa:	8f 4f       	sbci	r24, 0xFF	; 255
    10fc:	9f 4f       	sbci	r25, 0xFF	; 255
    10fe:	99 23       	and	r25, r25
    1100:	a9 f0       	breq	.+42     	; 0x112c <__floatsisf+0x40>
    1102:	f9 2f       	mov	r31, r25
    1104:	96 e9       	ldi	r25, 0x96	; 150
    1106:	bb 27       	eor	r27, r27
    1108:	93 95       	inc	r25
    110a:	f6 95       	lsr	r31
    110c:	87 95       	ror	r24
    110e:	77 95       	ror	r23
    1110:	67 95       	ror	r22
    1112:	b7 95       	ror	r27
    1114:	f1 11       	cpse	r31, r1
    1116:	f8 cf       	rjmp	.-16     	; 0x1108 <__floatsisf+0x1c>
    1118:	fa f4       	brpl	.+62     	; 0x1158 <__floatsisf+0x6c>
    111a:	bb 0f       	add	r27, r27
    111c:	11 f4       	brne	.+4      	; 0x1122 <__floatsisf+0x36>
    111e:	60 ff       	sbrs	r22, 0
    1120:	1b c0       	rjmp	.+54     	; 0x1158 <__floatsisf+0x6c>
    1122:	6f 5f       	subi	r22, 0xFF	; 255
    1124:	7f 4f       	sbci	r23, 0xFF	; 255
    1126:	8f 4f       	sbci	r24, 0xFF	; 255
    1128:	9f 4f       	sbci	r25, 0xFF	; 255
    112a:	16 c0       	rjmp	.+44     	; 0x1158 <__floatsisf+0x6c>
    112c:	88 23       	and	r24, r24
    112e:	11 f0       	breq	.+4      	; 0x1134 <__floatsisf+0x48>
    1130:	96 e9       	ldi	r25, 0x96	; 150
    1132:	11 c0       	rjmp	.+34     	; 0x1156 <__floatsisf+0x6a>
    1134:	77 23       	and	r23, r23
    1136:	21 f0       	breq	.+8      	; 0x1140 <__floatsisf+0x54>
    1138:	9e e8       	ldi	r25, 0x8E	; 142
    113a:	87 2f       	mov	r24, r23
    113c:	76 2f       	mov	r23, r22
    113e:	05 c0       	rjmp	.+10     	; 0x114a <__floatsisf+0x5e>
    1140:	66 23       	and	r22, r22
    1142:	71 f0       	breq	.+28     	; 0x1160 <__floatsisf+0x74>
    1144:	96 e8       	ldi	r25, 0x86	; 134
    1146:	86 2f       	mov	r24, r22
    1148:	70 e0       	ldi	r23, 0x00	; 0
    114a:	60 e0       	ldi	r22, 0x00	; 0
    114c:	2a f0       	brmi	.+10     	; 0x1158 <__floatsisf+0x6c>
    114e:	9a 95       	dec	r25
    1150:	66 0f       	add	r22, r22
    1152:	77 1f       	adc	r23, r23
    1154:	88 1f       	adc	r24, r24
    1156:	da f7       	brpl	.-10     	; 0x114e <__floatsisf+0x62>
    1158:	88 0f       	add	r24, r24
    115a:	96 95       	lsr	r25
    115c:	87 95       	ror	r24
    115e:	97 f9       	bld	r25, 7
    1160:	08 95       	ret

00001162 <__fp_inf>:
    1162:	97 f9       	bld	r25, 7
    1164:	9f 67       	ori	r25, 0x7F	; 127
    1166:	80 e8       	ldi	r24, 0x80	; 128
    1168:	70 e0       	ldi	r23, 0x00	; 0
    116a:	60 e0       	ldi	r22, 0x00	; 0
    116c:	08 95       	ret

0000116e <__fp_nan>:
    116e:	9f ef       	ldi	r25, 0xFF	; 255
    1170:	80 ec       	ldi	r24, 0xC0	; 192
    1172:	08 95       	ret

00001174 <__fp_pscA>:
    1174:	00 24       	eor	r0, r0
    1176:	0a 94       	dec	r0
    1178:	16 16       	cp	r1, r22
    117a:	17 06       	cpc	r1, r23
    117c:	18 06       	cpc	r1, r24
    117e:	09 06       	cpc	r0, r25
    1180:	08 95       	ret

00001182 <__fp_pscB>:
    1182:	00 24       	eor	r0, r0
    1184:	0a 94       	dec	r0
    1186:	12 16       	cp	r1, r18
    1188:	13 06       	cpc	r1, r19
    118a:	14 06       	cpc	r1, r20
    118c:	05 06       	cpc	r0, r21
    118e:	08 95       	ret

00001190 <__fp_round>:
    1190:	09 2e       	mov	r0, r25
    1192:	03 94       	inc	r0
    1194:	00 0c       	add	r0, r0
    1196:	11 f4       	brne	.+4      	; 0x119c <__fp_round+0xc>
    1198:	88 23       	and	r24, r24
    119a:	52 f0       	brmi	.+20     	; 0x11b0 <__fp_round+0x20>
    119c:	bb 0f       	add	r27, r27
    119e:	40 f4       	brcc	.+16     	; 0x11b0 <__fp_round+0x20>
    11a0:	bf 2b       	or	r27, r31
    11a2:	11 f4       	brne	.+4      	; 0x11a8 <__fp_round+0x18>
    11a4:	60 ff       	sbrs	r22, 0
    11a6:	04 c0       	rjmp	.+8      	; 0x11b0 <__fp_round+0x20>
    11a8:	6f 5f       	subi	r22, 0xFF	; 255
    11aa:	7f 4f       	sbci	r23, 0xFF	; 255
    11ac:	8f 4f       	sbci	r24, 0xFF	; 255
    11ae:	9f 4f       	sbci	r25, 0xFF	; 255
    11b0:	08 95       	ret

000011b2 <__fp_split3>:
    11b2:	57 fd       	sbrc	r21, 7
    11b4:	90 58       	subi	r25, 0x80	; 128
    11b6:	44 0f       	add	r20, r20
    11b8:	55 1f       	adc	r21, r21
    11ba:	59 f0       	breq	.+22     	; 0x11d2 <__fp_splitA+0x10>
    11bc:	5f 3f       	cpi	r21, 0xFF	; 255
    11be:	71 f0       	breq	.+28     	; 0x11dc <__fp_splitA+0x1a>
    11c0:	47 95       	ror	r20

000011c2 <__fp_splitA>:
    11c2:	88 0f       	add	r24, r24
    11c4:	97 fb       	bst	r25, 7
    11c6:	99 1f       	adc	r25, r25
    11c8:	61 f0       	breq	.+24     	; 0x11e2 <__fp_splitA+0x20>
    11ca:	9f 3f       	cpi	r25, 0xFF	; 255
    11cc:	79 f0       	breq	.+30     	; 0x11ec <__fp_splitA+0x2a>
    11ce:	87 95       	ror	r24
    11d0:	08 95       	ret
    11d2:	12 16       	cp	r1, r18
    11d4:	13 06       	cpc	r1, r19
    11d6:	14 06       	cpc	r1, r20
    11d8:	55 1f       	adc	r21, r21
    11da:	f2 cf       	rjmp	.-28     	; 0x11c0 <__fp_split3+0xe>
    11dc:	46 95       	lsr	r20
    11de:	f1 df       	rcall	.-30     	; 0x11c2 <__fp_splitA>
    11e0:	08 c0       	rjmp	.+16     	; 0x11f2 <__fp_splitA+0x30>
    11e2:	16 16       	cp	r1, r22
    11e4:	17 06       	cpc	r1, r23
    11e6:	18 06       	cpc	r1, r24
    11e8:	99 1f       	adc	r25, r25
    11ea:	f1 cf       	rjmp	.-30     	; 0x11ce <__fp_splitA+0xc>
    11ec:	86 95       	lsr	r24
    11ee:	71 05       	cpc	r23, r1
    11f0:	61 05       	cpc	r22, r1
    11f2:	08 94       	sec
    11f4:	08 95       	ret

000011f6 <__fp_zero>:
    11f6:	e8 94       	clt

000011f8 <__fp_szero>:
    11f8:	bb 27       	eor	r27, r27
    11fa:	66 27       	eor	r22, r22
    11fc:	77 27       	eor	r23, r23
    11fe:	cb 01       	movw	r24, r22
    1200:	97 f9       	bld	r25, 7
    1202:	08 95       	ret

00001204 <__divmodsi4>:
    1204:	05 2e       	mov	r0, r21
    1206:	97 fb       	bst	r25, 7
    1208:	1e f4       	brtc	.+6      	; 0x1210 <__divmodsi4+0xc>
    120a:	00 94       	com	r0
    120c:	0e 94 19 09 	call	0x1232	; 0x1232 <__negsi2>
    1210:	57 fd       	sbrc	r21, 7
    1212:	07 d0       	rcall	.+14     	; 0x1222 <__divmodsi4_neg2>
    1214:	0e 94 5e 09 	call	0x12bc	; 0x12bc <__udivmodsi4>
    1218:	07 fc       	sbrc	r0, 7
    121a:	03 d0       	rcall	.+6      	; 0x1222 <__divmodsi4_neg2>
    121c:	4e f4       	brtc	.+18     	; 0x1230 <__divmodsi4_exit>
    121e:	0c 94 19 09 	jmp	0x1232	; 0x1232 <__negsi2>

00001222 <__divmodsi4_neg2>:
    1222:	50 95       	com	r21
    1224:	40 95       	com	r20
    1226:	30 95       	com	r19
    1228:	21 95       	neg	r18
    122a:	3f 4f       	sbci	r19, 0xFF	; 255
    122c:	4f 4f       	sbci	r20, 0xFF	; 255
    122e:	5f 4f       	sbci	r21, 0xFF	; 255

00001230 <__divmodsi4_exit>:
    1230:	08 95       	ret

00001232 <__negsi2>:
    1232:	90 95       	com	r25
    1234:	80 95       	com	r24
    1236:	70 95       	com	r23
    1238:	61 95       	neg	r22
    123a:	7f 4f       	sbci	r23, 0xFF	; 255
    123c:	8f 4f       	sbci	r24, 0xFF	; 255
    123e:	9f 4f       	sbci	r25, 0xFF	; 255
    1240:	08 95       	ret

00001242 <__tablejump2__>:
    1242:	ee 0f       	add	r30, r30
    1244:	ff 1f       	adc	r31, r31
    1246:	05 90       	lpm	r0, Z+
    1248:	f4 91       	lpm	r31, Z
    124a:	e0 2d       	mov	r30, r0
    124c:	09 94       	ijmp

0000124e <__prologue_saves__>:
    124e:	2f 92       	push	r2
    1250:	3f 92       	push	r3
    1252:	4f 92       	push	r4
    1254:	5f 92       	push	r5
    1256:	6f 92       	push	r6
    1258:	7f 92       	push	r7
    125a:	8f 92       	push	r8
    125c:	9f 92       	push	r9
    125e:	af 92       	push	r10
    1260:	bf 92       	push	r11
    1262:	cf 92       	push	r12
    1264:	df 92       	push	r13
    1266:	ef 92       	push	r14
    1268:	ff 92       	push	r15
    126a:	0f 93       	push	r16
    126c:	1f 93       	push	r17
    126e:	cf 93       	push	r28
    1270:	df 93       	push	r29
    1272:	cd b7       	in	r28, 0x3d	; 61
    1274:	de b7       	in	r29, 0x3e	; 62
    1276:	ca 1b       	sub	r28, r26
    1278:	db 0b       	sbc	r29, r27
    127a:	0f b6       	in	r0, 0x3f	; 63
    127c:	f8 94       	cli
    127e:	de bf       	out	0x3e, r29	; 62
    1280:	0f be       	out	0x3f, r0	; 63
    1282:	cd bf       	out	0x3d, r28	; 61
    1284:	09 94       	ijmp

00001286 <__epilogue_restores__>:
    1286:	2a 88       	ldd	r2, Y+18	; 0x12
    1288:	39 88       	ldd	r3, Y+17	; 0x11
    128a:	48 88       	ldd	r4, Y+16	; 0x10
    128c:	5f 84       	ldd	r5, Y+15	; 0x0f
    128e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1290:	7d 84       	ldd	r7, Y+13	; 0x0d
    1292:	8c 84       	ldd	r8, Y+12	; 0x0c
    1294:	9b 84       	ldd	r9, Y+11	; 0x0b
    1296:	aa 84       	ldd	r10, Y+10	; 0x0a
    1298:	b9 84       	ldd	r11, Y+9	; 0x09
    129a:	c8 84       	ldd	r12, Y+8	; 0x08
    129c:	df 80       	ldd	r13, Y+7	; 0x07
    129e:	ee 80       	ldd	r14, Y+6	; 0x06
    12a0:	fd 80       	ldd	r15, Y+5	; 0x05
    12a2:	0c 81       	ldd	r16, Y+4	; 0x04
    12a4:	1b 81       	ldd	r17, Y+3	; 0x03
    12a6:	aa 81       	ldd	r26, Y+2	; 0x02
    12a8:	b9 81       	ldd	r27, Y+1	; 0x01
    12aa:	ce 0f       	add	r28, r30
    12ac:	d1 1d       	adc	r29, r1
    12ae:	0f b6       	in	r0, 0x3f	; 63
    12b0:	f8 94       	cli
    12b2:	de bf       	out	0x3e, r29	; 62
    12b4:	0f be       	out	0x3f, r0	; 63
    12b6:	cd bf       	out	0x3d, r28	; 61
    12b8:	ed 01       	movw	r28, r26
    12ba:	08 95       	ret

000012bc <__udivmodsi4>:
    12bc:	a1 e2       	ldi	r26, 0x21	; 33
    12be:	1a 2e       	mov	r1, r26
    12c0:	aa 1b       	sub	r26, r26
    12c2:	bb 1b       	sub	r27, r27
    12c4:	fd 01       	movw	r30, r26
    12c6:	0d c0       	rjmp	.+26     	; 0x12e2 <__udivmodsi4_ep>

000012c8 <__udivmodsi4_loop>:
    12c8:	aa 1f       	adc	r26, r26
    12ca:	bb 1f       	adc	r27, r27
    12cc:	ee 1f       	adc	r30, r30
    12ce:	ff 1f       	adc	r31, r31
    12d0:	a2 17       	cp	r26, r18
    12d2:	b3 07       	cpc	r27, r19
    12d4:	e4 07       	cpc	r30, r20
    12d6:	f5 07       	cpc	r31, r21
    12d8:	20 f0       	brcs	.+8      	; 0x12e2 <__udivmodsi4_ep>
    12da:	a2 1b       	sub	r26, r18
    12dc:	b3 0b       	sbc	r27, r19
    12de:	e4 0b       	sbc	r30, r20
    12e0:	f5 0b       	sbc	r31, r21

000012e2 <__udivmodsi4_ep>:
    12e2:	66 1f       	adc	r22, r22
    12e4:	77 1f       	adc	r23, r23
    12e6:	88 1f       	adc	r24, r24
    12e8:	99 1f       	adc	r25, r25
    12ea:	1a 94       	dec	r1
    12ec:	69 f7       	brne	.-38     	; 0x12c8 <__udivmodsi4_loop>
    12ee:	60 95       	com	r22
    12f0:	70 95       	com	r23
    12f2:	80 95       	com	r24
    12f4:	90 95       	com	r25
    12f6:	9b 01       	movw	r18, r22
    12f8:	ac 01       	movw	r20, r24
    12fa:	bd 01       	movw	r22, r26
    12fc:	cf 01       	movw	r24, r30
    12fe:	08 95       	ret

00001300 <__ftoa_engine>:
    1300:	28 30       	cpi	r18, 0x08	; 8
    1302:	08 f0       	brcs	.+2      	; 0x1306 <__ftoa_engine+0x6>
    1304:	27 e0       	ldi	r18, 0x07	; 7
    1306:	33 27       	eor	r19, r19
    1308:	da 01       	movw	r26, r20
    130a:	99 0f       	add	r25, r25
    130c:	31 1d       	adc	r19, r1
    130e:	87 fd       	sbrc	r24, 7
    1310:	91 60       	ori	r25, 0x01	; 1
    1312:	00 96       	adiw	r24, 0x00	; 0
    1314:	61 05       	cpc	r22, r1
    1316:	71 05       	cpc	r23, r1
    1318:	39 f4       	brne	.+14     	; 0x1328 <__ftoa_engine+0x28>
    131a:	32 60       	ori	r19, 0x02	; 2
    131c:	2e 5f       	subi	r18, 0xFE	; 254
    131e:	3d 93       	st	X+, r19
    1320:	30 e3       	ldi	r19, 0x30	; 48
    1322:	2a 95       	dec	r18
    1324:	e1 f7       	brne	.-8      	; 0x131e <__ftoa_engine+0x1e>
    1326:	08 95       	ret
    1328:	9f 3f       	cpi	r25, 0xFF	; 255
    132a:	30 f0       	brcs	.+12     	; 0x1338 <__ftoa_engine+0x38>
    132c:	80 38       	cpi	r24, 0x80	; 128
    132e:	71 05       	cpc	r23, r1
    1330:	61 05       	cpc	r22, r1
    1332:	09 f0       	breq	.+2      	; 0x1336 <__ftoa_engine+0x36>
    1334:	3c 5f       	subi	r19, 0xFC	; 252
    1336:	3c 5f       	subi	r19, 0xFC	; 252
    1338:	3d 93       	st	X+, r19
    133a:	91 30       	cpi	r25, 0x01	; 1
    133c:	08 f0       	brcs	.+2      	; 0x1340 <__ftoa_engine+0x40>
    133e:	80 68       	ori	r24, 0x80	; 128
    1340:	91 1d       	adc	r25, r1
    1342:	df 93       	push	r29
    1344:	cf 93       	push	r28
    1346:	1f 93       	push	r17
    1348:	0f 93       	push	r16
    134a:	ff 92       	push	r15
    134c:	ef 92       	push	r14
    134e:	19 2f       	mov	r17, r25
    1350:	98 7f       	andi	r25, 0xF8	; 248
    1352:	96 95       	lsr	r25
    1354:	e9 2f       	mov	r30, r25
    1356:	96 95       	lsr	r25
    1358:	96 95       	lsr	r25
    135a:	e9 0f       	add	r30, r25
    135c:	ff 27       	eor	r31, r31
    135e:	e2 54       	subi	r30, 0x42	; 66
    1360:	ff 4f       	sbci	r31, 0xFF	; 255
    1362:	99 27       	eor	r25, r25
    1364:	33 27       	eor	r19, r19
    1366:	ee 24       	eor	r14, r14
    1368:	ff 24       	eor	r15, r15
    136a:	a7 01       	movw	r20, r14
    136c:	e7 01       	movw	r28, r14
    136e:	05 90       	lpm	r0, Z+
    1370:	08 94       	sec
    1372:	07 94       	ror	r0
    1374:	28 f4       	brcc	.+10     	; 0x1380 <__ftoa_engine+0x80>
    1376:	36 0f       	add	r19, r22
    1378:	e7 1e       	adc	r14, r23
    137a:	f8 1e       	adc	r15, r24
    137c:	49 1f       	adc	r20, r25
    137e:	51 1d       	adc	r21, r1
    1380:	66 0f       	add	r22, r22
    1382:	77 1f       	adc	r23, r23
    1384:	88 1f       	adc	r24, r24
    1386:	99 1f       	adc	r25, r25
    1388:	06 94       	lsr	r0
    138a:	a1 f7       	brne	.-24     	; 0x1374 <__ftoa_engine+0x74>
    138c:	05 90       	lpm	r0, Z+
    138e:	07 94       	ror	r0
    1390:	28 f4       	brcc	.+10     	; 0x139c <__ftoa_engine+0x9c>
    1392:	e7 0e       	add	r14, r23
    1394:	f8 1e       	adc	r15, r24
    1396:	49 1f       	adc	r20, r25
    1398:	56 1f       	adc	r21, r22
    139a:	c1 1d       	adc	r28, r1
    139c:	77 0f       	add	r23, r23
    139e:	88 1f       	adc	r24, r24
    13a0:	99 1f       	adc	r25, r25
    13a2:	66 1f       	adc	r22, r22
    13a4:	06 94       	lsr	r0
    13a6:	a1 f7       	brne	.-24     	; 0x1390 <__ftoa_engine+0x90>
    13a8:	05 90       	lpm	r0, Z+
    13aa:	07 94       	ror	r0
    13ac:	28 f4       	brcc	.+10     	; 0x13b8 <__ftoa_engine+0xb8>
    13ae:	f8 0e       	add	r15, r24
    13b0:	49 1f       	adc	r20, r25
    13b2:	56 1f       	adc	r21, r22
    13b4:	c7 1f       	adc	r28, r23
    13b6:	d1 1d       	adc	r29, r1
    13b8:	88 0f       	add	r24, r24
    13ba:	99 1f       	adc	r25, r25
    13bc:	66 1f       	adc	r22, r22
    13be:	77 1f       	adc	r23, r23
    13c0:	06 94       	lsr	r0
    13c2:	a1 f7       	brne	.-24     	; 0x13ac <__ftoa_engine+0xac>
    13c4:	05 90       	lpm	r0, Z+
    13c6:	07 94       	ror	r0
    13c8:	20 f4       	brcc	.+8      	; 0x13d2 <__ftoa_engine+0xd2>
    13ca:	49 0f       	add	r20, r25
    13cc:	56 1f       	adc	r21, r22
    13ce:	c7 1f       	adc	r28, r23
    13d0:	d8 1f       	adc	r29, r24
    13d2:	99 0f       	add	r25, r25
    13d4:	66 1f       	adc	r22, r22
    13d6:	77 1f       	adc	r23, r23
    13d8:	88 1f       	adc	r24, r24
    13da:	06 94       	lsr	r0
    13dc:	a9 f7       	brne	.-22     	; 0x13c8 <__ftoa_engine+0xc8>
    13de:	84 91       	lpm	r24, Z
    13e0:	10 95       	com	r17
    13e2:	17 70       	andi	r17, 0x07	; 7
    13e4:	41 f0       	breq	.+16     	; 0x13f6 <__ftoa_engine+0xf6>
    13e6:	d6 95       	lsr	r29
    13e8:	c7 95       	ror	r28
    13ea:	57 95       	ror	r21
    13ec:	47 95       	ror	r20
    13ee:	f7 94       	ror	r15
    13f0:	e7 94       	ror	r14
    13f2:	1a 95       	dec	r17
    13f4:	c1 f7       	brne	.-16     	; 0x13e6 <__ftoa_engine+0xe6>
    13f6:	e4 e6       	ldi	r30, 0x64	; 100
    13f8:	f0 e0       	ldi	r31, 0x00	; 0
    13fa:	68 94       	set
    13fc:	15 90       	lpm	r1, Z+
    13fe:	15 91       	lpm	r17, Z+
    1400:	35 91       	lpm	r19, Z+
    1402:	65 91       	lpm	r22, Z+
    1404:	95 91       	lpm	r25, Z+
    1406:	05 90       	lpm	r0, Z+
    1408:	7f e2       	ldi	r23, 0x2F	; 47
    140a:	73 95       	inc	r23
    140c:	e1 18       	sub	r14, r1
    140e:	f1 0a       	sbc	r15, r17
    1410:	43 0b       	sbc	r20, r19
    1412:	56 0b       	sbc	r21, r22
    1414:	c9 0b       	sbc	r28, r25
    1416:	d0 09       	sbc	r29, r0
    1418:	c0 f7       	brcc	.-16     	; 0x140a <__ftoa_engine+0x10a>
    141a:	e1 0c       	add	r14, r1
    141c:	f1 1e       	adc	r15, r17
    141e:	43 1f       	adc	r20, r19
    1420:	56 1f       	adc	r21, r22
    1422:	c9 1f       	adc	r28, r25
    1424:	d0 1d       	adc	r29, r0
    1426:	7e f4       	brtc	.+30     	; 0x1446 <__ftoa_engine+0x146>
    1428:	70 33       	cpi	r23, 0x30	; 48
    142a:	11 f4       	brne	.+4      	; 0x1430 <__ftoa_engine+0x130>
    142c:	8a 95       	dec	r24
    142e:	e6 cf       	rjmp	.-52     	; 0x13fc <__ftoa_engine+0xfc>
    1430:	e8 94       	clt
    1432:	01 50       	subi	r16, 0x01	; 1
    1434:	30 f0       	brcs	.+12     	; 0x1442 <__ftoa_engine+0x142>
    1436:	08 0f       	add	r16, r24
    1438:	0a f4       	brpl	.+2      	; 0x143c <__ftoa_engine+0x13c>
    143a:	00 27       	eor	r16, r16
    143c:	02 17       	cp	r16, r18
    143e:	08 f4       	brcc	.+2      	; 0x1442 <__ftoa_engine+0x142>
    1440:	20 2f       	mov	r18, r16
    1442:	23 95       	inc	r18
    1444:	02 2f       	mov	r16, r18
    1446:	7a 33       	cpi	r23, 0x3A	; 58
    1448:	28 f0       	brcs	.+10     	; 0x1454 <__ftoa_engine+0x154>
    144a:	79 e3       	ldi	r23, 0x39	; 57
    144c:	7d 93       	st	X+, r23
    144e:	2a 95       	dec	r18
    1450:	e9 f7       	brne	.-6      	; 0x144c <__ftoa_engine+0x14c>
    1452:	10 c0       	rjmp	.+32     	; 0x1474 <__ftoa_engine+0x174>
    1454:	7d 93       	st	X+, r23
    1456:	2a 95       	dec	r18
    1458:	89 f6       	brne	.-94     	; 0x13fc <__ftoa_engine+0xfc>
    145a:	06 94       	lsr	r0
    145c:	97 95       	ror	r25
    145e:	67 95       	ror	r22
    1460:	37 95       	ror	r19
    1462:	17 95       	ror	r17
    1464:	17 94       	ror	r1
    1466:	e1 18       	sub	r14, r1
    1468:	f1 0a       	sbc	r15, r17
    146a:	43 0b       	sbc	r20, r19
    146c:	56 0b       	sbc	r21, r22
    146e:	c9 0b       	sbc	r28, r25
    1470:	d0 09       	sbc	r29, r0
    1472:	98 f0       	brcs	.+38     	; 0x149a <__ftoa_engine+0x19a>
    1474:	23 95       	inc	r18
    1476:	7e 91       	ld	r23, -X
    1478:	73 95       	inc	r23
    147a:	7a 33       	cpi	r23, 0x3A	; 58
    147c:	08 f0       	brcs	.+2      	; 0x1480 <__ftoa_engine+0x180>
    147e:	70 e3       	ldi	r23, 0x30	; 48
    1480:	7c 93       	st	X, r23
    1482:	20 13       	cpse	r18, r16
    1484:	b8 f7       	brcc	.-18     	; 0x1474 <__ftoa_engine+0x174>
    1486:	7e 91       	ld	r23, -X
    1488:	70 61       	ori	r23, 0x10	; 16
    148a:	7d 93       	st	X+, r23
    148c:	30 f0       	brcs	.+12     	; 0x149a <__ftoa_engine+0x19a>
    148e:	83 95       	inc	r24
    1490:	71 e3       	ldi	r23, 0x31	; 49
    1492:	7d 93       	st	X+, r23
    1494:	70 e3       	ldi	r23, 0x30	; 48
    1496:	2a 95       	dec	r18
    1498:	e1 f7       	brne	.-8      	; 0x1492 <__ftoa_engine+0x192>
    149a:	11 24       	eor	r1, r1
    149c:	ef 90       	pop	r14
    149e:	ff 90       	pop	r15
    14a0:	0f 91       	pop	r16
    14a2:	1f 91       	pop	r17
    14a4:	cf 91       	pop	r28
    14a6:	df 91       	pop	r29
    14a8:	99 27       	eor	r25, r25
    14aa:	87 fd       	sbrc	r24, 7
    14ac:	90 95       	com	r25
    14ae:	08 95       	ret

000014b0 <strnlen_P>:
    14b0:	fc 01       	movw	r30, r24
    14b2:	05 90       	lpm	r0, Z+
    14b4:	61 50       	subi	r22, 0x01	; 1
    14b6:	70 40       	sbci	r23, 0x00	; 0
    14b8:	01 10       	cpse	r0, r1
    14ba:	d8 f7       	brcc	.-10     	; 0x14b2 <strnlen_P+0x2>
    14bc:	80 95       	com	r24
    14be:	90 95       	com	r25
    14c0:	8e 0f       	add	r24, r30
    14c2:	9f 1f       	adc	r25, r31
    14c4:	08 95       	ret

000014c6 <strnlen>:
    14c6:	fc 01       	movw	r30, r24
    14c8:	61 50       	subi	r22, 0x01	; 1
    14ca:	70 40       	sbci	r23, 0x00	; 0
    14cc:	01 90       	ld	r0, Z+
    14ce:	01 10       	cpse	r0, r1
    14d0:	d8 f7       	brcc	.-10     	; 0x14c8 <strnlen+0x2>
    14d2:	80 95       	com	r24
    14d4:	90 95       	com	r25
    14d6:	8e 0f       	add	r24, r30
    14d8:	9f 1f       	adc	r25, r31
    14da:	08 95       	ret

000014dc <ltoa>:
    14dc:	25 32       	cpi	r18, 0x25	; 37
    14de:	31 05       	cpc	r19, r1
    14e0:	20 f4       	brcc	.+8      	; 0x14ea <ltoa+0xe>
    14e2:	22 30       	cpi	r18, 0x02	; 2
    14e4:	10 f0       	brcs	.+4      	; 0x14ea <ltoa+0xe>
    14e6:	0c 94 79 0a 	jmp	0x14f2	; 0x14f2 <__ltoa_ncheck>
    14ea:	fa 01       	movw	r30, r20
    14ec:	10 82       	st	Z, r1
    14ee:	ca 01       	movw	r24, r20
    14f0:	08 95       	ret

000014f2 <__ltoa_ncheck>:
    14f2:	bb 27       	eor	r27, r27
    14f4:	2a 30       	cpi	r18, 0x0A	; 10
    14f6:	51 f4       	brne	.+20     	; 0x150c <__ltoa_ncheck+0x1a>
    14f8:	99 23       	and	r25, r25
    14fa:	42 f4       	brpl	.+16     	; 0x150c <__ltoa_ncheck+0x1a>
    14fc:	bd e2       	ldi	r27, 0x2D	; 45
    14fe:	90 95       	com	r25
    1500:	80 95       	com	r24
    1502:	70 95       	com	r23
    1504:	61 95       	neg	r22
    1506:	7f 4f       	sbci	r23, 0xFF	; 255
    1508:	8f 4f       	sbci	r24, 0xFF	; 255
    150a:	9f 4f       	sbci	r25, 0xFF	; 255
    150c:	0c 94 89 0a 	jmp	0x1512	; 0x1512 <__ultoa_common>

00001510 <__ultoa_ncheck>:
    1510:	bb 27       	eor	r27, r27

00001512 <__ultoa_common>:
    1512:	fa 01       	movw	r30, r20
    1514:	a6 2f       	mov	r26, r22
    1516:	62 17       	cp	r22, r18
    1518:	71 05       	cpc	r23, r1
    151a:	81 05       	cpc	r24, r1
    151c:	91 05       	cpc	r25, r1
    151e:	33 0b       	sbc	r19, r19
    1520:	30 fb       	bst	r19, 0
    1522:	66 f0       	brts	.+24     	; 0x153c <__ultoa_common+0x2a>
    1524:	aa 27       	eor	r26, r26
    1526:	66 0f       	add	r22, r22
    1528:	77 1f       	adc	r23, r23
    152a:	88 1f       	adc	r24, r24
    152c:	99 1f       	adc	r25, r25
    152e:	aa 1f       	adc	r26, r26
    1530:	a2 17       	cp	r26, r18
    1532:	10 f0       	brcs	.+4      	; 0x1538 <__ultoa_common+0x26>
    1534:	a2 1b       	sub	r26, r18
    1536:	63 95       	inc	r22
    1538:	38 50       	subi	r19, 0x08	; 8
    153a:	a9 f7       	brne	.-22     	; 0x1526 <__ultoa_common+0x14>
    153c:	a0 5d       	subi	r26, 0xD0	; 208
    153e:	aa 33       	cpi	r26, 0x3A	; 58
    1540:	08 f0       	brcs	.+2      	; 0x1544 <__ultoa_common+0x32>
    1542:	a9 5d       	subi	r26, 0xD9	; 217
    1544:	a1 93       	st	Z+, r26
    1546:	36 f7       	brtc	.-52     	; 0x1514 <__ultoa_common+0x2>
    1548:	b1 11       	cpse	r27, r1
    154a:	b1 93       	st	Z+, r27
    154c:	10 82       	st	Z, r1
    154e:	ca 01       	movw	r24, r20
    1550:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <strrev>

00001554 <fputc>:
    1554:	0f 93       	push	r16
    1556:	1f 93       	push	r17
    1558:	cf 93       	push	r28
    155a:	df 93       	push	r29
    155c:	18 2f       	mov	r17, r24
    155e:	09 2f       	mov	r16, r25
    1560:	eb 01       	movw	r28, r22
    1562:	8b 81       	ldd	r24, Y+3	; 0x03
    1564:	81 fd       	sbrc	r24, 1
    1566:	09 c0       	rjmp	.+18     	; 0x157a <fputc+0x26>
    1568:	1f ef       	ldi	r17, 0xFF	; 255
    156a:	0f ef       	ldi	r16, 0xFF	; 255
    156c:	81 2f       	mov	r24, r17
    156e:	90 2f       	mov	r25, r16
    1570:	df 91       	pop	r29
    1572:	cf 91       	pop	r28
    1574:	1f 91       	pop	r17
    1576:	0f 91       	pop	r16
    1578:	08 95       	ret
    157a:	82 ff       	sbrs	r24, 2
    157c:	14 c0       	rjmp	.+40     	; 0x15a6 <fputc+0x52>
    157e:	2e 81       	ldd	r18, Y+6	; 0x06
    1580:	3f 81       	ldd	r19, Y+7	; 0x07
    1582:	8c 81       	ldd	r24, Y+4	; 0x04
    1584:	9d 81       	ldd	r25, Y+5	; 0x05
    1586:	28 17       	cp	r18, r24
    1588:	39 07       	cpc	r19, r25
    158a:	3c f4       	brge	.+14     	; 0x159a <fputc+0x46>
    158c:	e8 81       	ld	r30, Y
    158e:	f9 81       	ldd	r31, Y+1	; 0x01
    1590:	cf 01       	movw	r24, r30
    1592:	01 96       	adiw	r24, 0x01	; 1
    1594:	99 83       	std	Y+1, r25	; 0x01
    1596:	88 83       	st	Y, r24
    1598:	10 83       	st	Z, r17
    159a:	8e 81       	ldd	r24, Y+6	; 0x06
    159c:	9f 81       	ldd	r25, Y+7	; 0x07
    159e:	01 96       	adiw	r24, 0x01	; 1
    15a0:	9f 83       	std	Y+7, r25	; 0x07
    15a2:	8e 83       	std	Y+6, r24	; 0x06
    15a4:	e3 cf       	rjmp	.-58     	; 0x156c <fputc+0x18>
    15a6:	e8 85       	ldd	r30, Y+8	; 0x08
    15a8:	f9 85       	ldd	r31, Y+9	; 0x09
    15aa:	81 2f       	mov	r24, r17
    15ac:	09 95       	icall
    15ae:	89 2b       	or	r24, r25
    15b0:	a1 f3       	breq	.-24     	; 0x159a <fputc+0x46>
    15b2:	da cf       	rjmp	.-76     	; 0x1568 <fputc+0x14>

000015b4 <__ultoa_invert>:
    15b4:	fa 01       	movw	r30, r20
    15b6:	aa 27       	eor	r26, r26
    15b8:	28 30       	cpi	r18, 0x08	; 8
    15ba:	51 f1       	breq	.+84     	; 0x1610 <__ultoa_invert+0x5c>
    15bc:	20 31       	cpi	r18, 0x10	; 16
    15be:	81 f1       	breq	.+96     	; 0x1620 <__ultoa_invert+0x6c>
    15c0:	e8 94       	clt
    15c2:	6f 93       	push	r22
    15c4:	6e 7f       	andi	r22, 0xFE	; 254
    15c6:	6e 5f       	subi	r22, 0xFE	; 254
    15c8:	7f 4f       	sbci	r23, 0xFF	; 255
    15ca:	8f 4f       	sbci	r24, 0xFF	; 255
    15cc:	9f 4f       	sbci	r25, 0xFF	; 255
    15ce:	af 4f       	sbci	r26, 0xFF	; 255
    15d0:	b1 e0       	ldi	r27, 0x01	; 1
    15d2:	3e d0       	rcall	.+124    	; 0x1650 <__ultoa_invert+0x9c>
    15d4:	b4 e0       	ldi	r27, 0x04	; 4
    15d6:	3c d0       	rcall	.+120    	; 0x1650 <__ultoa_invert+0x9c>
    15d8:	67 0f       	add	r22, r23
    15da:	78 1f       	adc	r23, r24
    15dc:	89 1f       	adc	r24, r25
    15de:	9a 1f       	adc	r25, r26
    15e0:	a1 1d       	adc	r26, r1
    15e2:	68 0f       	add	r22, r24
    15e4:	79 1f       	adc	r23, r25
    15e6:	8a 1f       	adc	r24, r26
    15e8:	91 1d       	adc	r25, r1
    15ea:	a1 1d       	adc	r26, r1
    15ec:	6a 0f       	add	r22, r26
    15ee:	71 1d       	adc	r23, r1
    15f0:	81 1d       	adc	r24, r1
    15f2:	91 1d       	adc	r25, r1
    15f4:	a1 1d       	adc	r26, r1
    15f6:	20 d0       	rcall	.+64     	; 0x1638 <__ultoa_invert+0x84>
    15f8:	09 f4       	brne	.+2      	; 0x15fc <__ultoa_invert+0x48>
    15fa:	68 94       	set
    15fc:	3f 91       	pop	r19
    15fe:	2a e0       	ldi	r18, 0x0A	; 10
    1600:	26 9f       	mul	r18, r22
    1602:	11 24       	eor	r1, r1
    1604:	30 19       	sub	r19, r0
    1606:	30 5d       	subi	r19, 0xD0	; 208
    1608:	31 93       	st	Z+, r19
    160a:	de f6       	brtc	.-74     	; 0x15c2 <__ultoa_invert+0xe>
    160c:	cf 01       	movw	r24, r30
    160e:	08 95       	ret
    1610:	46 2f       	mov	r20, r22
    1612:	47 70       	andi	r20, 0x07	; 7
    1614:	40 5d       	subi	r20, 0xD0	; 208
    1616:	41 93       	st	Z+, r20
    1618:	b3 e0       	ldi	r27, 0x03	; 3
    161a:	0f d0       	rcall	.+30     	; 0x163a <__ultoa_invert+0x86>
    161c:	c9 f7       	brne	.-14     	; 0x1610 <__ultoa_invert+0x5c>
    161e:	f6 cf       	rjmp	.-20     	; 0x160c <__ultoa_invert+0x58>
    1620:	46 2f       	mov	r20, r22
    1622:	4f 70       	andi	r20, 0x0F	; 15
    1624:	40 5d       	subi	r20, 0xD0	; 208
    1626:	4a 33       	cpi	r20, 0x3A	; 58
    1628:	18 f0       	brcs	.+6      	; 0x1630 <__ultoa_invert+0x7c>
    162a:	49 5d       	subi	r20, 0xD9	; 217
    162c:	31 fd       	sbrc	r19, 1
    162e:	40 52       	subi	r20, 0x20	; 32
    1630:	41 93       	st	Z+, r20
    1632:	02 d0       	rcall	.+4      	; 0x1638 <__ultoa_invert+0x84>
    1634:	a9 f7       	brne	.-22     	; 0x1620 <__ultoa_invert+0x6c>
    1636:	ea cf       	rjmp	.-44     	; 0x160c <__ultoa_invert+0x58>
    1638:	b4 e0       	ldi	r27, 0x04	; 4
    163a:	a6 95       	lsr	r26
    163c:	97 95       	ror	r25
    163e:	87 95       	ror	r24
    1640:	77 95       	ror	r23
    1642:	67 95       	ror	r22
    1644:	ba 95       	dec	r27
    1646:	c9 f7       	brne	.-14     	; 0x163a <__ultoa_invert+0x86>
    1648:	00 97       	sbiw	r24, 0x00	; 0
    164a:	61 05       	cpc	r22, r1
    164c:	71 05       	cpc	r23, r1
    164e:	08 95       	ret
    1650:	9b 01       	movw	r18, r22
    1652:	ac 01       	movw	r20, r24
    1654:	0a 2e       	mov	r0, r26
    1656:	06 94       	lsr	r0
    1658:	57 95       	ror	r21
    165a:	47 95       	ror	r20
    165c:	37 95       	ror	r19
    165e:	27 95       	ror	r18
    1660:	ba 95       	dec	r27
    1662:	c9 f7       	brne	.-14     	; 0x1656 <__ultoa_invert+0xa2>
    1664:	62 0f       	add	r22, r18
    1666:	73 1f       	adc	r23, r19
    1668:	84 1f       	adc	r24, r20
    166a:	95 1f       	adc	r25, r21
    166c:	a0 1d       	adc	r26, r0
    166e:	08 95       	ret

00001670 <strrev>:
    1670:	dc 01       	movw	r26, r24
    1672:	fc 01       	movw	r30, r24
    1674:	67 2f       	mov	r22, r23
    1676:	71 91       	ld	r23, Z+
    1678:	77 23       	and	r23, r23
    167a:	e1 f7       	brne	.-8      	; 0x1674 <strrev+0x4>
    167c:	32 97       	sbiw	r30, 0x02	; 2
    167e:	04 c0       	rjmp	.+8      	; 0x1688 <strrev+0x18>
    1680:	7c 91       	ld	r23, X
    1682:	6d 93       	st	X+, r22
    1684:	70 83       	st	Z, r23
    1686:	62 91       	ld	r22, -Z
    1688:	ae 17       	cp	r26, r30
    168a:	bf 07       	cpc	r27, r31
    168c:	c8 f3       	brcs	.-14     	; 0x1680 <strrev+0x10>
    168e:	08 95       	ret

00001690 <__do_global_dtors>:
    1690:	10 e0       	ldi	r17, 0x00	; 0
    1692:	c0 eb       	ldi	r28, 0xB0	; 176
    1694:	d0 e0       	ldi	r29, 0x00	; 0
    1696:	04 c0       	rjmp	.+8      	; 0x16a0 <__do_global_dtors+0x10>
    1698:	fe 01       	movw	r30, r28
    169a:	0e 94 21 09 	call	0x1242	; 0x1242 <__tablejump2__>
    169e:	21 96       	adiw	r28, 0x01	; 1
    16a0:	c1 3b       	cpi	r28, 0xB1	; 177
    16a2:	d1 07       	cpc	r29, r17
    16a4:	c9 f7       	brne	.-14     	; 0x1698 <__do_global_dtors+0x8>
    16a6:	f8 94       	cli

000016a8 <__stop_program>:
    16a8:	ff cf       	rjmp	.-2      	; 0x16a8 <__stop_program>
