
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000be  00800100  000018b0  00001944  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  008001be  008001be  00001a02  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00001a02  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a14  2**2
                  CONTENTS, READONLY
  5 .avr.prop     00000016  00000000  00000000  00001a54  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000078  00000000  00000000  00001a6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000247d  00000000  00000000  00001ae2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000113c  00000000  00000000  00003f5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000009b2  00000000  00000000  0000509b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000408  00000000  00000000  00005a50  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000099e  00000000  00000000  00005e58  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000d36  00000000  00000000  000067f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000090  00000000  00000000  0000752c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__dtors_end>
       4:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
       8:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
       c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      10:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      14:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      18:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      1c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__vector_7>
      20:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      24:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      28:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      2c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      30:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      34:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      38:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      3c:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      40:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      44:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      48:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      4c:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__vector_19>
      50:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      54:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>
      58:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__bad_interrupt>

0000005c <__trampolines_end>:
      5c:	6e 61       	ori	r22, 0x1E	; 30
      5e:	6e 00       	.word	0x006e	; ????

00000060 <__c.2228>:
      60:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      70:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      80:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      90:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      a0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      b0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      c0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      d0:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      e0:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      f0:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     100:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     110:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     120:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     130:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     140:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     150:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000015e <__ctors_start>:
     15e:	99 05       	cpc	r25, r9

00000160 <__ctors_end>:
     160:	ad 05       	cpc	r26, r13

00000162 <__dtors_end>:
     162:	11 24       	eor	r1, r1
     164:	1f be       	out	0x3f, r1	; 63
     166:	cf ef       	ldi	r28, 0xFF	; 255
     168:	d4 e0       	ldi	r29, 0x04	; 4
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
     16e:	11 e0       	ldi	r17, 0x01	; 1
     170:	a0 e0       	ldi	r26, 0x00	; 0
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	e0 eb       	ldi	r30, 0xB0	; 176
     176:	f8 e1       	ldi	r31, 0x18	; 24
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
     17a:	05 90       	lpm	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	ae 3b       	cpi	r26, 0xBE	; 190
     180:	b1 07       	cpc	r27, r17
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
     184:	21 e0       	ldi	r18, 0x01	; 1
     186:	ae eb       	ldi	r26, 0xBE	; 190
     188:	b1 e0       	ldi	r27, 0x01	; 1
     18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
     18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
     18e:	a3 3d       	cpi	r26, 0xD3	; 211
     190:	b2 07       	cpc	r27, r18
     192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>

00000194 <__do_global_ctors>:
     194:	10 e0       	ldi	r17, 0x00	; 0
     196:	c0 eb       	ldi	r28, 0xB0	; 176
     198:	d0 e0       	ldi	r29, 0x00	; 0
     19a:	04 c0       	rjmp	.+8      	; 0x1a4 <__do_global_ctors+0x10>
     19c:	21 97       	sbiw	r28, 0x01	; 1
     19e:	fe 01       	movw	r30, r28
     1a0:	0e 94 92 0a 	call	0x1524	; 0x1524 <__tablejump2__>
     1a4:	cf 3a       	cpi	r28, 0xAF	; 175
     1a6:	d1 07       	cpc	r29, r17
     1a8:	c9 f7       	brne	.-14     	; 0x19c <__do_global_ctors+0x8>
     1aa:	0e 94 9d 04 	call	0x93a	; 0x93a <main>
     1ae:	0c 94 4b 0c 	jmp	0x1896	; 0x1896 <__do_global_dtors>

000001b2 <__bad_interrupt>:
     1b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001b6 <__vector_19>:
}




ISR(ADC_vect){
     1b6:	1f 92       	push	r1
     1b8:	0f 92       	push	r0
     1ba:	0f b6       	in	r0, 0x3f	; 63
     1bc:	0f 92       	push	r0
     1be:	11 24       	eor	r1, r1
     1c0:	2f 93       	push	r18
     1c2:	3f 93       	push	r19
     1c4:	4f 93       	push	r20
     1c6:	5f 93       	push	r21
     1c8:	6f 93       	push	r22
     1ca:	7f 93       	push	r23
     1cc:	8f 93       	push	r24
     1ce:	9f 93       	push	r25
     1d0:	af 93       	push	r26
     1d2:	bf 93       	push	r27
     1d4:	ef 93       	push	r30
     1d6:	ff 93       	push	r31
	uint16_t ADC_val=ADCL;
     1d8:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7fc078>
	ADC_val+=ADCH<<8;
     1dc:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7fc079>
     1e0:	90 e0       	ldi	r25, 0x00	; 0
     1e2:	98 2f       	mov	r25, r24
     1e4:	88 27       	eor	r24, r24
     1e6:	68 0f       	add	r22, r24
     1e8:	79 2f       	mov	r23, r25
     1ea:	71 1d       	adc	r23, r1
	//CNT=1.1*1024/Vref
	//Vref=1.1*1024/CNT
	//1.02578
	//1.0127
	//
	uint32_t cnt=(109875.0)/ADC_val;// in tens of mV, i.e. 330=>3.30V
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	80 e0       	ldi	r24, 0x00	; 0
     1f0:	0e 94 b7 09 	call	0x136e	; 0x136e <__floatunsisf>
     1f4:	9b 01       	movw	r18, r22
     1f6:	ac 01       	movw	r20, r24
     1f8:	60 e8       	ldi	r22, 0x80	; 128
     1fa:	79 e9       	ldi	r23, 0x99	; 153
     1fc:	86 ed       	ldi	r24, 0xD6	; 214
     1fe:	97 e4       	ldi	r25, 0x47	; 71
     200:	0e 94 16 09 	call	0x122c	; 0x122c <__divsf3>
     204:	0e 94 88 09 	call	0x1310	; 0x1310 <__fixunssfsi>
	if(cnt>=BATT_FULL){
     208:	6a 34       	cpi	r22, 0x4A	; 74
     20a:	21 e0       	ldi	r18, 0x01	; 1
     20c:	72 07       	cpc	r23, r18
     20e:	81 05       	cpc	r24, r1
     210:	91 05       	cpc	r25, r1
     212:	a0 f0       	brcs	.+40     	; 0x23c <__EEPROM_REGION_LENGTH__+0x3c>
		myLCD.setBattery(LCD::FULL);
     214:	87 e0       	ldi	r24, 0x07	; 7
	}else if(cnt>=BATT_ONEBAR){
		myLCD.setBattery(LCD::ONEBAR);
	}else if(cnt>=BATT_EMPTY){
		myLCD.setBattery(LCD::EMPTY);
	}else{
		myLCD.setBattery(LCD::NONE);
     216:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <_ZN3LCD10setBatteryENS_7BatteryE>
		//we should shutdown here
	}
}
     21a:	ff 91       	pop	r31
     21c:	ef 91       	pop	r30
     21e:	bf 91       	pop	r27
     220:	af 91       	pop	r26
     222:	9f 91       	pop	r25
     224:	8f 91       	pop	r24
     226:	7f 91       	pop	r23
     228:	6f 91       	pop	r22
     22a:	5f 91       	pop	r21
     22c:	4f 91       	pop	r20
     22e:	3f 91       	pop	r19
     230:	2f 91       	pop	r18
     232:	0f 90       	pop	r0
     234:	0f be       	out	0x3f, r0	; 63
     236:	0f 90       	pop	r0
     238:	1f 90       	pop	r1
     23a:	18 95       	reti
	//1.0127
	//
	uint32_t cnt=(109875.0)/ADC_val;// in tens of mV, i.e. 330=>3.30V
	if(cnt>=BATT_FULL){
		myLCD.setBattery(LCD::FULL);
	}else if(cnt>=BATT_TWOBAR){
     23c:	60 34       	cpi	r22, 0x40	; 64
     23e:	21 e0       	ldi	r18, 0x01	; 1
     240:	72 07       	cpc	r23, r18
     242:	81 05       	cpc	r24, r1
     244:	91 05       	cpc	r25, r1
     246:	10 f0       	brcs	.+4      	; 0x24c <__EEPROM_REGION_LENGTH__+0x4c>
		myLCD.setBattery(LCD::TWOBAR);
     248:	86 e0       	ldi	r24, 0x06	; 6
     24a:	e5 cf       	rjmp	.-54     	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
	}else if(cnt>=BATT_ONEBAR){
     24c:	66 33       	cpi	r22, 0x36	; 54
     24e:	21 e0       	ldi	r18, 0x01	; 1
     250:	72 07       	cpc	r23, r18
     252:	81 05       	cpc	r24, r1
     254:	91 05       	cpc	r25, r1
     256:	10 f0       	brcs	.+4      	; 0x25c <__EEPROM_REGION_LENGTH__+0x5c>
		myLCD.setBattery(LCD::ONEBAR);
     258:	85 e0       	ldi	r24, 0x05	; 5
     25a:	dd cf       	rjmp	.-70     	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
	}else if(cnt>=BATT_EMPTY){
     25c:	6c 32       	cpi	r22, 0x2C	; 44
     25e:	71 40       	sbci	r23, 0x01	; 1
     260:	81 05       	cpc	r24, r1
     262:	91 05       	cpc	r25, r1
     264:	10 f0       	brcs	.+4      	; 0x26a <__EEPROM_REGION_LENGTH__+0x6a>
		myLCD.setBattery(LCD::EMPTY);
     266:	81 e0       	ldi	r24, 0x01	; 1
     268:	d6 cf       	rjmp	.-84     	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>
	}else{
		myLCD.setBattery(LCD::NONE);
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	d4 cf       	rjmp	.-88     	; 0x216 <__EEPROM_REGION_LENGTH__+0x16>

0000026e <__vector_7>:
		//we should shutdown here
	}
}

ISR(TIMER1_COMPA_vect){//every 100ms
     26e:	1f 92       	push	r1
     270:	0f 92       	push	r0
     272:	0f b6       	in	r0, 0x3f	; 63
     274:	0f 92       	push	r0
     276:	11 24       	eor	r1, r1
     278:	2f 93       	push	r18
     27a:	3f 93       	push	r19
     27c:	4f 93       	push	r20
     27e:	5f 93       	push	r21
     280:	6f 93       	push	r22
     282:	7f 93       	push	r23
     284:	8f 93       	push	r24
     286:	9f 93       	push	r25
     288:	af 93       	push	r26
     28a:	bf 93       	push	r27
     28c:	ef 93       	push	r30
     28e:	ff 93       	push	r31
	total_time_ts++;
     290:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     294:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     298:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     29c:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     2a0:	01 96       	adiw	r24, 0x01	; 1
     2a2:	a1 1d       	adc	r26, r1
     2a4:	b1 1d       	adc	r27, r1
     2a6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     2aa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     2ae:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     2b2:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	myProgram.myBeep.update();
     2b6:	82 ec       	ldi	r24, 0xC2	; 194
     2b8:	91 e0       	ldi	r25, 0x01	; 1
     2ba:	0e 94 87 04 	call	0x90e	; 0x90e <_ZN4Beep6updateEv>
	flags_state|=0x01;
     2be:	80 91 c1 01 	lds	r24, 0x01C1	; 0x8001c1 <flags_state>
     2c2:	81 60       	ori	r24, 0x01	; 1
     2c4:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <flags_state>
}
     2c8:	ff 91       	pop	r31
     2ca:	ef 91       	pop	r30
     2cc:	bf 91       	pop	r27
     2ce:	af 91       	pop	r26
     2d0:	9f 91       	pop	r25
     2d2:	8f 91       	pop	r24
     2d4:	7f 91       	pop	r23
     2d6:	6f 91       	pop	r22
     2d8:	5f 91       	pop	r21
     2da:	4f 91       	pop	r20
     2dc:	3f 91       	pop	r19
     2de:	2f 91       	pop	r18
     2e0:	0f 90       	pop	r0
     2e2:	0f be       	out	0x3f, r0	; 63
     2e4:	0f 90       	pop	r0
     2e6:	1f 90       	pop	r1
     2e8:	18 95       	reti

000002ea <_Z9writeTimev>:
/*
ISR(USART0_RX_vect){
	uart.receive();
}*/

void writeTime(void){
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
	uint8_t mins=total_time_ts/600;
     2f2:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     2f6:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     2fa:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     2fe:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     302:	28 e5       	ldi	r18, 0x58	; 88
     304:	32 e0       	ldi	r19, 0x02	; 2
     306:	40 e0       	ldi	r20, 0x00	; 0
     308:	50 e0       	ldi	r21, 0x00	; 0
     30a:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__udivmodsi4>
     30e:	c2 2f       	mov	r28, r18
	uint8_t secs=(total_time_ts/10)%60;
     310:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     314:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     318:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     31c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     320:	2a e0       	ldi	r18, 0x0A	; 10
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	40 e0       	ldi	r20, 0x00	; 0
     326:	50 e0       	ldi	r21, 0x00	; 0
     328:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__udivmodsi4>
     32c:	ca 01       	movw	r24, r20
     32e:	b9 01       	movw	r22, r18
     330:	2c e3       	ldi	r18, 0x3C	; 60
     332:	30 e0       	ldi	r19, 0x00	; 0
     334:	40 e0       	ldi	r20, 0x00	; 0
     336:	50 e0       	ldi	r21, 0x00	; 0
     338:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__udivmodsi4>
     33c:	d6 2f       	mov	r29, r22
     33e:	06 2f       	mov	r16, r22
	if(mins>9){
     340:	ca 30       	cpi	r28, 0x0A	; 10
     342:	30 f1       	brcs	.+76     	; 0x390 <_Z9writeTimev+0xa6>
		myLCD.setDigit(0,mins/10);
     344:	8c 2f       	mov	r24, r28
     346:	6a e0       	ldi	r22, 0x0A	; 10
     348:	0e 94 45 0a 	call	0x148a	; 0x148a <__udivmodqi4>
     34c:	68 2f       	mov	r22, r24
     34e:	80 e0       	ldi	r24, 0x00	; 0
     350:	0e 94 04 02 	call	0x408	; 0x408 <_ZN3LCD8setDigitEhh>
	}else{
		myLCD.setDigit(0,LCD::Blank);
	}
	myLCD.setDigit(1,mins%10);
     354:	1a e0       	ldi	r17, 0x0A	; 10
     356:	8c 2f       	mov	r24, r28
     358:	61 2f       	mov	r22, r17
     35a:	0e 94 45 0a 	call	0x148a	; 0x148a <__udivmodqi4>
     35e:	69 2f       	mov	r22, r25
     360:	81 e0       	ldi	r24, 0x01	; 1
     362:	0e 94 04 02 	call	0x408	; 0x408 <_ZN3LCD8setDigitEhh>
	myLCD.setDigit(2,secs/10);
     366:	80 2f       	mov	r24, r16
     368:	61 2f       	mov	r22, r17
     36a:	0e 94 45 0a 	call	0x148a	; 0x148a <__udivmodqi4>
     36e:	c9 2f       	mov	r28, r25
     370:	68 2f       	mov	r22, r24
     372:	82 e0       	ldi	r24, 0x02	; 2
     374:	0e 94 04 02 	call	0x408	; 0x408 <_ZN3LCD8setDigitEhh>
	myLCD.setDigit(3,secs%10);
     378:	6c 2f       	mov	r22, r28
     37a:	83 e0       	ldi	r24, 0x03	; 3
     37c:	0e 94 04 02 	call	0x408	; 0x408 <_ZN3LCD8setDigitEhh>
	myLCD.setClk(secs%2);
     380:	8d 2f       	mov	r24, r29
     382:	81 70       	andi	r24, 0x01	; 1
}
     384:	df 91       	pop	r29
     386:	cf 91       	pop	r28
     388:	1f 91       	pop	r17
     38a:	0f 91       	pop	r16
		myLCD.setDigit(0,LCD::Blank);
	}
	myLCD.setDigit(1,mins%10);
	myLCD.setDigit(2,secs/10);
	myLCD.setDigit(3,secs%10);
	myLCD.setClk(secs%2);
     38c:	0c 94 e8 02 	jmp	0x5d0	; 0x5d0 <_ZN3LCD6setClkEb>
	uint8_t mins=total_time_ts/600;
	uint8_t secs=(total_time_ts/10)%60;
	if(mins>9){
		myLCD.setDigit(0,mins/10);
	}else{
		myLCD.setDigit(0,LCD::Blank);
     390:	60 e0       	ldi	r22, 0x00	; 0
     392:	80 e0       	ldi	r24, 0x00	; 0
     394:	0e 94 42 02 	call	0x484	; 0x484 <_ZN3LCD8setDigitEhNS_6SymbolE>
     398:	dd cf       	rjmp	.-70     	; 0x354 <_Z9writeTimev+0x6a>

0000039a <_ZN3LCDC1Eb>:
		{{4,4,4,5,5,5,5},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}},
		{{2,2,2,3,3,3,3},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}},
		{{0,0,0,1,1,1,1},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}}};

LCD::LCD(bool lowP){
	DDRB |= (1 << PB0);
     39a:	20 9a       	sbi	0x04, 0	; 4
	PORTB |= (1<<PB0);
     39c:	28 9a       	sbi	0x05, 0	; 5
	LCDCRB|=(1<<LCDMUX1)|(1<<LCDMUX0);
     39e:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     3a2:	80 63       	ori	r24, 0x30	; 48
     3a4:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	
	if(lowP){
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD1)|(1<<LCDCD0); // prescaler 4096, division factor 32 & K=8 for duty 1/4
     3a8:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
LCD::LCD(bool lowP){
	DDRB |= (1 << PB0);
	PORTB |= (1<<PB0);
	LCDCRB|=(1<<LCDMUX1)|(1<<LCDMUX0);
	
	if(lowP){
     3ac:	66 23       	and	r22, r22
     3ae:	71 f0       	breq	.+28     	; 0x3cc <_ZN3LCDC1Eb+0x32>
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD1)|(1<<LCDCD0); // prescaler 4096, division factor 32 & K=8 for duty 1/4
     3b0:	87 67       	ori	r24, 0x77	; 119
     3b2:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCDCCR|=(1<<LCDDC0);// 2.6V 70µs
     3b6:	80 91 e7 00 	lds	r24, 0x00E7	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     3ba:	80 62       	ori	r24, 0x20	; 32
     3bc:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
		LCDCRA|=(1<<LCDEN)|(1<<LCDAB);//LCDAB=low power waveform
     3c0:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     3c4:	80 6c       	ori	r24, 0xC0	; 192
	}else{
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD2)|(1<<LCDCD0); // prescaler 4096, division factor 8 & K=8 for duty 1/4
		LCDCCR|=(1<<LCDCC1)|(1<<LCDCC2)|(1<<LCDDC1);//2.7V 1150µs
		LCDCRA|=(1<<LCDEN);
     3c6:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	}
}
     3ca:	08 95       	ret
	if(lowP){
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD1)|(1<<LCDCD0); // prescaler 4096, division factor 32 & K=8 for duty 1/4
		LCDCCR|=(1<<LCDDC0);// 2.6V 70µs
		LCDCRA|=(1<<LCDEN)|(1<<LCDAB);//LCDAB=low power waveform
	}else{
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD2)|(1<<LCDCD0); // prescaler 4096, division factor 8 & K=8 for duty 1/4
     3cc:	85 67       	ori	r24, 0x75	; 117
     3ce:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCDCCR|=(1<<LCDCC1)|(1<<LCDCC2)|(1<<LCDDC1);//2.7V 1150µs
     3d2:	80 91 e7 00 	lds	r24, 0x00E7	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     3d6:	86 64       	ori	r24, 0x46	; 70
     3d8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
		LCDCRA|=(1<<LCDEN);
     3dc:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     3e0:	80 68       	ori	r24, 0x80	; 128
     3e2:	f1 cf       	rjmp	.-30     	; 0x3c6 <_ZN3LCDC1Eb+0x2c>

000003e4 <_ZN3LCDD1Ev>:
	}
}

LCD::~LCD() {
	LCDCRA|=(1<<LCDBL);
     3e4:	e4 ee       	ldi	r30, 0xE4	; 228
     3e6:	f0 e0       	ldi	r31, 0x00	; 0
     3e8:	80 81       	ld	r24, Z
     3ea:	81 60       	ori	r24, 0x01	; 1
     3ec:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ee:	2f ef       	ldi	r18, 0xFF	; 255
     3f0:	84 e3       	ldi	r24, 0x34	; 52
     3f2:	9c e0       	ldi	r25, 0x0C	; 12
     3f4:	21 50       	subi	r18, 0x01	; 1
     3f6:	80 40       	sbci	r24, 0x00	; 0
     3f8:	90 40       	sbci	r25, 0x00	; 0
     3fa:	e1 f7       	brne	.-8      	; 0x3f4 <_ZN3LCDD1Ev+0x10>
     3fc:	00 c0       	rjmp	.+0      	; 0x3fe <_ZN3LCDD1Ev+0x1a>
     3fe:	00 00       	nop
	_delay_ms(500);
	LCDCRA&=~(1<<LCDEN);
     400:	80 81       	ld	r24, Z
     402:	8f 77       	andi	r24, 0x7F	; 127
     404:	80 83       	st	Z, r24
}
     406:	08 95       	ret

00000408 <_ZN3LCD8setDigitEhh>:

void LCD::setDigit(uint8_t dig, uint8_t nb) {
     408:	1f 93       	push	r17
     40a:	cf 93       	push	r28
     40c:	df 93       	push	r29
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
     40e:	e6 2f       	mov	r30, r22
     410:	f0 e0       	ldi	r31, 0x00	; 0
     412:	ed 57       	subi	r30, 0x7D	; 125
     414:	fe 4f       	sbci	r31, 0xFE	; 254
     416:	60 81       	ld	r22, Z
     418:	70 e0       	ldi	r23, 0x00	; 0
     41a:	15 e1       	ldi	r17, 0x15	; 21
     41c:	81 9f       	mul	r24, r17
     41e:	c0 01       	movw	r24, r0
     420:	11 24       	eor	r1, r1
     422:	8b 5f       	subi	r24, 0xFB	; 251
     424:	9e 4f       	sbci	r25, 0xFE	; 254
     426:	30 e0       	ldi	r19, 0x00	; 0
     428:	20 e0       	ldi	r18, 0x00	; 0
     42a:	a1 e0       	ldi	r26, 0x01	; 1
     42c:	b0 e0       	ldi	r27, 0x00	; 0
     42e:	f9 01       	movw	r30, r18
     430:	ee 0f       	add	r30, r30
     432:	ff 1f       	adc	r31, r31
     434:	e8 0f       	add	r30, r24
     436:	f9 1f       	adc	r31, r25
     438:	07 80       	ldd	r0, Z+7	; 0x07
     43a:	f0 85       	ldd	r31, Z+8	; 0x08
     43c:	e0 2d       	mov	r30, r0
     43e:	ec 01       	movw	r28, r24
     440:	c2 0f       	add	r28, r18
     442:	d3 1f       	adc	r29, r19
     444:	48 81       	ld	r20, Y
     446:	ed 01       	movw	r28, r26
     448:	02 c0       	rjmp	.+4      	; 0x44e <_ZN3LCD8setDigitEhh+0x46>
     44a:	cc 0f       	add	r28, r28
     44c:	dd 1f       	adc	r29, r29
     44e:	4a 95       	dec	r20
     450:	e2 f7       	brpl	.-8      	; 0x44a <_ZN3LCD8setDigitEhh+0x42>
     452:	ae 01       	movw	r20, r28
     454:	eb 01       	movw	r28, r22
     456:	02 2e       	mov	r0, r18
     458:	02 c0       	rjmp	.+4      	; 0x45e <_ZN3LCD8setDigitEhh+0x56>
     45a:	d5 95       	asr	r29
     45c:	c7 95       	ror	r28
     45e:	0a 94       	dec	r0
     460:	e2 f7       	brpl	.-8      	; 0x45a <_ZN3LCD8setDigitEhh+0x52>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     462:	50 81       	ld	r21, Z
	LCDCRA&=~(1<<LCDEN);
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
     464:	c0 ff       	sbrs	r28, 0
     466:	0b c0       	rjmp	.+22     	; 0x47e <_ZN3LCD8setDigitEhh+0x76>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     468:	45 2b       	or	r20, r21
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     46a:	40 83       	st	Z, r20
     46c:	2f 5f       	subi	r18, 0xFF	; 255
     46e:	3f 4f       	sbci	r19, 0xFF	; 255
	_delay_ms(500);
	LCDCRA&=~(1<<LCDEN);
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
     470:	28 30       	cpi	r18, 0x08	; 8
     472:	31 05       	cpc	r19, r1
     474:	e1 f6       	brne	.-72     	; 0x42e <_ZN3LCD8setDigitEhh+0x26>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
		}	
	}
}
     476:	df 91       	pop	r29
     478:	cf 91       	pop	r28
     47a:	1f 91       	pop	r17
     47c:	08 95       	ret
void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     47e:	40 95       	com	r20
     480:	45 23       	and	r20, r21
     482:	f3 cf       	rjmp	.-26     	; 0x46a <_ZN3LCD8setDigitEhh+0x62>

00000484 <_ZN3LCD8setDigitEhNS_6SymbolE>:
		}	
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
     484:	1f 93       	push	r17
     486:	cf 93       	push	r28
     488:	df 93       	push	r29
     48a:	15 e1       	ldi	r17, 0x15	; 21
     48c:	81 9f       	mul	r24, r17
     48e:	c0 01       	movw	r24, r0
     490:	11 24       	eor	r1, r1
     492:	8b 5f       	subi	r24, 0xFB	; 251
     494:	9e 4f       	sbci	r25, 0xFE	; 254
     496:	30 e0       	ldi	r19, 0x00	; 0
     498:	20 e0       	ldi	r18, 0x00	; 0
     49a:	a1 e0       	ldi	r26, 0x01	; 1
     49c:	b0 e0       	ldi	r27, 0x00	; 0
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
     49e:	70 e0       	ldi	r23, 0x00	; 0
     4a0:	f9 01       	movw	r30, r18
     4a2:	ee 0f       	add	r30, r30
     4a4:	ff 1f       	adc	r31, r31
     4a6:	e8 0f       	add	r30, r24
     4a8:	f9 1f       	adc	r31, r25
     4aa:	07 80       	ldd	r0, Z+7	; 0x07
     4ac:	f0 85       	ldd	r31, Z+8	; 0x08
     4ae:	e0 2d       	mov	r30, r0
     4b0:	ec 01       	movw	r28, r24
     4b2:	c2 0f       	add	r28, r18
     4b4:	d3 1f       	adc	r29, r19
     4b6:	48 81       	ld	r20, Y
     4b8:	ed 01       	movw	r28, r26
     4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <_ZN3LCD8setDigitEhNS_6SymbolE+0x3c>
     4bc:	cc 0f       	add	r28, r28
     4be:	dd 1f       	adc	r29, r29
     4c0:	4a 95       	dec	r20
     4c2:	e2 f7       	brpl	.-8      	; 0x4bc <_ZN3LCD8setDigitEhNS_6SymbolE+0x38>
     4c4:	ae 01       	movw	r20, r28
     4c6:	eb 01       	movw	r28, r22
     4c8:	02 2e       	mov	r0, r18
     4ca:	02 c0       	rjmp	.+4      	; 0x4d0 <_ZN3LCD8setDigitEhNS_6SymbolE+0x4c>
     4cc:	d5 95       	asr	r29
     4ce:	c7 95       	ror	r28
     4d0:	0a 94       	dec	r0
     4d2:	e2 f7       	brpl	.-8      	; 0x4cc <_ZN3LCD8setDigitEhNS_6SymbolE+0x48>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     4d4:	50 81       	ld	r21, Z
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
     4d6:	c0 ff       	sbrs	r28, 0
     4d8:	0b c0       	rjmp	.+22     	; 0x4f0 <_ZN3LCD8setDigitEhNS_6SymbolE+0x6c>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     4da:	45 2b       	or	r20, r21
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     4dc:	40 83       	st	Z, r20
     4de:	2f 5f       	subi	r18, 0xFF	; 255
     4e0:	3f 4f       	sbci	r19, 0xFF	; 255
		}	
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
     4e2:	28 30       	cpi	r18, 0x08	; 8
     4e4:	31 05       	cpc	r19, r1
     4e6:	e1 f6       	brne	.-72     	; 0x4a0 <_ZN3LCD8setDigitEhNS_6SymbolE+0x1c>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
		}
	}
}
     4e8:	df 91       	pop	r29
     4ea:	cf 91       	pop	r28
     4ec:	1f 91       	pop	r17
     4ee:	08 95       	ret
void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     4f0:	40 95       	com	r20
     4f2:	45 23       	and	r20, r21
     4f4:	f3 cf       	rjmp	.-26     	; 0x4dc <_ZN3LCD8setDigitEhNS_6SymbolE+0x58>

000004f6 <_ZN3LCD10setBatteryENS_7BatteryE>:
		}
	}
}

void LCD::setBattery(Battery b) {
	switch(b){
     4f6:	88 30       	cpi	r24, 0x08	; 8
     4f8:	08 f0       	brcs	.+2      	; 0x4fc <_ZN3LCD10setBatteryENS_7BatteryE+0x6>
     4fa:	41 c0       	rjmp	.+130    	; 0x57e <__stack+0x7f>
     4fc:	e8 2f       	mov	r30, r24
     4fe:	f0 e0       	ldi	r31, 0x00	; 0
     500:	ea 57       	subi	r30, 0x7A	; 122
     502:	fd 4f       	sbci	r31, 0xFD	; 253
		LCDDR6 &=~(1<<4);
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
     504:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		}
	}
}

void LCD::setBattery(Battery b) {
	switch(b){
     508:	0c 94 92 0a 	jmp	0x1524	; 0x1524 <__tablejump2__>
     50c:	8e 02       	muls	r24, r30
     50e:	9a 02       	muls	r25, r26
     510:	9c 02       	muls	r25, r28
     512:	ad 02       	muls	r26, r29
     514:	c0 02       	muls	r28, r16
     516:	c7 02       	muls	r28, r23
     518:	c9 02       	muls	r28, r25
     51a:	d5 02       	muls	r29, r21
	case NONE:
		LCDDR1 &=~(1<<4);
     51c:	8f 7e       	andi	r24, 0xEF	; 239
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case EMPTY:
		LCDDR1 |=(1<<4);
     51e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     522:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     526:	8f 7e       	andi	r24, 0xEF	; 239
		LCDDR11 |=(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case THIRD:
		LCDDR1 &=~(1<<4);
		LCDDR6 |=(1<<4);
     528:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 &=~(1<<4);
     52c:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     530:	8f 7e       	andi	r24, 0xEF	; 239
     532:	1e c0       	rjmp	.+60     	; 0x570 <__stack+0x71>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case EMPTY:
		LCDDR1 |=(1<<4);
     534:	80 61       	ori	r24, 0x10	; 16
     536:	f3 cf       	rjmp	.-26     	; 0x51e <__stack+0x1f>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case FIRST:
		LCDDR1 &=~(1<<4);
     538:	8f 7e       	andi	r24, 0xEF	; 239
		LCDDR6 |=(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case ONEBAR:
		LCDDR1 |=(1<<4);
     53a:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     53e:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     542:	8f 7e       	andi	r24, 0xEF	; 239
     544:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 &=~(1<<4);
     548:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     54c:	8f 7e       	andi	r24, 0xEF	; 239
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
		LCDDR6 |=(1<<4);
		LCDDR11 |=(1<<4);
     54e:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
		LCDDR16 |=(1<<4);
     552:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     556:	80 61       	ori	r24, 0x10	; 16
     558:	10 c0       	rjmp	.+32     	; 0x57a <__stack+0x7b>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case SECOND:
		LCDDR1 &=~(1<<4);
     55a:	8f 7e       	andi	r24, 0xEF	; 239
     55c:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     560:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     564:	8f 7e       	andi	r24, 0xEF	; 239
     566:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 |=(1<<4);
     56a:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     56e:	80 61       	ori	r24, 0x10	; 16
		LCDDR16 &=~(1<<4);
		break;
	case THIRD:
		LCDDR1 &=~(1<<4);
		LCDDR6 |=(1<<4);
		LCDDR11 &=~(1<<4);
     570:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
		LCDDR16 &=~(1<<4);
     574:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     578:	8f 7e       	andi	r24, 0xEF	; 239
		break;
	case FULL:
		LCDDR1 |=(1<<4);
		LCDDR6 |=(1<<4);
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
     57a:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
		break;
	}
}
     57e:	08 95       	ret
		LCDDR6 &=~(1<<4);
		LCDDR11 |=(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case THIRD:
		LCDDR1 &=~(1<<4);
     580:	8f 7e       	andi	r24, 0xEF	; 239
     582:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 |=(1<<4);
     586:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     58a:	80 61       	ori	r24, 0x10	; 16
     58c:	cd cf       	rjmp	.-102    	; 0x528 <__stack+0x29>
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case ONEBAR:
		LCDDR1 |=(1<<4);
     58e:	80 61       	ori	r24, 0x10	; 16
     590:	d4 cf       	rjmp	.-88     	; 0x53a <__stack+0x3b>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case TWOBAR:
		LCDDR1 |=(1<<4);
     592:	80 61       	ori	r24, 0x10	; 16
     594:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     598:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     59c:	8f 7e       	andi	r24, 0xEF	; 239
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
		LCDDR6 |=(1<<4);
     59e:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 |=(1<<4);
     5a2:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     5a6:	80 61       	ori	r24, 0x10	; 16
     5a8:	d2 cf       	rjmp	.-92     	; 0x54e <__stack+0x4f>
		LCDDR6 &=~(1<<4);
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
     5aa:	80 61       	ori	r24, 0x10	; 16
     5ac:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 |=(1<<4);
     5b0:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     5b4:	80 61       	ori	r24, 0x10	; 16
     5b6:	f3 cf       	rjmp	.-26     	; 0x59e <__stack+0x9f>

000005b8 <_ZN3LCD5setDPEb>:
		break;
	}
}

void LCD::setDP(bool b) {
	if(b){
     5b8:	88 23       	and	r24, r24
     5ba:	31 f0       	breq	.+12     	; 0x5c8 <_ZN3LCD5setDPEb+0x10>
		LCDDR15|=(1<<4);
     5bc:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     5c0:	80 61       	ori	r24, 0x10	; 16
	}else{
		LCDDR15&=~(1<<4);
     5c2:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
	}
}
     5c6:	08 95       	ret

void LCD::setDP(bool b) {
	if(b){
		LCDDR15|=(1<<4);
	}else{
		LCDDR15&=~(1<<4);
     5c8:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     5cc:	8f 7e       	andi	r24, 0xEF	; 239
     5ce:	f9 cf       	rjmp	.-14     	; 0x5c2 <_ZN3LCD5setDPEb+0xa>

000005d0 <_ZN3LCD6setClkEb>:
	}
}

void LCD::setClk(bool b) {
	if(b){
     5d0:	88 23       	and	r24, r24
     5d2:	31 f0       	breq	.+12     	; 0x5e0 <_ZN3LCD6setClkEb+0x10>
		LCDDR16|=1;
     5d4:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     5d8:	81 60       	ori	r24, 0x01	; 1
	}else{
		LCDDR16&=~1;
     5da:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
	}
}
     5de:	08 95       	ret

void LCD::setClk(bool b) {
	if(b){
		LCDDR16|=1;
	}else{
		LCDDR16&=~1;
     5e0:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     5e4:	8e 7f       	andi	r24, 0xFE	; 254
     5e6:	f9 cf       	rjmp	.-14     	; 0x5da <_ZN3LCD6setClkEb+0xa>

000005e8 <_ZN3LCD5getDPEv>:
	}
}

bool LCD::getDP(void) {
	return (LCDDR15 & (1<<4));
     5e8:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
}
     5ec:	82 95       	swap	r24
     5ee:	81 70       	andi	r24, 0x01	; 1
     5f0:	08 95       	ret

000005f2 <_ZN3LCD6getClkEv>:

bool LCD::getClk(void) {
	return (LCDDR16 & 1);
     5f2:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
}
     5f6:	81 70       	andi	r24, 0x01	; 1
     5f8:	08 95       	ret

000005fa <_ZN3LCD5setNbElh>:



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
     5fa:	4f 92       	push	r4
     5fc:	5f 92       	push	r5
     5fe:	6f 92       	push	r6
     600:	7f 92       	push	r7
     602:	8f 92       	push	r8
     604:	9f 92       	push	r9
     606:	af 92       	push	r10
     608:	bf 92       	push	r11
     60a:	cf 92       	push	r12
     60c:	df 92       	push	r13
     60e:	ef 92       	push	r14
     610:	ff 92       	push	r15
     612:	0f 93       	push	r16
     614:	1f 93       	push	r17
     616:	cf 93       	push	r28
     618:	df 93       	push	r29
     61a:	6b 01       	movw	r12, r22
     61c:	7c 01       	movw	r14, r24
     61e:	c4 2f       	mov	r28, r20
	if(nb>999999 || nb <-99999){
     620:	dc 01       	movw	r26, r24
     622:	cb 01       	movw	r24, r22
     624:	81 56       	subi	r24, 0x61	; 97
     626:	99 47       	sbci	r25, 0x79	; 121
     628:	ae 4f       	sbci	r26, 0xFE	; 254
     62a:	bf 4f       	sbci	r27, 0xFF	; 255
     62c:	8f 3d       	cpi	r24, 0xDF	; 223
     62e:	98 4c       	sbci	r25, 0xC8	; 200
     630:	a0 41       	sbci	r26, 0x10	; 16
     632:	b1 05       	cpc	r27, r1
     634:	08 f0       	brcs	.+2      	; 0x638 <_ZN3LCD5setNbElh+0x3e>
     636:	52 c0       	rjmp	.+164    	; 0x6dc <_ZN3LCD5setNbElh+0xe2>
		return 1;
	}
	int8_t d=5;
	uint8_t min=6-dig;
     638:	86 e0       	ldi	r24, 0x06	; 6
     63a:	84 1b       	sub	r24, r20
	if(nb<0){
     63c:	f7 fe       	sbrs	r15, 7
     63e:	0d c0       	rjmp	.+26     	; 0x65a <_ZN3LCD5setNbElh+0x60>
		setDigit(min,Minus);
     640:	60 e4       	ldi	r22, 0x40	; 64
     642:	0e 94 42 02 	call	0x484	; 0x484 <_ZN3LCD8setDigitEhNS_6SymbolE>
		min++;
     646:	87 e0       	ldi	r24, 0x07	; 7
     648:	8c 1b       	sub	r24, r28
		nb=(~nb)+1;
     64a:	f0 94       	com	r15
     64c:	e0 94       	com	r14
     64e:	d0 94       	com	r13
     650:	c0 94       	com	r12
     652:	c1 1c       	adc	r12, r1
     654:	d1 1c       	adc	r13, r1
     656:	e1 1c       	adc	r14, r1
     658:	f1 1c       	adc	r15, r1
	return (LCDDR16 & 1);
}



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
     65a:	15 e0       	ldi	r17, 0x05	; 5
	if(nb<0){
		setDigit(min,Minus);
		min++;
		nb=(~nb)+1;
	}
	while(d>=min){
     65c:	c8 2f       	mov	r28, r24
     65e:	d0 e0       	ldi	r29, 0x00	; 0
		setDigit(d--,nb%10);
     660:	8a e0       	ldi	r24, 0x0A	; 10
     662:	48 2e       	mov	r4, r24
     664:	51 2c       	mov	r5, r1
     666:	61 2c       	mov	r6, r1
     668:	71 2c       	mov	r7, r1
	if(nb<0){
		setDigit(min,Minus);
		min++;
		nb=(~nb)+1;
	}
	while(d>=min){
     66a:	81 2f       	mov	r24, r17
     66c:	01 2e       	mov	r0, r17
     66e:	00 0c       	add	r0, r0
     670:	99 0b       	sbc	r25, r25
     672:	8c 17       	cp	r24, r28
     674:	9d 07       	cpc	r25, r29
     676:	94 f4       	brge	.+36     	; 0x69c <_ZN3LCD5setNbElh+0xa2>



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
	if(nb>999999 || nb <-99999){
		return 1;
     678:	80 e0       	ldi	r24, 0x00	; 0
		nb/=10;
		if(nb==0)break;
	}
	while(d>=min)setDigit(d--,Blank);
	return 0;
}
     67a:	df 91       	pop	r29
     67c:	cf 91       	pop	r28
     67e:	1f 91       	pop	r17
     680:	0f 91       	pop	r16
     682:	ff 90       	pop	r15
     684:	ef 90       	pop	r14
     686:	df 90       	pop	r13
     688:	cf 90       	pop	r12
     68a:	bf 90       	pop	r11
     68c:	af 90       	pop	r10
     68e:	9f 90       	pop	r9
     690:	8f 90       	pop	r8
     692:	7f 90       	pop	r7
     694:	6f 90       	pop	r6
     696:	5f 90       	pop	r5
     698:	4f 90       	pop	r4
     69a:	08 95       	ret
		setDigit(min,Minus);
		min++;
		nb=(~nb)+1;
	}
	while(d>=min){
		setDigit(d--,nb%10);
     69c:	c7 01       	movw	r24, r14
     69e:	b6 01       	movw	r22, r12
     6a0:	a3 01       	movw	r20, r6
     6a2:	92 01       	movw	r18, r4
     6a4:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <__divmodsi4>
     6a8:	49 01       	movw	r8, r18
     6aa:	5a 01       	movw	r10, r20
     6ac:	81 2f       	mov	r24, r17
     6ae:	11 50       	subi	r17, 0x01	; 1
     6b0:	0e 94 04 02 	call	0x408	; 0x408 <_ZN3LCD8setDigitEhh>
		nb/=10;
     6b4:	64 01       	movw	r12, r8
     6b6:	75 01       	movw	r14, r10
		if(nb==0)break;
     6b8:	c1 14       	cp	r12, r1
     6ba:	d1 04       	cpc	r13, r1
     6bc:	e1 04       	cpc	r14, r1
     6be:	f1 04       	cpc	r15, r1
     6c0:	a1 f6       	brne	.-88     	; 0x66a <_ZN3LCD5setNbElh+0x70>
	}
	while(d>=min)setDigit(d--,Blank);
     6c2:	81 2f       	mov	r24, r17
     6c4:	01 2e       	mov	r0, r17
     6c6:	00 0c       	add	r0, r0
     6c8:	99 0b       	sbc	r25, r25
     6ca:	8c 17       	cp	r24, r28
     6cc:	9d 07       	cpc	r25, r29
     6ce:	a4 f2       	brlt	.-88     	; 0x678 <_ZN3LCD5setNbElh+0x7e>
     6d0:	60 e0       	ldi	r22, 0x00	; 0
     6d2:	81 2f       	mov	r24, r17
     6d4:	0e 94 42 02 	call	0x484	; 0x484 <_ZN3LCD8setDigitEhNS_6SymbolE>
     6d8:	11 50       	subi	r17, 0x01	; 1
     6da:	f3 cf       	rjmp	.-26     	; 0x6c2 <_ZN3LCD5setNbElh+0xc8>



uint8_t LCD::setNb(int32_t nb, uint8_t dig) {
	if(nb>999999 || nb <-99999){
		return 1;
     6dc:	81 e0       	ldi	r24, 0x01	; 1
     6de:	cd cf       	rjmp	.-102    	; 0x67a <_ZN3LCD5setNbElh+0x80>

000006e0 <_ZN3LCD5setNbEl>:
	while(d>=min)setDigit(d--,Blank);
	return 0;
}

uint8_t LCD::setNb(int32_t nb) {
	return setNb(nb,6);
     6e0:	46 e0       	ldi	r20, 0x06	; 6
     6e2:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <_ZN3LCD5setNbElh>

000006e6 <_ZN3LCD5clearEb>:
}

void LCD::clear(void) {
	clear(true);
}
void LCD::clear(bool clearBatt) {
     6e6:	cf 93       	push	r28
	if(clearBatt)setBattery(NONE);
     6e8:	88 23       	and	r24, r24
     6ea:	19 f0       	breq	.+6      	; 0x6f2 <_ZN3LCD5clearEb+0xc>
     6ec:	80 e0       	ldi	r24, 0x00	; 0
     6ee:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <_ZN3LCD10setBatteryENS_7BatteryE>
	setClk(false);
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <_ZN3LCD6setClkEb>
	setDP(false);
     6f8:	80 e0       	ldi	r24, 0x00	; 0
     6fa:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <_ZN3LCD5setDPEb>
	for(int8_t i=5;i>=0;i--)setDigit(i,Blank);
     6fe:	c5 e0       	ldi	r28, 0x05	; 5
     700:	60 e0       	ldi	r22, 0x00	; 0
     702:	8c 2f       	mov	r24, r28
     704:	0e 94 42 02 	call	0x484	; 0x484 <_ZN3LCD8setDigitEhNS_6SymbolE>
     708:	c1 50       	subi	r28, 0x01	; 1
     70a:	d0 f7       	brcc	.-12     	; 0x700 <_ZN3LCD5clearEb+0x1a>
}
     70c:	cf 91       	pop	r28
     70e:	08 95       	ret

00000710 <_ZN3LCD5clearEv>:
uint8_t LCD::setNb(int32_t nb) {
	return setNb(nb,6);
}

void LCD::clear(void) {
	clear(true);
     710:	81 e0       	ldi	r24, 0x01	; 1
     712:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <_ZN3LCD5clearEb>

00000716 <_ZN7ProgramD1Ev>:
	LED1_OFF;
}

Program::~Program(){
    
}
     716:	08 95       	ret

00000718 <_ZN7Program4showEv>:
            break;
        }
    }
}

void Program::show(void){
     718:	cf 93       	push	r28
     71a:	df 93       	push	r29
     71c:	ec 01       	movw	r28, r24
    if(started){
     71e:	2a 81       	ldd	r18, Y+2	; 0x02
     720:	22 23       	and	r18, r18
     722:	49 f0       	breq	.+18     	; 0x736 <_ZN7Program4showEv+0x1e>
        myLCD->setNb(lapNb,2);        
     724:	6f 85       	ldd	r22, Y+15	; 0x0f
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	80 e0       	ldi	r24, 0x00	; 0
     72c:	42 e0       	ldi	r20, 0x02	; 2
    }else{
        myLCD->setDigit(4,Sym1[selectedProgram]);
        myLCD->setDigit(5,Sym2[selectedProgram]);
    }
}
     72e:	df 91       	pop	r29
     730:	cf 91       	pop	r28
    }
}

void Program::show(void){
    if(started){
        myLCD->setNb(lapNb,2);        
     732:	0c 94 fd 02 	jmp	0x5fa	; 0x5fa <_ZN3LCD5setNbElh>
    }else{
        myLCD->setDigit(4,Sym1[selectedProgram]);
     736:	e9 81       	ldd	r30, Y+1	; 0x01
     738:	f0 e0       	ldi	r31, 0x00	; 0
     73a:	e7 54       	subi	r30, 0x47	; 71
     73c:	fe 4f       	sbci	r31, 0xFE	; 254
     73e:	60 81       	ld	r22, Z
     740:	84 e0       	ldi	r24, 0x04	; 4
     742:	0e 94 42 02 	call	0x484	; 0x484 <_ZN3LCD8setDigitEhNS_6SymbolE>
        myLCD->setDigit(5,Sym2[selectedProgram]);
     746:	e9 81       	ldd	r30, Y+1	; 0x01
     748:	f0 e0       	ldi	r31, 0x00	; 0
     74a:	ec 54       	subi	r30, 0x4C	; 76
     74c:	fe 4f       	sbci	r31, 0xFE	; 254
     74e:	60 81       	ld	r22, Z
     750:	85 e0       	ldi	r24, 0x05	; 5
    }
}
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
void Program::show(void){
    if(started){
        myLCD->setNb(lapNb,2);        
    }else{
        myLCD->setDigit(4,Sym1[selectedProgram]);
        myLCD->setDigit(5,Sym2[selectedProgram]);
     756:	0c 94 04 02 	jmp	0x408	; 0x408 <_ZN3LCD8setDigitEhh>

0000075a <_ZN4BeepC1Ev>:
    }
}

Beep::Beep(void){
    DDRB|=(1<<PINB4);//buzzer output is PINB4
     75a:	24 9a       	sbi	0x04, 4	; 4
    PORTB&=~(1<<PINB4);
     75c:	2c 98       	cbi	0x05, 4	; 5
    //TCCR0A|=(1<<WGM01)|(1<<COM0A0)|(1<<CS01)|(1<<CS00);//toggle OC0A on compare match, 64 prescaler, start timer
    OCR0A=195;// 8MHz/8 /2 /(191+1) = 2.6kHz
     75e:	83 ec       	ldi	r24, 0xC3	; 195
     760:	87 bd       	out	0x27, r24	; 39
}
     762:	08 95       	ret

00000764 <_ZN7ProgramC1EP3LCD>:
const uint8_t Program::Sym2[]={3,4,3,4,0};

const uint8_t Program::LL_Tlap[]={90,85,80,76,72,69,65,58,55,53,51,50,48};
const uint16_t Program::LL_Tnext[]={1170,1763,2323,2929,3577,4126,4716,5292,5901,6487,7104,7700,8324};

Program::Program(LCD *l){
     764:	0f 93       	push	r16
     766:	1f 93       	push	r17
     768:	cf 93       	push	r28
     76a:	df 93       	push	r29
     76c:	ec 01       	movw	r28, r24
     76e:	8b 01       	movw	r16, r22
     770:	0e 94 ad 03 	call	0x75a	; 0x75a <_ZN4BeepC1Ev>
    myLCD=l;
     774:	1c 83       	std	Y+4, r17	; 0x04
     776:	0b 83       	std	Y+3, r16	; 0x03
    selectedProgram=0;
     778:	19 82       	std	Y+1, r1	; 0x01
    started=0;
     77a:	1a 82       	std	Y+2, r1	; 0x02
	LED0_OFF;
     77c:	5e 98       	cbi	0x0b, 6	; 11
	LED1_OFF;
     77e:	5f 98       	cbi	0x0b, 7	; 11
}
     780:	df 91       	pop	r29
     782:	cf 91       	pop	r28
     784:	1f 91       	pop	r17
     786:	0f 91       	pop	r16
     788:	08 95       	ret

0000078a <_ZN4BeepD1Ev>:
    //TCCR0A|=(1<<WGM01)|(1<<COM0A0)|(1<<CS01)|(1<<CS00);//toggle OC0A on compare match, 64 prescaler, start timer
    OCR0A=195;// 8MHz/8 /2 /(191+1) = 2.6kHz
}
Beep::~Beep(void){
    
}
     78a:	08 95       	ret

0000078c <_ZN4Beep2onEv>:
    }
}
void Beep::on(void){
    
#if (F_CPU==1000000)
    TCCR0A|=(1<<WGM01)|(1<<COM0A0)|(1<<CS00);//toggle OC0A on compare match, 1 prescaler, start timer
     78c:	84 b5       	in	r24, 0x24	; 36
     78e:	89 61       	ori	r24, 0x19	; 25
     790:	84 bd       	out	0x24, r24	; 36
#else
    TCCR0A|=(1<<WGM01)|(1<<COM0A0)|(1<<CS01);//toggle OC0A on compare match, 8 prescaler, start timer
#endif
}
     792:	08 95       	ret

00000794 <_ZN4Beep7singleBEv>:
Beep::~Beep(void){
    
}

void Beep::singleB(void){
    cnt=3;
     794:	23 e0       	ldi	r18, 0x03	; 3
     796:	fc 01       	movw	r30, r24
     798:	20 83       	st	Z, r18
    on();
     79a:	0c 94 c6 03 	jmp	0x78c	; 0x78c <_ZN4Beep2onEv>

0000079e <_ZN4Beep5dualBEv>:
}
void Beep::dualB(void){
    cnt=5;
     79e:	25 e0       	ldi	r18, 0x05	; 5
     7a0:	fc 01       	movw	r30, r24
     7a2:	20 83       	st	Z, r18
    on();
     7a4:	0c 94 c6 03 	jmp	0x78c	; 0x78c <_ZN4Beep2onEv>

000007a8 <_ZN4Beep5longBEv>:
}
void Beep::longB(void){
    cnt=7;
     7a8:	27 e0       	ldi	r18, 0x07	; 7
     7aa:	fc 01       	movw	r30, r24
     7ac:	20 83       	st	Z, r18
    on();
     7ae:	0c 94 c6 03 	jmp	0x78c	; 0x78c <_ZN4Beep2onEv>

000007b2 <_ZN7Program5startEm>:
Program::~Program(){
    
}


void Program::start(uint32_t time){
     7b2:	cf 92       	push	r12
     7b4:	df 92       	push	r13
     7b6:	ef 92       	push	r14
     7b8:	ff 92       	push	r15
     7ba:	cf 93       	push	r28
     7bc:	df 93       	push	r29
     7be:	ec 01       	movw	r28, r24
     7c0:	6a 01       	movw	r12, r20
     7c2:	7b 01       	movw	r14, r22
    myBeep.longB();
     7c4:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <_ZN4Beep5longBEv>
    started=1;
     7c8:	81 e0       	ldi	r24, 0x01	; 1
     7ca:	8a 83       	std	Y+2, r24	; 0x02
    pTime=time;
     7cc:	cf 82       	std	Y+7, r12	; 0x07
     7ce:	d8 86       	std	Y+8, r13	; 0x08
     7d0:	e9 86       	std	Y+9, r14	; 0x09
     7d2:	fa 86       	std	Y+10, r15	; 0x0a
    LED1_ON;
     7d4:	5f 9a       	sbi	0x0b, 7	; 11
    LED0_OFF;
     7d6:	5e 98       	cbi	0x0b, 6	; 11
    switch(selectedProgram){
     7d8:	89 81       	ldd	r24, Y+1	; 0x01
     7da:	82 30       	cpi	r24, 0x02	; 2
     7dc:	31 f1       	breq	.+76     	; 0x82a <_ZN7Program5startEm+0x78>
     7de:	58 f4       	brcc	.+22     	; 0x7f6 <_ZN7Program5startEm+0x44>
     7e0:	88 23       	and	r24, r24
     7e2:	b9 f0       	breq	.+46     	; 0x812 <_ZN7Program5startEm+0x60>
     7e4:	81 30       	cpi	r24, 0x01	; 1
     7e6:	e1 f0       	breq	.+56     	; 0x820 <_ZN7Program5startEm+0x6e>
        case 4:
            lapNb=0;
            lapTime=LL_Tlap[lapNb];
            startTime=time;
    }
}
     7e8:	df 91       	pop	r29
     7ea:	cf 91       	pop	r28
     7ec:	ff 90       	pop	r15
     7ee:	ef 90       	pop	r14
     7f0:	df 90       	pop	r13
     7f2:	cf 90       	pop	r12
     7f4:	08 95       	ret
    myBeep.longB();
    started=1;
    pTime=time;
    LED1_ON;
    LED0_OFF;
    switch(selectedProgram){
     7f6:	83 30       	cpi	r24, 0x03	; 3
     7f8:	d1 f0       	breq	.+52     	; 0x82e <_ZN7Program5startEm+0x7c>
     7fa:	84 30       	cpi	r24, 0x04	; 4
     7fc:	a9 f7       	brne	.-22     	; 0x7e8 <_ZN7Program5startEm+0x36>
        case 3:
            lapNb=30;
            lapTime=450;
        break;
        case 4:
            lapNb=0;
     7fe:	1f 86       	std	Y+15, r1	; 0x0f
            lapTime=LL_Tlap[lapNb];
     800:	8a e5       	ldi	r24, 0x5A	; 90
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	9e 83       	std	Y+6, r25	; 0x06
     806:	8d 83       	std	Y+5, r24	; 0x05
            startTime=time;
     808:	cb 86       	std	Y+11, r12	; 0x0b
     80a:	dc 86       	std	Y+12, r13	; 0x0c
     80c:	ed 86       	std	Y+13, r14	; 0x0d
     80e:	fe 86       	std	Y+14, r15	; 0x0e
    }
}
     810:	eb cf       	rjmp	.-42     	; 0x7e8 <_ZN7Program5startEm+0x36>
    pTime=time;
    LED1_ON;
    LED0_OFF;
    switch(selectedProgram){
        case 0:
            lapNb=20;
     812:	84 e1       	ldi	r24, 0x14	; 20
        case 1:
            lapNb=20;
            lapTime=450;
        break;
        case 2:
            lapNb=30;
     814:	8f 87       	std	Y+15, r24	; 0x0f
            lapTime=300;
     816:	8c e2       	ldi	r24, 0x2C	; 44
     818:	91 e0       	ldi	r25, 0x01	; 1
        break;
        case 3:
            lapNb=30;
            lapTime=450;
     81a:	9e 83       	std	Y+6, r25	; 0x06
     81c:	8d 83       	std	Y+5, r24	; 0x05
        break;
     81e:	e4 cf       	rjmp	.-56     	; 0x7e8 <_ZN7Program5startEm+0x36>
        case 0:
            lapNb=20;
            lapTime=300;
        break;
        case 1:
            lapNb=20;
     820:	84 e1       	ldi	r24, 0x14	; 20
        case 2:
            lapNb=30;
            lapTime=300;
        break;
        case 3:
            lapNb=30;
     822:	8f 87       	std	Y+15, r24	; 0x0f
            lapTime=450;
     824:	82 ec       	ldi	r24, 0xC2	; 194
     826:	91 e0       	ldi	r25, 0x01	; 1
     828:	f8 cf       	rjmp	.-16     	; 0x81a <_ZN7Program5startEm+0x68>
        case 1:
            lapNb=20;
            lapTime=450;
        break;
        case 2:
            lapNb=30;
     82a:	8e e1       	ldi	r24, 0x1E	; 30
     82c:	f3 cf       	rjmp	.-26     	; 0x814 <_ZN7Program5startEm+0x62>
            lapTime=300;
        break;
        case 3:
            lapNb=30;
     82e:	8e e1       	ldi	r24, 0x1E	; 30
     830:	f8 cf       	rjmp	.-16     	; 0x822 <_ZN7Program5startEm+0x70>

00000832 <_ZN7Program4stopEv>:
            lapNb=0;
            lapTime=LL_Tlap[lapNb];
            startTime=time;
    }
}
void Program::stop(void){
     832:	cf 93       	push	r28
     834:	df 93       	push	r29
     836:	ec 01       	movw	r28, r24
    myBeep.longB();    
     838:	0e 94 d4 03 	call	0x7a8	; 0x7a8 <_ZN4Beep5longBEv>
    LED0_ON;
     83c:	5e 9a       	sbi	0x0b, 6	; 11
    LED1_OFF;
     83e:	5f 98       	cbi	0x0b, 7	; 11
    started=0;
     840:	1a 82       	std	Y+2, r1	; 0x02
}
     842:	df 91       	pop	r29
     844:	cf 91       	pop	r28
     846:	08 95       	ret

00000848 <_ZN7Program6updateEm>:
void Program::update(uint32_t time){
     848:	cf 92       	push	r12
     84a:	df 92       	push	r13
     84c:	ef 92       	push	r14
     84e:	ff 92       	push	r15
    if (time>(pTime+lapTime)){
     850:	fc 01       	movw	r30, r24
     852:	25 81       	ldd	r18, Z+5	; 0x05
     854:	36 81       	ldd	r19, Z+6	; 0x06
     856:	c7 80       	ldd	r12, Z+7	; 0x07
     858:	d0 84       	ldd	r13, Z+8	; 0x08
     85a:	e1 84       	ldd	r14, Z+9	; 0x09
     85c:	f2 84       	ldd	r15, Z+10	; 0x0a
     85e:	c2 0e       	add	r12, r18
     860:	d3 1e       	adc	r13, r19
     862:	e1 1c       	adc	r14, r1
     864:	f1 1c       	adc	r15, r1
     866:	c4 16       	cp	r12, r20
     868:	d5 06       	cpc	r13, r21
     86a:	e6 06       	cpc	r14, r22
     86c:	f7 06       	cpc	r15, r23
     86e:	08 f0       	brcs	.+2      	; 0x872 <_ZN7Program6updateEm+0x2a>
     870:	49 c0       	rjmp	.+146    	; 0x904 <_ZN7Program6updateEm+0xbc>
     872:	27 85       	ldd	r18, Z+15	; 0x0f
        switch(selectedProgram){
     874:	31 81       	ldd	r19, Z+1	; 0x01
     876:	34 30       	cpi	r19, 0x04	; 4
     878:	a9 f5       	brne	.+106    	; 0x8e4 <_ZN7Program6updateEm+0x9c>
            case 4:
                pTime+=lapTime;
     87a:	c7 82       	std	Z+7, r12	; 0x07
     87c:	d0 86       	std	Z+8, r13	; 0x08
     87e:	e1 86       	std	Z+9, r14	; 0x09
     880:	f2 86       	std	Z+10, r15	; 0x0a
                if((time-startTime)>LL_Tnext[lapNb]){
     882:	c3 84       	ldd	r12, Z+11	; 0x0b
     884:	d4 84       	ldd	r13, Z+12	; 0x0c
     886:	e5 84       	ldd	r14, Z+13	; 0x0d
     888:	f6 84       	ldd	r15, Z+14	; 0x0e
     88a:	4c 19       	sub	r20, r12
     88c:	5d 09       	sbc	r21, r13
     88e:	6e 09       	sbc	r22, r14
     890:	7f 09       	sbc	r23, r15
     892:	e2 2f       	mov	r30, r18
     894:	f0 e0       	ldi	r31, 0x00	; 0
     896:	ee 0f       	add	r30, r30
     898:	ff 1f       	adc	r31, r31
     89a:	e3 57       	subi	r30, 0x73	; 115
     89c:	fe 4f       	sbci	r31, 0xFE	; 254
     89e:	c0 80       	ld	r12, Z
     8a0:	d1 80       	ldd	r13, Z+1	; 0x01
     8a2:	f1 2c       	mov	r15, r1
     8a4:	e1 2c       	mov	r14, r1
     8a6:	c4 16       	cp	r12, r20
     8a8:	d5 06       	cpc	r13, r21
     8aa:	e6 06       	cpc	r14, r22
     8ac:	f7 06       	cpc	r15, r23
     8ae:	20 f5       	brcc	.+72     	; 0x8f8 <_ZN7Program6updateEm+0xb0>
                    if(++lapNb>12){
     8b0:	2f 5f       	subi	r18, 0xFF	; 255
     8b2:	fc 01       	movw	r30, r24
     8b4:	27 87       	std	Z+15, r18	; 0x0f
     8b6:	2d 30       	cpi	r18, 0x0D	; 13
     8b8:	30 f0       	brcs	.+12     	; 0x8c6 <_ZN7Program6updateEm+0x7e>
                    myBeep.dualB();
                }
            break;
        }
    }
}
     8ba:	ff 90       	pop	r15
     8bc:	ef 90       	pop	r14
     8be:	df 90       	pop	r13
     8c0:	cf 90       	pop	r12
        switch(selectedProgram){
            case 4:
                pTime+=lapTime;
                if((time-startTime)>LL_Tnext[lapNb]){
                    if(++lapNb>12){
                        stop();
     8c2:	0c 94 19 04 	jmp	0x832	; 0x832 <_ZN7Program4stopEv>
                        return;
                    }
                    lapTime=LL_Tlap[lapNb];
     8c6:	e2 2f       	mov	r30, r18
     8c8:	f0 e0       	ldi	r31, 0x00	; 0
     8ca:	e9 55       	subi	r30, 0x59	; 89
     8cc:	fe 4f       	sbci	r31, 0xFE	; 254
     8ce:	20 81       	ld	r18, Z
     8d0:	30 e0       	ldi	r19, 0x00	; 0
     8d2:	fc 01       	movw	r30, r24
     8d4:	36 83       	std	Z+6, r19	; 0x06
     8d6:	25 83       	std	Z+5, r18	; 0x05
                    myBeep.dualB();
                }
            break;
        }
    }
}
     8d8:	ff 90       	pop	r15
     8da:	ef 90       	pop	r14
     8dc:	df 90       	pop	r13
     8de:	cf 90       	pop	r12
                    return;
                }
                if(lapNb%2){
                    myBeep.singleB();
                }else{
                    myBeep.dualB();
     8e0:	0c 94 cf 03 	jmp	0x79e	; 0x79e <_ZN4Beep5dualBEv>
                }else{
                    myBeep.singleB();//single when in same palier
                }
            break;
            default:
                lapNb--;
     8e4:	21 50       	subi	r18, 0x01	; 1
     8e6:	27 87       	std	Z+15, r18	; 0x0f
                pTime+=lapTime;
     8e8:	c7 82       	std	Z+7, r12	; 0x07
     8ea:	d0 86       	std	Z+8, r13	; 0x08
     8ec:	e1 86       	std	Z+9, r14	; 0x09
     8ee:	f2 86       	std	Z+10, r15	; 0x0a
                if(lapNb==0){
     8f0:	22 23       	and	r18, r18
     8f2:	19 f3       	breq	.-58     	; 0x8ba <_ZN7Program6updateEm+0x72>
                    stop();
                    return;
                }
                if(lapNb%2){
     8f4:	20 ff       	sbrs	r18, 0
     8f6:	f0 cf       	rjmp	.-32     	; 0x8d8 <_ZN7Program6updateEm+0x90>
                    myBeep.dualB();
                }
            break;
        }
    }
}
     8f8:	ff 90       	pop	r15
     8fa:	ef 90       	pop	r14
     8fc:	df 90       	pop	r13
     8fe:	cf 90       	pop	r12
                if(lapNb==0){
                    stop();
                    return;
                }
                if(lapNb%2){
                    myBeep.singleB();
     900:	0c 94 ca 03 	jmp	0x794	; 0x794 <_ZN4Beep7singleBEv>
                    myBeep.dualB();
                }
            break;
        }
    }
}
     904:	ff 90       	pop	r15
     906:	ef 90       	pop	r14
     908:	df 90       	pop	r13
     90a:	cf 90       	pop	r12
     90c:	08 95       	ret

0000090e <_ZN4Beep6updateEv>:
}
void Beep::longB(void){
    cnt=7;
    on();
}
void Beep::update(void){
     90e:	fc 01       	movw	r30, r24
    if(cnt==0)return;
     910:	90 81       	ld	r25, Z
     912:	99 23       	and	r25, r25
     914:	79 f0       	breq	.+30     	; 0x934 <_ZN4Beep6updateEv+0x26>
    cnt--;
     916:	91 50       	subi	r25, 0x01	; 1
     918:	90 83       	st	Z, r25
    if(cnt>6)return;
     91a:	97 30       	cpi	r25, 0x07	; 7
     91c:	58 f4       	brcc	.+22     	; 0x934 <_ZN4Beep6updateEv+0x26>
    if(cnt==6)cnt=1;
     91e:	96 30       	cpi	r25, 0x06	; 6
     920:	11 f4       	brne	.+4      	; 0x926 <_ZN4Beep6updateEv+0x18>
     922:	81 e0       	ldi	r24, 0x01	; 1
     924:	80 83       	st	Z, r24
    if(cnt%2){
     926:	80 81       	ld	r24, Z
     928:	80 ff       	sbrs	r24, 0
     92a:	03 c0       	rjmp	.+6      	; 0x932 <_ZN4Beep6updateEv+0x24>
        on();
     92c:	cf 01       	movw	r24, r30
     92e:	0c 94 c6 03 	jmp	0x78c	; 0x78c <_ZN4Beep2onEv>
#else
    TCCR0A|=(1<<WGM01)|(1<<COM0A0)|(1<<CS01);//toggle OC0A on compare match, 8 prescaler, start timer
#endif
}
void Beep::off(void){
    TCCR0A=0;
     932:	14 bc       	out	0x24, r1	; 36
    if(cnt%2){
        on();
    }else{
        off();
    }
}
     934:	08 95       	ret

00000936 <_ZN4Beep3offEv>:
#else
    TCCR0A|=(1<<WGM01)|(1<<COM0A0)|(1<<CS01);//toggle OC0A on compare match, 8 prescaler, start timer
#endif
}
void Beep::off(void){
    TCCR0A=0;
     936:	14 bc       	out	0x24, r1	; 36
}
     938:	08 95       	ret

0000093a <main>:
volatile uint8_t btn0_pressDuration=0;
volatile uint32_t total_time_ts=65535; // in tenths of second

int main(void){
	
	DDRD=0b11000000; 	//LED0, LED1 as outputs, BTN 0/1 as inputs
     93a:	80 ec       	ldi	r24, 0xC0	; 192
     93c:	8a b9       	out	0x0a, r24	; 10
	PORTD=0b00110000;			//LED initial state:low, enable BTN pullups
     93e:	80 e3       	ldi	r24, 0x30	; 48
     940:	8b b9       	out	0x0b, r24	; 11
	
	DDRE=0b01100011;//IRQ as input, LoadCell_en/PWR_en as outputs, TX as output, RX as input
     942:	83 e6       	ldi	r24, 0x63	; 99
     944:	8d b9       	out	0x0d, r24	; 13
	PORTE=0b10100000;//Enable IRQ pullup, set LoadCell_en/PWR_en to 1
     946:	80 ea       	ldi	r24, 0xA0	; 160
     948:	8e b9       	out	0x0e, r24	; 14
	
	ADMUX|=(1<<REFS0)|0b11110;//Set AVCC as reference voltage for ADC, ADC MUX input to 1.1V BG
     94a:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7fc07c>
     94e:	8e 65       	ori	r24, 0x5E	; 94
     950:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7fc07c>
	ADCSRA|=(1<<ADEN)|(1<<ADIE)|(1<<ADPS1);//Enable conversion complete interrupt, Clock prescaler 12MHz/64=187kHz
     954:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
     958:	8a 68       	ori	r24, 0x8A	; 138
     95a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
	PRR|=(1<<PRSPI)|(1<<PRUSART0);//Disable SPI and UART to save power
     95e:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
     962:	86 60       	ori	r24, 0x06	; 6
     964:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
	
#if (F_CPU==1000000)
	TCCR1B |=(1<<WGM12)|(1<<CS10)|(1<<CS11);// prescaler=clk/64, OCR1A is top.
     968:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     96c:	8b 60       	ori	r24, 0x0B	; 11
     96e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
	OCR1A=1562; // 8MHz/64 = 15620Hz -> COMPA_ISR every 100ms
     972:	8a e1       	ldi	r24, 0x1A	; 26
     974:	96 e0       	ldi	r25, 0x06	; 6
     976:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
     97a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
#else
	TCCR1B |=(1<<WGM12)|(1<<CS12);// prescaler=clk/256, OCR1A is top.
	OCR1A=3125; // 8MHz/256 = 31250Hz -> COMPA_ISR every 100ms
#endif
	TIMSK1|=(1<<OCIE1A);
     97e:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     982:	82 60       	ori	r24, 0x02	; 2
     984:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
	
	
	myLCD.setDP(1);
     988:	81 e0       	ldi	r24, 0x01	; 1
     98a:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <_ZN3LCD5setDPEb>
	myLCD.setClk(1);
     98e:	81 e0       	ldi	r24, 0x01	; 1
     990:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <_ZN3LCD6setClkEb>
	myLCD.setBattery(LCD::FULL);
     994:	87 e0       	ldi	r24, 0x07	; 7
     996:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <_ZN3LCD10setBatteryENS_7BatteryE>
	
	while(--total_time_ts);
     99a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     99e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9a2:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     9a6:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     9aa:	01 97       	sbiw	r24, 0x01	; 1
     9ac:	a1 09       	sbc	r26, r1
     9ae:	b1 09       	sbc	r27, r1
     9b0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     9b4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     9b8:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     9bc:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     9c0:	89 2b       	or	r24, r25
     9c2:	8a 2b       	or	r24, r26
     9c4:	8b 2b       	or	r24, r27
     9c6:	49 f7       	brne	.-46     	; 0x99a <main+0x60>
	
	btn0_state=BTN0;
     9c8:	89 b1       	in	r24, 0x09	; 9
     9ca:	80 71       	andi	r24, 0x10	; 16
     9cc:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <btn0_state>
	btn1_state=BTN1;
     9d0:	89 b1       	in	r24, 0x09	; 9
     9d2:	80 72       	andi	r24, 0x20	; 32
     9d4:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <btn1_state>
	LoadCell_en_OFF;
     9d8:	76 9a       	sbi	0x0e, 6	; 14
	sei();
     9da:	78 94       	sei
			if(btn0_state){
				if(!myProgram.started){
					myProgram.selectedProgram++;
					if(myProgram.selectedProgram>=PGM_CNT)myProgram.selectedProgram=0;
				}
				loop_cnt=1;
     9dc:	c1 e0       	ldi	r28, 0x01	; 1
			flags_state&=~0x01;
			if(myProgram.started){
				myProgram.update(total_time_ts);
			}
			if(--loop_cnt==0){
				loop_cnt=9;
     9de:	d9 e0       	ldi	r29, 0x09	; 9
	
	while(1){
	
		

		if(BTN0!=btn0_state){
     9e0:	89 b1       	in	r24, 0x09	; 9
     9e2:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <btn0_state>
     9e6:	80 71       	andi	r24, 0x10	; 16
     9e8:	89 17       	cp	r24, r25
     9ea:	b1 f0       	breq	.+44     	; 0xa18 <main+0xde>
			btn0_state=BTN0;
     9ec:	89 b1       	in	r24, 0x09	; 9
     9ee:	80 71       	andi	r24, 0x10	; 16
     9f0:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <btn0_state>
			if(btn0_state){
     9f4:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <btn0_state>
     9f8:	88 23       	and	r24, r24
     9fa:	71 f0       	breq	.+28     	; 0xa18 <main+0xde>
				if(!myProgram.started){
     9fc:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <myProgram+0x2>
     a00:	81 11       	cpse	r24, r1
     a02:	08 c0       	rjmp	.+16     	; 0xa14 <main+0xda>
					myProgram.selectedProgram++;
     a04:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <myProgram+0x1>
     a08:	8f 5f       	subi	r24, 0xFF	; 255
					if(myProgram.selectedProgram>=PGM_CNT)myProgram.selectedProgram=0;
     a0a:	85 30       	cpi	r24, 0x05	; 5
     a0c:	08 f0       	brcs	.+2      	; 0xa10 <main+0xd6>
     a0e:	7e c0       	rjmp	.+252    	; 0xb0c <main+0x1d2>

		if(BTN0!=btn0_state){
			btn0_state=BTN0;
			if(btn0_state){
				if(!myProgram.started){
					myProgram.selectedProgram++;
     a10:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <myProgram+0x1>
					if(myProgram.selectedProgram>=PGM_CNT)myProgram.selectedProgram=0;
				}
				loop_cnt=1;
     a14:	c0 93 04 01 	sts	0x0104, r28	; 0x800104 <loop_cnt>
			}
		}
		if(BTN1!=btn1_state){
     a18:	89 b1       	in	r24, 0x09	; 9
     a1a:	90 91 bf 01 	lds	r25, 0x01BF	; 0x8001bf <btn1_state>
     a1e:	80 72       	andi	r24, 0x20	; 32
     a20:	89 17       	cp	r24, r25
     a22:	b1 f0       	breq	.+44     	; 0xa50 <main+0x116>
			btn1_state=BTN1;
     a24:	89 b1       	in	r24, 0x09	; 9
     a26:	80 72       	andi	r24, 0x20	; 32
     a28:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <btn1_state>
			if(btn1_state){
     a2c:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <btn1_state>
     a30:	88 23       	and	r24, r24
     a32:	71 f0       	breq	.+28     	; 0xa50 <main+0x116>
				LED1_Toggle;
     a34:	8b b1       	in	r24, 0x0b	; 11
     a36:	80 58       	subi	r24, 0x80	; 128
     a38:	8b b9       	out	0x0b, r24	; 11
				if(myProgram.started){
     a3a:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <myProgram+0x2>
     a3e:	88 23       	and	r24, r24
     a40:	09 f4       	brne	.+2      	; 0xa44 <main+0x10a>
     a42:	67 c0       	rjmp	.+206    	; 0xb12 <main+0x1d8>
					myProgram.stop();
     a44:	82 ec       	ldi	r24, 0xC2	; 194
     a46:	91 e0       	ldi	r25, 0x01	; 1
     a48:	0e 94 19 04 	call	0x832	; 0x832 <_ZN7Program4stopEv>
				}else{
					myProgram.start(total_time_ts);
				}
				loop_cnt=1;
     a4c:	c0 93 04 01 	sts	0x0104, r28	; 0x800104 <loop_cnt>
			}
		}
		if(flags_state&0x01){
     a50:	80 91 c1 01 	lds	r24, 0x01C1	; 0x8001c1 <flags_state>
     a54:	80 ff       	sbrs	r24, 0
     a56:	38 c0       	rjmp	.+112    	; 0xac8 <main+0x18e>
			flags_state&=~0x01;
     a58:	80 91 c1 01 	lds	r24, 0x01C1	; 0x8001c1 <flags_state>
     a5c:	8e 7f       	andi	r24, 0xFE	; 254
     a5e:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <flags_state>
			if(myProgram.started){
     a62:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <myProgram+0x2>
     a66:	88 23       	and	r24, r24
     a68:	61 f0       	breq	.+24     	; 0xa82 <main+0x148>
				myProgram.update(total_time_ts);
     a6a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     a6e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a72:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     a76:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     a7a:	82 ec       	ldi	r24, 0xC2	; 194
     a7c:	91 e0       	ldi	r25, 0x01	; 1
     a7e:	0e 94 24 04 	call	0x848	; 0x848 <_ZN7Program6updateEm>
			}
			if(--loop_cnt==0){
     a82:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <loop_cnt>
     a86:	81 50       	subi	r24, 0x01	; 1
     a88:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <loop_cnt>
     a8c:	81 11       	cpse	r24, r1
     a8e:	10 c0       	rjmp	.+32     	; 0xab0 <main+0x176>
				loop_cnt=9;
     a90:	d0 93 04 01 	sts	0x0104, r29	; 0x800104 <loop_cnt>
				LED1_ON;
     a94:	5f 9a       	sbi	0x0b, 7	; 11
				ADCSRA|=(1<<ADSC); //Start single ADC conversion
     a96:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
     a9a:	80 64       	ori	r24, 0x40	; 64
     a9c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
				writeTime();
     aa0:	0e 94 75 01 	call	0x2ea	; 0x2ea <_Z9writeTimev>
				myProgram.show();
     aa4:	82 ec       	ldi	r24, 0xC2	; 194
     aa6:	91 e0       	ldi	r25, 0x01	; 1
     aa8:	0e 94 8c 03 	call	0x718	; 0x718 <_ZN7Program4showEv>
				LED0_OFF;
     aac:	5e 98       	cbi	0x0b, 6	; 11
				LED1_OFF;
     aae:	5f 98       	cbi	0x0b, 7	; 11
			}
			if(BTN0==0){
     ab0:	4c 99       	sbic	0x09, 4	; 9
     ab2:	3c c0       	rjmp	.+120    	; 0xb2c <main+0x1f2>
				btn0_pressDuration++;
     ab4:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <__data_end>
     ab8:	8f 5f       	subi	r24, 0xFF	; 255
     aba:	80 93 be 01 	sts	0x01BE, r24	; 0x8001be <__data_end>
				if(btn0_pressDuration>20)PWR_en_OFF;
     abe:	80 91 be 01 	lds	r24, 0x01BE	; 0x8001be <__data_end>
     ac2:	85 31       	cpi	r24, 0x15	; 21
     ac4:	08 f0       	brcs	.+2      	; 0xac8 <main+0x18e>
     ac6:	75 98       	cbi	0x0e, 5	; 14
		}
		/*if(uart.isDataAvailable()){
			char *cmd=uart.retrieve();
			uart.sendString("Start verbose streaming",true);
		}*/
		ADCSRA&=~(1<<ADEN);//Disable ADC
     ac8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
     acc:	8f 77       	andi	r24, 0x7F	; 127
     ace:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
		PRR|=(1<<PRSPI)|(1<<PRUSART0)|(1<<PRADC);//Shut down clock to Timer1, SPI, UART, ADC
     ad2:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
     ad6:	87 60       	ori	r24, 0x07	; 7
     ad8:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
		set_sleep_mode(SLEEP_MODE_IDLE);
     adc:	83 b7       	in	r24, 0x33	; 51
     ade:	81 7f       	andi	r24, 0xF1	; 241
     ae0:	83 bf       	out	0x33, r24	; 51
		//set_sleep_mode(SLEEP_MODE_PWR_SAVE);
		//set_sleep_mode(SLEEP_MODE_PWR_DOWN);
		cli();
     ae2:	f8 94       	cli
		if (1){
			sleep_enable();
     ae4:	83 b7       	in	r24, 0x33	; 51
     ae6:	81 60       	ori	r24, 0x01	; 1
     ae8:	83 bf       	out	0x33, r24	; 51
			sei();
     aea:	78 94       	sei
			sleep_cpu();
     aec:	88 95       	sleep
			sleep_disable();
     aee:	83 b7       	in	r24, 0x33	; 51
     af0:	8e 7f       	andi	r24, 0xFE	; 254
     af2:	83 bf       	out	0x33, r24	; 51
		}
		PRR&=~(1<<PRADC);//Enable power to ADC, UART and SPI  again
     af4:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
     af8:	8e 7f       	andi	r24, 0xFE	; 254
     afa:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
		ADCSRA|=(1<<ADEN);//Enable ADC again
     afe:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
     b02:	80 68       	ori	r24, 0x80	; 128
     b04:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
		sei();
     b08:	78 94       	sei
	
	while(1){
	
		

		if(BTN0!=btn0_state){
     b0a:	6a cf       	rjmp	.-300    	; 0x9e0 <main+0xa6>
			btn0_state=BTN0;
			if(btn0_state){
				if(!myProgram.started){
					myProgram.selectedProgram++;
					if(myProgram.selectedProgram>=PGM_CNT)myProgram.selectedProgram=0;
     b0c:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <myProgram+0x1>
     b10:	81 cf       	rjmp	.-254    	; 0xa14 <main+0xda>
			if(btn1_state){
				LED1_Toggle;
				if(myProgram.started){
					myProgram.stop();
				}else{
					myProgram.start(total_time_ts);
     b12:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b16:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b1a:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     b1e:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
     b22:	82 ec       	ldi	r24, 0xC2	; 194
     b24:	91 e0       	ldi	r25, 0x01	; 1
     b26:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <_ZN7Program5startEm>
     b2a:	90 cf       	rjmp	.-224    	; 0xa4c <main+0x112>
			}
			if(BTN0==0){
				btn0_pressDuration++;
				if(btn0_pressDuration>20)PWR_en_OFF;
			}else{
				btn0_pressDuration=0;
     b2c:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <__data_end>
     b30:	cb cf       	rjmp	.-106    	; 0xac8 <main+0x18e>

00000b32 <_GLOBAL__sub_I_myLCD>:
#define BATT_ONEBAR 310
#define BATT_TWOBAR 320
#define BATT_FULL 330

//UART uart;
LCD myLCD=LCD(0);//Use 1 for lowest power LCD mode
     b32:	60 e0       	ldi	r22, 0x00	; 0
     b34:	82 ed       	ldi	r24, 0xD2	; 210
     b36:	91 e0       	ldi	r25, 0x01	; 1
     b38:	0e 94 cd 01 	call	0x39a	; 0x39a <_ZN3LCDC1Eb>
Program myProgram(&myLCD);
     b3c:	62 ed       	ldi	r22, 0xD2	; 210
     b3e:	71 e0       	ldi	r23, 0x01	; 1
     b40:	82 ec       	ldi	r24, 0xC2	; 194
     b42:	91 e0       	ldi	r25, 0x01	; 1
     b44:	0e 94 b2 03 	call	0x764	; 0x764 <_ZN7ProgramC1EP3LCD>

void writeTime(void);

volatile uint8_t loop_cnt=1;
volatile uint8_t flags_state=0;
volatile uint8_t btn0_state=BTN0;
     b48:	89 b1       	in	r24, 0x09	; 9
     b4a:	80 71       	andi	r24, 0x10	; 16
     b4c:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <btn0_state>
volatile uint8_t btn1_state=BTN1;
     b50:	89 b1       	in	r24, 0x09	; 9
     b52:	80 72       	andi	r24, 0x20	; 32
     b54:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <btn1_state>
	}
	myLCD.setDigit(1,mins%10);
	myLCD.setDigit(2,secs/10);
	myLCD.setDigit(3,secs%10);
	myLCD.setClk(secs%2);
}
     b58:	08 95       	ret

00000b5a <_GLOBAL__sub_D_myLCD>:
#define BATT_TWOBAR 320
#define BATT_FULL 330

//UART uart;
LCD myLCD=LCD(0);//Use 1 for lowest power LCD mode
Program myProgram(&myLCD);
     b5a:	82 ec       	ldi	r24, 0xC2	; 194
     b5c:	91 e0       	ldi	r25, 0x01	; 1
     b5e:	0e 94 8b 03 	call	0x716	; 0x716 <_ZN7ProgramD1Ev>
#define BATT_ONEBAR 310
#define BATT_TWOBAR 320
#define BATT_FULL 330

//UART uart;
LCD myLCD=LCD(0);//Use 1 for lowest power LCD mode
     b62:	82 ed       	ldi	r24, 0xD2	; 210
     b64:	91 e0       	ldi	r25, 0x01	; 1
     b66:	0c 94 f2 01 	jmp	0x3e4	; 0x3e4 <_ZN3LCDD1Ev>

00000b6a <vfprintf>:
     b6a:	af e0       	ldi	r26, 0x0F	; 15
     b6c:	b0 e0       	ldi	r27, 0x00	; 0
     b6e:	eb eb       	ldi	r30, 0xBB	; 187
     b70:	f5 e0       	ldi	r31, 0x05	; 5
     b72:	0c 94 98 0a 	jmp	0x1530	; 0x1530 <__prologue_saves__>
     b76:	6c 01       	movw	r12, r24
     b78:	1b 01       	movw	r2, r22
     b7a:	5a 01       	movw	r10, r20
     b7c:	fc 01       	movw	r30, r24
     b7e:	17 82       	std	Z+7, r1	; 0x07
     b80:	16 82       	std	Z+6, r1	; 0x06
     b82:	83 81       	ldd	r24, Z+3	; 0x03
     b84:	81 ff       	sbrs	r24, 1
     b86:	48 c3       	rjmp	.+1680   	; 0x1218 <vfprintf+0x6ae>
     b88:	9e 01       	movw	r18, r28
     b8a:	2f 5f       	subi	r18, 0xFF	; 255
     b8c:	3f 4f       	sbci	r19, 0xFF	; 255
     b8e:	49 01       	movw	r8, r18
     b90:	f6 01       	movw	r30, r12
     b92:	93 81       	ldd	r25, Z+3	; 0x03
     b94:	f1 01       	movw	r30, r2
     b96:	93 fd       	sbrc	r25, 3
     b98:	85 91       	lpm	r24, Z+
     b9a:	93 ff       	sbrs	r25, 3
     b9c:	81 91       	ld	r24, Z+
     b9e:	1f 01       	movw	r2, r30
     ba0:	88 23       	and	r24, r24
     ba2:	09 f4       	brne	.+2      	; 0xba6 <vfprintf+0x3c>
     ba4:	e7 c2       	rjmp	.+1486   	; 0x1174 <vfprintf+0x60a>
     ba6:	85 32       	cpi	r24, 0x25	; 37
     ba8:	39 f4       	brne	.+14     	; 0xbb8 <vfprintf+0x4e>
     baa:	93 fd       	sbrc	r25, 3
     bac:	85 91       	lpm	r24, Z+
     bae:	93 ff       	sbrs	r25, 3
     bb0:	81 91       	ld	r24, Z+
     bb2:	1f 01       	movw	r2, r30
     bb4:	85 32       	cpi	r24, 0x25	; 37
     bb6:	39 f4       	brne	.+14     	; 0xbc6 <vfprintf+0x5c>
     bb8:	b6 01       	movw	r22, r12
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     bc0:	35 01       	movw	r6, r10
     bc2:	53 01       	movw	r10, r6
     bc4:	e5 cf       	rjmp	.-54     	; 0xb90 <vfprintf+0x26>
     bc6:	f1 2c       	mov	r15, r1
     bc8:	51 2c       	mov	r5, r1
     bca:	00 e0       	ldi	r16, 0x00	; 0
     bcc:	00 32       	cpi	r16, 0x20	; 32
     bce:	38 f4       	brcc	.+14     	; 0xbde <vfprintf+0x74>
     bd0:	8b 32       	cpi	r24, 0x2B	; 43
     bd2:	09 f1       	breq	.+66     	; 0xc16 <vfprintf+0xac>
     bd4:	90 f4       	brcc	.+36     	; 0xbfa <vfprintf+0x90>
     bd6:	80 32       	cpi	r24, 0x20	; 32
     bd8:	f9 f0       	breq	.+62     	; 0xc18 <vfprintf+0xae>
     bda:	83 32       	cpi	r24, 0x23	; 35
     bdc:	09 f1       	breq	.+66     	; 0xc20 <vfprintf+0xb6>
     bde:	07 fd       	sbrc	r16, 7
     be0:	34 c0       	rjmp	.+104    	; 0xc4a <vfprintf+0xe0>
     be2:	20 ed       	ldi	r18, 0xD0	; 208
     be4:	28 0f       	add	r18, r24
     be6:	2a 30       	cpi	r18, 0x0A	; 10
     be8:	20 f5       	brcc	.+72     	; 0xc32 <vfprintf+0xc8>
     bea:	06 ff       	sbrs	r16, 6
     bec:	1b c0       	rjmp	.+54     	; 0xc24 <vfprintf+0xba>
     bee:	fa e0       	ldi	r31, 0x0A	; 10
     bf0:	ff 9e       	mul	r15, r31
     bf2:	20 0d       	add	r18, r0
     bf4:	11 24       	eor	r1, r1
     bf6:	f2 2e       	mov	r15, r18
     bf8:	05 c0       	rjmp	.+10     	; 0xc04 <vfprintf+0x9a>
     bfa:	8d 32       	cpi	r24, 0x2D	; 45
     bfc:	79 f0       	breq	.+30     	; 0xc1c <vfprintf+0xb2>
     bfe:	80 33       	cpi	r24, 0x30	; 48
     c00:	71 f7       	brne	.-36     	; 0xbde <vfprintf+0x74>
     c02:	01 60       	ori	r16, 0x01	; 1
     c04:	f1 01       	movw	r30, r2
     c06:	93 fd       	sbrc	r25, 3
     c08:	85 91       	lpm	r24, Z+
     c0a:	93 ff       	sbrs	r25, 3
     c0c:	81 91       	ld	r24, Z+
     c0e:	1f 01       	movw	r2, r30
     c10:	81 11       	cpse	r24, r1
     c12:	dc cf       	rjmp	.-72     	; 0xbcc <vfprintf+0x62>
     c14:	1a c0       	rjmp	.+52     	; 0xc4a <vfprintf+0xe0>
     c16:	02 60       	ori	r16, 0x02	; 2
     c18:	04 60       	ori	r16, 0x04	; 4
     c1a:	f4 cf       	rjmp	.-24     	; 0xc04 <vfprintf+0x9a>
     c1c:	08 60       	ori	r16, 0x08	; 8
     c1e:	f2 cf       	rjmp	.-28     	; 0xc04 <vfprintf+0x9a>
     c20:	00 61       	ori	r16, 0x10	; 16
     c22:	f0 cf       	rjmp	.-32     	; 0xc04 <vfprintf+0x9a>
     c24:	3a e0       	ldi	r19, 0x0A	; 10
     c26:	53 9e       	mul	r5, r19
     c28:	20 0d       	add	r18, r0
     c2a:	11 24       	eor	r1, r1
     c2c:	52 2e       	mov	r5, r18
     c2e:	00 62       	ori	r16, 0x20	; 32
     c30:	e9 cf       	rjmp	.-46     	; 0xc04 <vfprintf+0x9a>
     c32:	8e 32       	cpi	r24, 0x2E	; 46
     c34:	21 f4       	brne	.+8      	; 0xc3e <vfprintf+0xd4>
     c36:	06 fd       	sbrc	r16, 6
     c38:	9d c2       	rjmp	.+1338   	; 0x1174 <vfprintf+0x60a>
     c3a:	00 64       	ori	r16, 0x40	; 64
     c3c:	e3 cf       	rjmp	.-58     	; 0xc04 <vfprintf+0x9a>
     c3e:	8c 36       	cpi	r24, 0x6C	; 108
     c40:	11 f4       	brne	.+4      	; 0xc46 <vfprintf+0xdc>
     c42:	00 68       	ori	r16, 0x80	; 128
     c44:	df cf       	rjmp	.-66     	; 0xc04 <vfprintf+0x9a>
     c46:	88 36       	cpi	r24, 0x68	; 104
     c48:	e9 f2       	breq	.-70     	; 0xc04 <vfprintf+0x9a>
     c4a:	9b eb       	ldi	r25, 0xBB	; 187
     c4c:	98 0f       	add	r25, r24
     c4e:	93 30       	cpi	r25, 0x03	; 3
     c50:	08 f0       	brcs	.+2      	; 0xc54 <vfprintf+0xea>
     c52:	5f c0       	rjmp	.+190    	; 0xd12 <vfprintf+0x1a8>
     c54:	00 61       	ori	r16, 0x10	; 16
     c56:	80 5e       	subi	r24, 0xE0	; 224
     c58:	06 fd       	sbrc	r16, 6
     c5a:	02 c0       	rjmp	.+4      	; 0xc60 <vfprintf+0xf6>
     c5c:	46 e0       	ldi	r20, 0x06	; 6
     c5e:	f4 2e       	mov	r15, r20
     c60:	10 2f       	mov	r17, r16
     c62:	1f 73       	andi	r17, 0x3F	; 63
     c64:	85 36       	cpi	r24, 0x65	; 101
     c66:	09 f0       	breq	.+2      	; 0xc6a <vfprintf+0x100>
     c68:	5b c0       	rjmp	.+182    	; 0xd20 <vfprintf+0x1b6>
     c6a:	10 64       	ori	r17, 0x40	; 64
     c6c:	17 ff       	sbrs	r17, 7
     c6e:	61 c0       	rjmp	.+194    	; 0xd32 <vfprintf+0x1c8>
     c70:	8f 2d       	mov	r24, r15
     c72:	9b e3       	ldi	r25, 0x3B	; 59
     c74:	9f 15       	cp	r25, r15
     c76:	08 f4       	brcc	.+2      	; 0xc7a <vfprintf+0x110>
     c78:	8b e3       	ldi	r24, 0x3B	; 59
     c7a:	44 24       	eor	r4, r4
     c7c:	43 94       	inc	r4
     c7e:	48 0e       	add	r4, r24
     c80:	27 e0       	ldi	r18, 0x07	; 7
     c82:	35 01       	movw	r6, r10
     c84:	f4 e0       	ldi	r31, 0x04	; 4
     c86:	6f 0e       	add	r6, r31
     c88:	71 1c       	adc	r7, r1
     c8a:	f5 01       	movw	r30, r10
     c8c:	60 81       	ld	r22, Z
     c8e:	71 81       	ldd	r23, Z+1	; 0x01
     c90:	82 81       	ldd	r24, Z+2	; 0x02
     c92:	93 81       	ldd	r25, Z+3	; 0x03
     c94:	04 2d       	mov	r16, r4
     c96:	a4 01       	movw	r20, r8
     c98:	0e 94 cf 0a 	call	0x159e	; 0x159e <__ftoa_engine>
     c9c:	5c 01       	movw	r10, r24
     c9e:	f9 81       	ldd	r31, Y+1	; 0x01
     ca0:	fc 87       	std	Y+12, r31	; 0x0c
     ca2:	f0 ff       	sbrs	r31, 0
     ca4:	03 c0       	rjmp	.+6      	; 0xcac <vfprintf+0x142>
     ca6:	0d e2       	ldi	r16, 0x2D	; 45
     ca8:	f3 ff       	sbrs	r31, 3
     caa:	07 c0       	rjmp	.+14     	; 0xcba <vfprintf+0x150>
     cac:	0b e2       	ldi	r16, 0x2B	; 43
     cae:	11 fd       	sbrc	r17, 1
     cb0:	04 c0       	rjmp	.+8      	; 0xcba <vfprintf+0x150>
     cb2:	01 2f       	mov	r16, r17
     cb4:	04 70       	andi	r16, 0x04	; 4
     cb6:	12 fd       	sbrc	r17, 2
     cb8:	00 e2       	ldi	r16, 0x20	; 32
     cba:	2c 85       	ldd	r18, Y+12	; 0x0c
     cbc:	2c 70       	andi	r18, 0x0C	; 12
     cbe:	e2 2e       	mov	r14, r18
     cc0:	09 f4       	brne	.+2      	; 0xcc4 <vfprintf+0x15a>
     cc2:	57 c0       	rjmp	.+174    	; 0xd72 <vfprintf+0x208>
     cc4:	01 11       	cpse	r16, r1
     cc6:	ab c2       	rjmp	.+1366   	; 0x121e <vfprintf+0x6b4>
     cc8:	f3 e0       	ldi	r31, 0x03	; 3
     cca:	e1 2c       	mov	r14, r1
     ccc:	f5 15       	cp	r31, r5
     cce:	a0 f4       	brcc	.+40     	; 0xcf8 <vfprintf+0x18e>
     cd0:	83 e0       	ldi	r24, 0x03	; 3
     cd2:	e5 2c       	mov	r14, r5
     cd4:	e8 1a       	sub	r14, r24
     cd6:	13 fd       	sbrc	r17, 3
     cd8:	08 c0       	rjmp	.+16     	; 0xcea <vfprintf+0x180>
     cda:	b6 01       	movw	r22, r12
     cdc:	80 e2       	ldi	r24, 0x20	; 32
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     ce4:	ea 94       	dec	r14
     ce6:	e1 10       	cpse	r14, r1
     ce8:	f8 cf       	rjmp	.-16     	; 0xcda <vfprintf+0x170>
     cea:	00 23       	and	r16, r16
     cec:	29 f0       	breq	.+10     	; 0xcf8 <vfprintf+0x18e>
     cee:	b6 01       	movw	r22, r12
     cf0:	80 2f       	mov	r24, r16
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     cf8:	3c 85       	ldd	r19, Y+12	; 0x0c
     cfa:	2c e5       	ldi	r18, 0x5C	; 92
     cfc:	a2 2e       	mov	r10, r18
     cfe:	20 e0       	ldi	r18, 0x00	; 0
     d00:	b2 2e       	mov	r11, r18
     d02:	33 fd       	sbrc	r19, 3
     d04:	04 c0       	rjmp	.+8      	; 0xd0e <vfprintf+0x1a4>
     d06:	90 e6       	ldi	r25, 0x60	; 96
     d08:	a9 2e       	mov	r10, r25
     d0a:	90 e0       	ldi	r25, 0x00	; 0
     d0c:	b9 2e       	mov	r11, r25
     d0e:	10 71       	andi	r17, 0x10	; 16
     d10:	22 c0       	rjmp	.+68     	; 0xd56 <vfprintf+0x1ec>
     d12:	9b e9       	ldi	r25, 0x9B	; 155
     d14:	98 0f       	add	r25, r24
     d16:	93 30       	cpi	r25, 0x03	; 3
     d18:	08 f0       	brcs	.+2      	; 0xd1c <vfprintf+0x1b2>
     d1a:	33 c1       	rjmp	.+614    	; 0xf82 <vfprintf+0x418>
     d1c:	0f 7e       	andi	r16, 0xEF	; 239
     d1e:	9c cf       	rjmp	.-200    	; 0xc58 <vfprintf+0xee>
     d20:	86 36       	cpi	r24, 0x66	; 102
     d22:	11 f4       	brne	.+4      	; 0xd28 <vfprintf+0x1be>
     d24:	10 68       	ori	r17, 0x80	; 128
     d26:	a2 cf       	rjmp	.-188    	; 0xc6c <vfprintf+0x102>
     d28:	ff 20       	and	r15, r15
     d2a:	09 f4       	brne	.+2      	; 0xd2e <vfprintf+0x1c4>
     d2c:	9f cf       	rjmp	.-194    	; 0xc6c <vfprintf+0x102>
     d2e:	fa 94       	dec	r15
     d30:	9d cf       	rjmp	.-198    	; 0xc6c <vfprintf+0x102>
     d32:	e7 e0       	ldi	r30, 0x07	; 7
     d34:	2f 2d       	mov	r18, r15
     d36:	ef 15       	cp	r30, r15
     d38:	18 f4       	brcc	.+6      	; 0xd40 <vfprintf+0x1d6>
     d3a:	27 e0       	ldi	r18, 0x07	; 7
     d3c:	37 e0       	ldi	r19, 0x07	; 7
     d3e:	f3 2e       	mov	r15, r19
     d40:	41 2c       	mov	r4, r1
     d42:	9f cf       	rjmp	.-194    	; 0xc82 <vfprintf+0x118>
     d44:	11 11       	cpse	r17, r1
     d46:	80 52       	subi	r24, 0x20	; 32
     d48:	b6 01       	movw	r22, r12
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     d50:	8f ef       	ldi	r24, 0xFF	; 255
     d52:	a8 1a       	sub	r10, r24
     d54:	b8 0a       	sbc	r11, r24
     d56:	f5 01       	movw	r30, r10
     d58:	84 91       	lpm	r24, Z
     d5a:	81 11       	cpse	r24, r1
     d5c:	f3 cf       	rjmp	.-26     	; 0xd44 <vfprintf+0x1da>
     d5e:	ee 20       	and	r14, r14
     d60:	09 f4       	brne	.+2      	; 0xd64 <vfprintf+0x1fa>
     d62:	2f cf       	rjmp	.-418    	; 0xbc2 <vfprintf+0x58>
     d64:	b6 01       	movw	r22, r12
     d66:	80 e2       	ldi	r24, 0x20	; 32
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     d6e:	ea 94       	dec	r14
     d70:	f6 cf       	rjmp	.-20     	; 0xd5e <vfprintf+0x1f4>
     d72:	17 ff       	sbrs	r17, 7
     d74:	6f c0       	rjmp	.+222    	; 0xe54 <vfprintf+0x2ea>
     d76:	4a 0c       	add	r4, r10
     d78:	fc 85       	ldd	r31, Y+12	; 0x0c
     d7a:	f4 ff       	sbrs	r31, 4
     d7c:	04 c0       	rjmp	.+8      	; 0xd86 <vfprintf+0x21c>
     d7e:	8a 81       	ldd	r24, Y+2	; 0x02
     d80:	81 33       	cpi	r24, 0x31	; 49
     d82:	09 f4       	brne	.+2      	; 0xd86 <vfprintf+0x21c>
     d84:	4a 94       	dec	r4
     d86:	14 14       	cp	r1, r4
     d88:	0c f0       	brlt	.+2      	; 0xd8c <vfprintf+0x222>
     d8a:	86 c0       	rjmp	.+268    	; 0xe98 <vfprintf+0x32e>
     d8c:	28 e0       	ldi	r18, 0x08	; 8
     d8e:	24 15       	cp	r18, r4
     d90:	10 f4       	brcc	.+4      	; 0xd96 <vfprintf+0x22c>
     d92:	88 e0       	ldi	r24, 0x08	; 8
     d94:	48 2e       	mov	r4, r24
     d96:	85 e0       	ldi	r24, 0x05	; 5
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	17 ff       	sbrs	r17, 7
     d9c:	06 c0       	rjmp	.+12     	; 0xdaa <vfprintf+0x240>
     d9e:	c5 01       	movw	r24, r10
     da0:	b7 fe       	sbrs	r11, 7
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <vfprintf+0x23e>
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	80 e0       	ldi	r24, 0x00	; 0
     da8:	01 96       	adiw	r24, 0x01	; 1
     daa:	01 11       	cpse	r16, r1
     dac:	01 96       	adiw	r24, 0x01	; 1
     dae:	ff 20       	and	r15, r15
     db0:	31 f0       	breq	.+12     	; 0xdbe <vfprintf+0x254>
     db2:	2f 2d       	mov	r18, r15
     db4:	30 e0       	ldi	r19, 0x00	; 0
     db6:	2f 5f       	subi	r18, 0xFF	; 255
     db8:	3f 4f       	sbci	r19, 0xFF	; 255
     dba:	82 0f       	add	r24, r18
     dbc:	93 1f       	adc	r25, r19
     dbe:	58 16       	cp	r5, r24
     dc0:	19 06       	cpc	r1, r25
     dc2:	19 f0       	breq	.+6      	; 0xdca <vfprintf+0x260>
     dc4:	14 f0       	brlt	.+4      	; 0xdca <vfprintf+0x260>
     dc6:	e5 2c       	mov	r14, r5
     dc8:	e8 1a       	sub	r14, r24
     dca:	81 2f       	mov	r24, r17
     dcc:	89 70       	andi	r24, 0x09	; 9
     dce:	11 f4       	brne	.+4      	; 0xdd4 <vfprintf+0x26a>
     dd0:	e1 10       	cpse	r14, r1
     dd2:	67 c0       	rjmp	.+206    	; 0xea2 <vfprintf+0x338>
     dd4:	00 23       	and	r16, r16
     dd6:	29 f0       	breq	.+10     	; 0xde2 <vfprintf+0x278>
     dd8:	b6 01       	movw	r22, r12
     dda:	80 2f       	mov	r24, r16
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     de2:	13 fd       	sbrc	r17, 3
     de4:	02 c0       	rjmp	.+4      	; 0xdea <vfprintf+0x280>
     de6:	e1 10       	cpse	r14, r1
     de8:	63 c0       	rjmp	.+198    	; 0xeb0 <vfprintf+0x346>
     dea:	17 ff       	sbrs	r17, 7
     dec:	7c c0       	rjmp	.+248    	; 0xee6 <vfprintf+0x37c>
     dee:	85 01       	movw	r16, r10
     df0:	b7 fe       	sbrs	r11, 7
     df2:	02 c0       	rjmp	.+4      	; 0xdf8 <vfprintf+0x28e>
     df4:	10 e0       	ldi	r17, 0x00	; 0
     df6:	00 e0       	ldi	r16, 0x00	; 0
     df8:	c5 01       	movw	r24, r10
     dfa:	84 19       	sub	r24, r4
     dfc:	91 09       	sbc	r25, r1
     dfe:	2c 01       	movw	r4, r24
     e00:	6f 2d       	mov	r22, r15
     e02:	70 e0       	ldi	r23, 0x00	; 0
     e04:	ee 27       	eor	r30, r30
     e06:	ff 27       	eor	r31, r31
     e08:	e6 1b       	sub	r30, r22
     e0a:	f7 0b       	sbc	r31, r23
     e0c:	ff 87       	std	Y+15, r31	; 0x0f
     e0e:	ee 87       	std	Y+14, r30	; 0x0e
     e10:	0f 3f       	cpi	r16, 0xFF	; 255
     e12:	10 07       	cpc	r17, r16
     e14:	29 f4       	brne	.+10     	; 0xe20 <vfprintf+0x2b6>
     e16:	b6 01       	movw	r22, r12
     e18:	8e e2       	ldi	r24, 0x2E	; 46
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     e20:	a0 16       	cp	r10, r16
     e22:	b1 06       	cpc	r11, r17
     e24:	0c f4       	brge	.+2      	; 0xe28 <vfprintf+0x2be>
     e26:	4b c0       	rjmp	.+150    	; 0xebe <vfprintf+0x354>
     e28:	40 16       	cp	r4, r16
     e2a:	51 06       	cpc	r5, r17
     e2c:	0c f0       	brlt	.+2      	; 0xe30 <vfprintf+0x2c6>
     e2e:	47 c0       	rjmp	.+142    	; 0xebe <vfprintf+0x354>
     e30:	f5 01       	movw	r30, r10
     e32:	e0 1b       	sub	r30, r16
     e34:	f1 0b       	sbc	r31, r17
     e36:	e8 0d       	add	r30, r8
     e38:	f9 1d       	adc	r31, r9
     e3a:	81 81       	ldd	r24, Z+1	; 0x01
     e3c:	01 50       	subi	r16, 0x01	; 1
     e3e:	11 09       	sbc	r17, r1
     e40:	2e 85       	ldd	r18, Y+14	; 0x0e
     e42:	3f 85       	ldd	r19, Y+15	; 0x0f
     e44:	02 17       	cp	r16, r18
     e46:	13 07       	cpc	r17, r19
     e48:	e4 f1       	brlt	.+120    	; 0xec2 <vfprintf+0x358>
     e4a:	b6 01       	movw	r22, r12
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     e52:	de cf       	rjmp	.-68     	; 0xe10 <vfprintf+0x2a6>
     e54:	16 fd       	sbrc	r17, 6
     e56:	9f cf       	rjmp	.-194    	; 0xd96 <vfprintf+0x22c>
     e58:	ef 2d       	mov	r30, r15
     e5a:	f0 e0       	ldi	r31, 0x00	; 0
     e5c:	ea 15       	cp	r30, r10
     e5e:	fb 05       	cpc	r31, r11
     e60:	34 f0       	brlt	.+12     	; 0xe6e <vfprintf+0x304>
     e62:	3c ef       	ldi	r19, 0xFC	; 252
     e64:	a3 16       	cp	r10, r19
     e66:	3f ef       	ldi	r19, 0xFF	; 255
     e68:	b3 06       	cpc	r11, r19
     e6a:	0c f0       	brlt	.+2      	; 0xe6e <vfprintf+0x304>
     e6c:	10 68       	ori	r17, 0x80	; 128
     e6e:	32 96       	adiw	r30, 0x02	; 2
     e70:	e8 0d       	add	r30, r8
     e72:	f9 1d       	adc	r31, r9
     e74:	01 c0       	rjmp	.+2      	; 0xe78 <vfprintf+0x30e>
     e76:	fa 94       	dec	r15
     e78:	ff 20       	and	r15, r15
     e7a:	19 f0       	breq	.+6      	; 0xe82 <vfprintf+0x318>
     e7c:	82 91       	ld	r24, -Z
     e7e:	80 33       	cpi	r24, 0x30	; 48
     e80:	d1 f3       	breq	.-12     	; 0xe76 <vfprintf+0x30c>
     e82:	17 ff       	sbrs	r17, 7
     e84:	88 cf       	rjmp	.-240    	; 0xd96 <vfprintf+0x22c>
     e86:	44 24       	eor	r4, r4
     e88:	43 94       	inc	r4
     e8a:	4f 0c       	add	r4, r15
     e8c:	fa 14       	cp	r15, r10
     e8e:	1b 04       	cpc	r1, r11
     e90:	31 f0       	breq	.+12     	; 0xe9e <vfprintf+0x334>
     e92:	2c f0       	brlt	.+10     	; 0xe9e <vfprintf+0x334>
     e94:	fa 18       	sub	r15, r10
     e96:	7f cf       	rjmp	.-258    	; 0xd96 <vfprintf+0x22c>
     e98:	44 24       	eor	r4, r4
     e9a:	43 94       	inc	r4
     e9c:	7c cf       	rjmp	.-264    	; 0xd96 <vfprintf+0x22c>
     e9e:	f1 2c       	mov	r15, r1
     ea0:	7a cf       	rjmp	.-268    	; 0xd96 <vfprintf+0x22c>
     ea2:	b6 01       	movw	r22, r12
     ea4:	80 e2       	ldi	r24, 0x20	; 32
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     eac:	ea 94       	dec	r14
     eae:	90 cf       	rjmp	.-224    	; 0xdd0 <vfprintf+0x266>
     eb0:	b6 01       	movw	r22, r12
     eb2:	80 e3       	ldi	r24, 0x30	; 48
     eb4:	90 e0       	ldi	r25, 0x00	; 0
     eb6:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     eba:	ea 94       	dec	r14
     ebc:	94 cf       	rjmp	.-216    	; 0xde6 <vfprintf+0x27c>
     ebe:	80 e3       	ldi	r24, 0x30	; 48
     ec0:	bd cf       	rjmp	.-134    	; 0xe3c <vfprintf+0x2d2>
     ec2:	a0 16       	cp	r10, r16
     ec4:	b1 06       	cpc	r11, r17
     ec6:	41 f4       	brne	.+16     	; 0xed8 <vfprintf+0x36e>
     ec8:	9a 81       	ldd	r25, Y+2	; 0x02
     eca:	96 33       	cpi	r25, 0x36	; 54
     ecc:	50 f4       	brcc	.+20     	; 0xee2 <vfprintf+0x378>
     ece:	95 33       	cpi	r25, 0x35	; 53
     ed0:	19 f4       	brne	.+6      	; 0xed8 <vfprintf+0x36e>
     ed2:	3c 85       	ldd	r19, Y+12	; 0x0c
     ed4:	34 ff       	sbrs	r19, 4
     ed6:	05 c0       	rjmp	.+10     	; 0xee2 <vfprintf+0x378>
     ed8:	b6 01       	movw	r22, r12
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     ee0:	3e cf       	rjmp	.-388    	; 0xd5e <vfprintf+0x1f4>
     ee2:	81 e3       	ldi	r24, 0x31	; 49
     ee4:	f9 cf       	rjmp	.-14     	; 0xed8 <vfprintf+0x36e>
     ee6:	8a 81       	ldd	r24, Y+2	; 0x02
     ee8:	81 33       	cpi	r24, 0x31	; 49
     eea:	19 f0       	breq	.+6      	; 0xef2 <vfprintf+0x388>
     eec:	9c 85       	ldd	r25, Y+12	; 0x0c
     eee:	9f 7e       	andi	r25, 0xEF	; 239
     ef0:	9c 87       	std	Y+12, r25	; 0x0c
     ef2:	b6 01       	movw	r22, r12
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     efa:	ff 20       	and	r15, r15
     efc:	a9 f0       	breq	.+42     	; 0xf28 <vfprintf+0x3be>
     efe:	b6 01       	movw	r22, r12
     f00:	8e e2       	ldi	r24, 0x2E	; 46
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     f08:	f3 94       	inc	r15
     f0a:	f3 94       	inc	r15
     f0c:	e2 e0       	ldi	r30, 0x02	; 2
     f0e:	01 e0       	ldi	r16, 0x01	; 1
     f10:	0e 0f       	add	r16, r30
     f12:	e8 0d       	add	r30, r8
     f14:	f9 2d       	mov	r31, r9
     f16:	f1 1d       	adc	r31, r1
     f18:	80 81       	ld	r24, Z
     f1a:	b6 01       	movw	r22, r12
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     f22:	e0 2f       	mov	r30, r16
     f24:	0f 11       	cpse	r16, r15
     f26:	f3 cf       	rjmp	.-26     	; 0xf0e <vfprintf+0x3a4>
     f28:	85 e6       	ldi	r24, 0x65	; 101
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	14 ff       	sbrs	r17, 4
     f2e:	02 c0       	rjmp	.+4      	; 0xf34 <vfprintf+0x3ca>
     f30:	85 e4       	ldi	r24, 0x45	; 69
     f32:	90 e0       	ldi	r25, 0x00	; 0
     f34:	b6 01       	movw	r22, r12
     f36:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     f3a:	b7 fc       	sbrc	r11, 7
     f3c:	06 c0       	rjmp	.+12     	; 0xf4a <vfprintf+0x3e0>
     f3e:	a1 14       	cp	r10, r1
     f40:	b1 04       	cpc	r11, r1
     f42:	c1 f4       	brne	.+48     	; 0xf74 <vfprintf+0x40a>
     f44:	ec 85       	ldd	r30, Y+12	; 0x0c
     f46:	e4 ff       	sbrs	r30, 4
     f48:	15 c0       	rjmp	.+42     	; 0xf74 <vfprintf+0x40a>
     f4a:	b1 94       	neg	r11
     f4c:	a1 94       	neg	r10
     f4e:	b1 08       	sbc	r11, r1
     f50:	8d e2       	ldi	r24, 0x2D	; 45
     f52:	b6 01       	movw	r22, r12
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     f5a:	80 e3       	ldi	r24, 0x30	; 48
     f5c:	2a e0       	ldi	r18, 0x0A	; 10
     f5e:	a2 16       	cp	r10, r18
     f60:	b1 04       	cpc	r11, r1
     f62:	54 f4       	brge	.+20     	; 0xf78 <vfprintf+0x40e>
     f64:	b6 01       	movw	r22, r12
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
     f6c:	b6 01       	movw	r22, r12
     f6e:	c5 01       	movw	r24, r10
     f70:	c0 96       	adiw	r24, 0x30	; 48
     f72:	b4 cf       	rjmp	.-152    	; 0xedc <vfprintf+0x372>
     f74:	8b e2       	ldi	r24, 0x2B	; 43
     f76:	ed cf       	rjmp	.-38     	; 0xf52 <vfprintf+0x3e8>
     f78:	8f 5f       	subi	r24, 0xFF	; 255
     f7a:	fa e0       	ldi	r31, 0x0A	; 10
     f7c:	af 1a       	sub	r10, r31
     f7e:	b1 08       	sbc	r11, r1
     f80:	ed cf       	rjmp	.-38     	; 0xf5c <vfprintf+0x3f2>
     f82:	83 36       	cpi	r24, 0x63	; 99
     f84:	c9 f0       	breq	.+50     	; 0xfb8 <vfprintf+0x44e>
     f86:	83 37       	cpi	r24, 0x73	; 115
     f88:	71 f1       	breq	.+92     	; 0xfe6 <vfprintf+0x47c>
     f8a:	83 35       	cpi	r24, 0x53	; 83
     f8c:	09 f0       	breq	.+2      	; 0xf90 <vfprintf+0x426>
     f8e:	5b c0       	rjmp	.+182    	; 0x1046 <vfprintf+0x4dc>
     f90:	35 01       	movw	r6, r10
     f92:	f2 e0       	ldi	r31, 0x02	; 2
     f94:	6f 0e       	add	r6, r31
     f96:	71 1c       	adc	r7, r1
     f98:	f5 01       	movw	r30, r10
     f9a:	a0 80       	ld	r10, Z
     f9c:	b1 80       	ldd	r11, Z+1	; 0x01
     f9e:	6f 2d       	mov	r22, r15
     fa0:	70 e0       	ldi	r23, 0x00	; 0
     fa2:	06 fd       	sbrc	r16, 6
     fa4:	02 c0       	rjmp	.+4      	; 0xfaa <vfprintf+0x440>
     fa6:	6f ef       	ldi	r22, 0xFF	; 255
     fa8:	7f ef       	ldi	r23, 0xFF	; 255
     faa:	c5 01       	movw	r24, r10
     fac:	0e 94 a7 0b 	call	0x174e	; 0x174e <strnlen_P>
     fb0:	9d 87       	std	Y+13, r25	; 0x0d
     fb2:	8c 87       	std	Y+12, r24	; 0x0c
     fb4:	00 68       	ori	r16, 0x80	; 128
     fb6:	0d c0       	rjmp	.+26     	; 0xfd2 <vfprintf+0x468>
     fb8:	35 01       	movw	r6, r10
     fba:	32 e0       	ldi	r19, 0x02	; 2
     fbc:	63 0e       	add	r6, r19
     fbe:	71 1c       	adc	r7, r1
     fc0:	f5 01       	movw	r30, r10
     fc2:	80 81       	ld	r24, Z
     fc4:	89 83       	std	Y+1, r24	; 0x01
     fc6:	21 e0       	ldi	r18, 0x01	; 1
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	3d 87       	std	Y+13, r19	; 0x0d
     fcc:	2c 87       	std	Y+12, r18	; 0x0c
     fce:	54 01       	movw	r10, r8
     fd0:	0f 77       	andi	r16, 0x7F	; 127
     fd2:	03 fd       	sbrc	r16, 3
     fd4:	06 c0       	rjmp	.+12     	; 0xfe2 <vfprintf+0x478>
     fd6:	2c 85       	ldd	r18, Y+12	; 0x0c
     fd8:	3d 85       	ldd	r19, Y+13	; 0x0d
     fda:	52 16       	cp	r5, r18
     fdc:	13 06       	cpc	r1, r19
     fde:	09 f0       	breq	.+2      	; 0xfe2 <vfprintf+0x478>
     fe0:	a8 f4       	brcc	.+42     	; 0x100c <vfprintf+0x4a2>
     fe2:	e5 2c       	mov	r14, r5
     fe4:	2b c0       	rjmp	.+86     	; 0x103c <vfprintf+0x4d2>
     fe6:	35 01       	movw	r6, r10
     fe8:	32 e0       	ldi	r19, 0x02	; 2
     fea:	63 0e       	add	r6, r19
     fec:	71 1c       	adc	r7, r1
     fee:	f5 01       	movw	r30, r10
     ff0:	a0 80       	ld	r10, Z
     ff2:	b1 80       	ldd	r11, Z+1	; 0x01
     ff4:	6f 2d       	mov	r22, r15
     ff6:	70 e0       	ldi	r23, 0x00	; 0
     ff8:	06 fd       	sbrc	r16, 6
     ffa:	02 c0       	rjmp	.+4      	; 0x1000 <vfprintf+0x496>
     ffc:	6f ef       	ldi	r22, 0xFF	; 255
     ffe:	7f ef       	ldi	r23, 0xFF	; 255
    1000:	c5 01       	movw	r24, r10
    1002:	0e 94 b2 0b 	call	0x1764	; 0x1764 <strnlen>
    1006:	9d 87       	std	Y+13, r25	; 0x0d
    1008:	8c 87       	std	Y+12, r24	; 0x0c
    100a:	e2 cf       	rjmp	.-60     	; 0xfd0 <vfprintf+0x466>
    100c:	b6 01       	movw	r22, r12
    100e:	80 e2       	ldi	r24, 0x20	; 32
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
    1016:	5a 94       	dec	r5
    1018:	de cf       	rjmp	.-68     	; 0xfd6 <vfprintf+0x46c>
    101a:	f5 01       	movw	r30, r10
    101c:	07 fd       	sbrc	r16, 7
    101e:	85 91       	lpm	r24, Z+
    1020:	07 ff       	sbrs	r16, 7
    1022:	81 91       	ld	r24, Z+
    1024:	5f 01       	movw	r10, r30
    1026:	b6 01       	movw	r22, r12
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
    102e:	e1 10       	cpse	r14, r1
    1030:	ea 94       	dec	r14
    1032:	8c 85       	ldd	r24, Y+12	; 0x0c
    1034:	9d 85       	ldd	r25, Y+13	; 0x0d
    1036:	01 97       	sbiw	r24, 0x01	; 1
    1038:	9d 87       	std	Y+13, r25	; 0x0d
    103a:	8c 87       	std	Y+12, r24	; 0x0c
    103c:	ec 85       	ldd	r30, Y+12	; 0x0c
    103e:	fd 85       	ldd	r31, Y+13	; 0x0d
    1040:	ef 2b       	or	r30, r31
    1042:	59 f7       	brne	.-42     	; 0x101a <vfprintf+0x4b0>
    1044:	8c ce       	rjmp	.-744    	; 0xd5e <vfprintf+0x1f4>
    1046:	84 36       	cpi	r24, 0x64	; 100
    1048:	19 f0       	breq	.+6      	; 0x1050 <vfprintf+0x4e6>
    104a:	89 36       	cpi	r24, 0x69	; 105
    104c:	09 f0       	breq	.+2      	; 0x1050 <vfprintf+0x4e6>
    104e:	74 c0       	rjmp	.+232    	; 0x1138 <vfprintf+0x5ce>
    1050:	35 01       	movw	r6, r10
    1052:	07 ff       	sbrs	r16, 7
    1054:	66 c0       	rjmp	.+204    	; 0x1122 <vfprintf+0x5b8>
    1056:	f4 e0       	ldi	r31, 0x04	; 4
    1058:	6f 0e       	add	r6, r31
    105a:	71 1c       	adc	r7, r1
    105c:	f5 01       	movw	r30, r10
    105e:	60 81       	ld	r22, Z
    1060:	71 81       	ldd	r23, Z+1	; 0x01
    1062:	82 81       	ldd	r24, Z+2	; 0x02
    1064:	93 81       	ldd	r25, Z+3	; 0x03
    1066:	10 2f       	mov	r17, r16
    1068:	1f 76       	andi	r17, 0x6F	; 111
    106a:	97 ff       	sbrs	r25, 7
    106c:	08 c0       	rjmp	.+16     	; 0x107e <vfprintf+0x514>
    106e:	90 95       	com	r25
    1070:	80 95       	com	r24
    1072:	70 95       	com	r23
    1074:	61 95       	neg	r22
    1076:	7f 4f       	sbci	r23, 0xFF	; 255
    1078:	8f 4f       	sbci	r24, 0xFF	; 255
    107a:	9f 4f       	sbci	r25, 0xFF	; 255
    107c:	10 68       	ori	r17, 0x80	; 128
    107e:	2a e0       	ldi	r18, 0x0A	; 10
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	a4 01       	movw	r20, r8
    1084:	0e 94 ed 0b 	call	0x17da	; 0x17da <__ultoa_invert>
    1088:	a8 2e       	mov	r10, r24
    108a:	a8 18       	sub	r10, r8
    108c:	ba 2c       	mov	r11, r10
    108e:	01 2f       	mov	r16, r17
    1090:	16 ff       	sbrs	r17, 6
    1092:	0a c0       	rjmp	.+20     	; 0x10a8 <vfprintf+0x53e>
    1094:	0e 7f       	andi	r16, 0xFE	; 254
    1096:	af 14       	cp	r10, r15
    1098:	38 f4       	brcc	.+14     	; 0x10a8 <vfprintf+0x53e>
    109a:	14 ff       	sbrs	r17, 4
    109c:	04 c0       	rjmp	.+8      	; 0x10a6 <vfprintf+0x53c>
    109e:	12 fd       	sbrc	r17, 2
    10a0:	02 c0       	rjmp	.+4      	; 0x10a6 <vfprintf+0x53c>
    10a2:	01 2f       	mov	r16, r17
    10a4:	0e 7e       	andi	r16, 0xEE	; 238
    10a6:	bf 2c       	mov	r11, r15
    10a8:	04 ff       	sbrs	r16, 4
    10aa:	8e c0       	rjmp	.+284    	; 0x11c8 <vfprintf+0x65e>
    10ac:	fe 01       	movw	r30, r28
    10ae:	ea 0d       	add	r30, r10
    10b0:	f1 1d       	adc	r31, r1
    10b2:	80 81       	ld	r24, Z
    10b4:	80 33       	cpi	r24, 0x30	; 48
    10b6:	09 f0       	breq	.+2      	; 0x10ba <vfprintf+0x550>
    10b8:	80 c0       	rjmp	.+256    	; 0x11ba <vfprintf+0x650>
    10ba:	09 7e       	andi	r16, 0xE9	; 233
    10bc:	f0 2f       	mov	r31, r16
    10be:	f8 70       	andi	r31, 0x08	; 8
    10c0:	ef 2e       	mov	r14, r31
    10c2:	03 fd       	sbrc	r16, 3
    10c4:	90 c0       	rjmp	.+288    	; 0x11e6 <vfprintf+0x67c>
    10c6:	00 ff       	sbrs	r16, 0
    10c8:	8a c0       	rjmp	.+276    	; 0x11de <vfprintf+0x674>
    10ca:	fa 2c       	mov	r15, r10
    10cc:	b5 14       	cp	r11, r5
    10ce:	10 f4       	brcc	.+4      	; 0x10d4 <vfprintf+0x56a>
    10d0:	f5 0c       	add	r15, r5
    10d2:	fb 18       	sub	r15, r11
    10d4:	04 ff       	sbrs	r16, 4
    10d6:	8d c0       	rjmp	.+282    	; 0x11f2 <vfprintf+0x688>
    10d8:	b6 01       	movw	r22, r12
    10da:	80 e3       	ldi	r24, 0x30	; 48
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
    10e2:	02 ff       	sbrs	r16, 2
    10e4:	09 c0       	rjmp	.+18     	; 0x10f8 <vfprintf+0x58e>
    10e6:	88 e7       	ldi	r24, 0x78	; 120
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	01 ff       	sbrs	r16, 1
    10ec:	02 c0       	rjmp	.+4      	; 0x10f2 <vfprintf+0x588>
    10ee:	88 e5       	ldi	r24, 0x58	; 88
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	b6 01       	movw	r22, r12
    10f4:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
    10f8:	af 14       	cp	r10, r15
    10fa:	08 f4       	brcc	.+2      	; 0x10fe <vfprintf+0x594>
    10fc:	86 c0       	rjmp	.+268    	; 0x120a <vfprintf+0x6a0>
    10fe:	aa 94       	dec	r10
    1100:	0a 2d       	mov	r16, r10
    1102:	10 e0       	ldi	r17, 0x00	; 0
    1104:	0f 5f       	subi	r16, 0xFF	; 255
    1106:	1f 4f       	sbci	r17, 0xFF	; 255
    1108:	08 0d       	add	r16, r8
    110a:	19 1d       	adc	r17, r9
    110c:	f8 01       	movw	r30, r16
    110e:	82 91       	ld	r24, -Z
    1110:	8f 01       	movw	r16, r30
    1112:	b6 01       	movw	r22, r12
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
    111a:	80 16       	cp	r8, r16
    111c:	91 06       	cpc	r9, r17
    111e:	b1 f7       	brne	.-20     	; 0x110c <vfprintf+0x5a2>
    1120:	1e ce       	rjmp	.-964    	; 0xd5e <vfprintf+0x1f4>
    1122:	f2 e0       	ldi	r31, 0x02	; 2
    1124:	6f 0e       	add	r6, r31
    1126:	71 1c       	adc	r7, r1
    1128:	f5 01       	movw	r30, r10
    112a:	60 81       	ld	r22, Z
    112c:	71 81       	ldd	r23, Z+1	; 0x01
    112e:	07 2e       	mov	r0, r23
    1130:	00 0c       	add	r0, r0
    1132:	88 0b       	sbc	r24, r24
    1134:	99 0b       	sbc	r25, r25
    1136:	97 cf       	rjmp	.-210    	; 0x1066 <vfprintf+0x4fc>
    1138:	10 2f       	mov	r17, r16
    113a:	85 37       	cpi	r24, 0x75	; 117
    113c:	a9 f4       	brne	.+42     	; 0x1168 <vfprintf+0x5fe>
    113e:	1f 7e       	andi	r17, 0xEF	; 239
    1140:	2a e0       	ldi	r18, 0x0A	; 10
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	35 01       	movw	r6, r10
    1146:	17 ff       	sbrs	r17, 7
    1148:	2f c0       	rjmp	.+94     	; 0x11a8 <vfprintf+0x63e>
    114a:	f4 e0       	ldi	r31, 0x04	; 4
    114c:	6f 0e       	add	r6, r31
    114e:	71 1c       	adc	r7, r1
    1150:	f5 01       	movw	r30, r10
    1152:	60 81       	ld	r22, Z
    1154:	71 81       	ldd	r23, Z+1	; 0x01
    1156:	82 81       	ldd	r24, Z+2	; 0x02
    1158:	93 81       	ldd	r25, Z+3	; 0x03
    115a:	a4 01       	movw	r20, r8
    115c:	0e 94 ed 0b 	call	0x17da	; 0x17da <__ultoa_invert>
    1160:	a8 2e       	mov	r10, r24
    1162:	a8 18       	sub	r10, r8
    1164:	1f 77       	andi	r17, 0x7F	; 127
    1166:	92 cf       	rjmp	.-220    	; 0x108c <vfprintf+0x522>
    1168:	19 7f       	andi	r17, 0xF9	; 249
    116a:	8f 36       	cpi	r24, 0x6F	; 111
    116c:	d1 f0       	breq	.+52     	; 0x11a2 <vfprintf+0x638>
    116e:	48 f4       	brcc	.+18     	; 0x1182 <vfprintf+0x618>
    1170:	88 35       	cpi	r24, 0x58	; 88
    1172:	91 f0       	breq	.+36     	; 0x1198 <vfprintf+0x62e>
    1174:	f6 01       	movw	r30, r12
    1176:	86 81       	ldd	r24, Z+6	; 0x06
    1178:	97 81       	ldd	r25, Z+7	; 0x07
    117a:	2f 96       	adiw	r28, 0x0f	; 15
    117c:	e2 e1       	ldi	r30, 0x12	; 18
    117e:	0c 94 b4 0a 	jmp	0x1568	; 0x1568 <__epilogue_restores__>
    1182:	80 37       	cpi	r24, 0x70	; 112
    1184:	39 f0       	breq	.+14     	; 0x1194 <vfprintf+0x62a>
    1186:	88 37       	cpi	r24, 0x78	; 120
    1188:	a9 f7       	brne	.-22     	; 0x1174 <vfprintf+0x60a>
    118a:	14 fd       	sbrc	r17, 4
    118c:	14 60       	ori	r17, 0x04	; 4
    118e:	20 e1       	ldi	r18, 0x10	; 16
    1190:	30 e0       	ldi	r19, 0x00	; 0
    1192:	d8 cf       	rjmp	.-80     	; 0x1144 <vfprintf+0x5da>
    1194:	10 61       	ori	r17, 0x10	; 16
    1196:	f9 cf       	rjmp	.-14     	; 0x118a <vfprintf+0x620>
    1198:	04 fd       	sbrc	r16, 4
    119a:	16 60       	ori	r17, 0x06	; 6
    119c:	20 e1       	ldi	r18, 0x10	; 16
    119e:	32 e0       	ldi	r19, 0x02	; 2
    11a0:	d1 cf       	rjmp	.-94     	; 0x1144 <vfprintf+0x5da>
    11a2:	28 e0       	ldi	r18, 0x08	; 8
    11a4:	30 e0       	ldi	r19, 0x00	; 0
    11a6:	ce cf       	rjmp	.-100    	; 0x1144 <vfprintf+0x5da>
    11a8:	f2 e0       	ldi	r31, 0x02	; 2
    11aa:	6f 0e       	add	r6, r31
    11ac:	71 1c       	adc	r7, r1
    11ae:	f5 01       	movw	r30, r10
    11b0:	60 81       	ld	r22, Z
    11b2:	71 81       	ldd	r23, Z+1	; 0x01
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	80 e0       	ldi	r24, 0x00	; 0
    11b8:	d0 cf       	rjmp	.-96     	; 0x115a <vfprintf+0x5f0>
    11ba:	02 fd       	sbrc	r16, 2
    11bc:	02 c0       	rjmp	.+4      	; 0x11c2 <vfprintf+0x658>
    11be:	b3 94       	inc	r11
    11c0:	7d cf       	rjmp	.-262    	; 0x10bc <vfprintf+0x552>
    11c2:	b3 94       	inc	r11
    11c4:	b3 94       	inc	r11
    11c6:	7a cf       	rjmp	.-268    	; 0x10bc <vfprintf+0x552>
    11c8:	80 2f       	mov	r24, r16
    11ca:	86 78       	andi	r24, 0x86	; 134
    11cc:	09 f4       	brne	.+2      	; 0x11d0 <vfprintf+0x666>
    11ce:	76 cf       	rjmp	.-276    	; 0x10bc <vfprintf+0x552>
    11d0:	f6 cf       	rjmp	.-20     	; 0x11be <vfprintf+0x654>
    11d2:	b6 01       	movw	r22, r12
    11d4:	80 e2       	ldi	r24, 0x20	; 32
    11d6:	90 e0       	ldi	r25, 0x00	; 0
    11d8:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
    11dc:	b3 94       	inc	r11
    11de:	b5 14       	cp	r11, r5
    11e0:	c0 f3       	brcs	.-16     	; 0x11d2 <vfprintf+0x668>
    11e2:	e1 2c       	mov	r14, r1
    11e4:	77 cf       	rjmp	.-274    	; 0x10d4 <vfprintf+0x56a>
    11e6:	e5 2c       	mov	r14, r5
    11e8:	eb 18       	sub	r14, r11
    11ea:	b5 14       	cp	r11, r5
    11ec:	08 f4       	brcc	.+2      	; 0x11f0 <vfprintf+0x686>
    11ee:	72 cf       	rjmp	.-284    	; 0x10d4 <vfprintf+0x56a>
    11f0:	f8 cf       	rjmp	.-16     	; 0x11e2 <vfprintf+0x678>
    11f2:	80 2f       	mov	r24, r16
    11f4:	86 78       	andi	r24, 0x86	; 134
    11f6:	09 f4       	brne	.+2      	; 0x11fa <vfprintf+0x690>
    11f8:	7f cf       	rjmp	.-258    	; 0x10f8 <vfprintf+0x58e>
    11fa:	8b e2       	ldi	r24, 0x2B	; 43
    11fc:	01 ff       	sbrs	r16, 1
    11fe:	80 e2       	ldi	r24, 0x20	; 32
    1200:	07 fd       	sbrc	r16, 7
    1202:	8d e2       	ldi	r24, 0x2D	; 45
    1204:	b6 01       	movw	r22, r12
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	75 cf       	rjmp	.-278    	; 0x10f4 <vfprintf+0x58a>
    120a:	b6 01       	movw	r22, r12
    120c:	80 e3       	ldi	r24, 0x30	; 48
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	0e 94 bd 0b 	call	0x177a	; 0x177a <fputc>
    1214:	fa 94       	dec	r15
    1216:	70 cf       	rjmp	.-288    	; 0x10f8 <vfprintf+0x58e>
    1218:	8f ef       	ldi	r24, 0xFF	; 255
    121a:	9f ef       	ldi	r25, 0xFF	; 255
    121c:	ae cf       	rjmp	.-164    	; 0x117a <vfprintf+0x610>
    121e:	24 e0       	ldi	r18, 0x04	; 4
    1220:	e1 2c       	mov	r14, r1
    1222:	25 15       	cp	r18, r5
    1224:	08 f0       	brcs	.+2      	; 0x1228 <vfprintf+0x6be>
    1226:	63 cd       	rjmp	.-1338   	; 0xcee <vfprintf+0x184>
    1228:	84 e0       	ldi	r24, 0x04	; 4
    122a:	53 cd       	rjmp	.-1370   	; 0xcd2 <vfprintf+0x168>

0000122c <__divsf3>:
    122c:	0e 94 2a 09 	call	0x1254	; 0x1254 <__divsf3x>
    1230:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__fp_round>
    1234:	0e 94 04 0a 	call	0x1408	; 0x1408 <__fp_pscB>
    1238:	58 f0       	brcs	.+22     	; 0x1250 <__divsf3+0x24>
    123a:	0e 94 fd 09 	call	0x13fa	; 0x13fa <__fp_pscA>
    123e:	40 f0       	brcs	.+16     	; 0x1250 <__divsf3+0x24>
    1240:	29 f4       	brne	.+10     	; 0x124c <__divsf3+0x20>
    1242:	5f 3f       	cpi	r21, 0xFF	; 255
    1244:	29 f0       	breq	.+10     	; 0x1250 <__divsf3+0x24>
    1246:	0c 94 f4 09 	jmp	0x13e8	; 0x13e8 <__fp_inf>
    124a:	51 11       	cpse	r21, r1
    124c:	0c 94 3f 0a 	jmp	0x147e	; 0x147e <__fp_szero>
    1250:	0c 94 fa 09 	jmp	0x13f4	; 0x13f4 <__fp_nan>

00001254 <__divsf3x>:
    1254:	0e 94 1c 0a 	call	0x1438	; 0x1438 <__fp_split3>
    1258:	68 f3       	brcs	.-38     	; 0x1234 <__divsf3+0x8>

0000125a <__divsf3_pse>:
    125a:	99 23       	and	r25, r25
    125c:	b1 f3       	breq	.-20     	; 0x124a <__divsf3+0x1e>
    125e:	55 23       	and	r21, r21
    1260:	91 f3       	breq	.-28     	; 0x1246 <__divsf3+0x1a>
    1262:	95 1b       	sub	r25, r21
    1264:	55 0b       	sbc	r21, r21
    1266:	bb 27       	eor	r27, r27
    1268:	aa 27       	eor	r26, r26
    126a:	62 17       	cp	r22, r18
    126c:	73 07       	cpc	r23, r19
    126e:	84 07       	cpc	r24, r20
    1270:	38 f0       	brcs	.+14     	; 0x1280 <__divsf3_pse+0x26>
    1272:	9f 5f       	subi	r25, 0xFF	; 255
    1274:	5f 4f       	sbci	r21, 0xFF	; 255
    1276:	22 0f       	add	r18, r18
    1278:	33 1f       	adc	r19, r19
    127a:	44 1f       	adc	r20, r20
    127c:	aa 1f       	adc	r26, r26
    127e:	a9 f3       	breq	.-22     	; 0x126a <__divsf3_pse+0x10>
    1280:	35 d0       	rcall	.+106    	; 0x12ec <__divsf3_pse+0x92>
    1282:	0e 2e       	mov	r0, r30
    1284:	3a f0       	brmi	.+14     	; 0x1294 <__divsf3_pse+0x3a>
    1286:	e0 e8       	ldi	r30, 0x80	; 128
    1288:	32 d0       	rcall	.+100    	; 0x12ee <__divsf3_pse+0x94>
    128a:	91 50       	subi	r25, 0x01	; 1
    128c:	50 40       	sbci	r21, 0x00	; 0
    128e:	e6 95       	lsr	r30
    1290:	00 1c       	adc	r0, r0
    1292:	ca f7       	brpl	.-14     	; 0x1286 <__divsf3_pse+0x2c>
    1294:	2b d0       	rcall	.+86     	; 0x12ec <__divsf3_pse+0x92>
    1296:	fe 2f       	mov	r31, r30
    1298:	29 d0       	rcall	.+82     	; 0x12ec <__divsf3_pse+0x92>
    129a:	66 0f       	add	r22, r22
    129c:	77 1f       	adc	r23, r23
    129e:	88 1f       	adc	r24, r24
    12a0:	bb 1f       	adc	r27, r27
    12a2:	26 17       	cp	r18, r22
    12a4:	37 07       	cpc	r19, r23
    12a6:	48 07       	cpc	r20, r24
    12a8:	ab 07       	cpc	r26, r27
    12aa:	b0 e8       	ldi	r27, 0x80	; 128
    12ac:	09 f0       	breq	.+2      	; 0x12b0 <__divsf3_pse+0x56>
    12ae:	bb 0b       	sbc	r27, r27
    12b0:	80 2d       	mov	r24, r0
    12b2:	bf 01       	movw	r22, r30
    12b4:	ff 27       	eor	r31, r31
    12b6:	93 58       	subi	r25, 0x83	; 131
    12b8:	5f 4f       	sbci	r21, 0xFF	; 255
    12ba:	3a f0       	brmi	.+14     	; 0x12ca <__divsf3_pse+0x70>
    12bc:	9e 3f       	cpi	r25, 0xFE	; 254
    12be:	51 05       	cpc	r21, r1
    12c0:	78 f0       	brcs	.+30     	; 0x12e0 <__divsf3_pse+0x86>
    12c2:	0c 94 f4 09 	jmp	0x13e8	; 0x13e8 <__fp_inf>
    12c6:	0c 94 3f 0a 	jmp	0x147e	; 0x147e <__fp_szero>
    12ca:	5f 3f       	cpi	r21, 0xFF	; 255
    12cc:	e4 f3       	brlt	.-8      	; 0x12c6 <__divsf3_pse+0x6c>
    12ce:	98 3e       	cpi	r25, 0xE8	; 232
    12d0:	d4 f3       	brlt	.-12     	; 0x12c6 <__divsf3_pse+0x6c>
    12d2:	86 95       	lsr	r24
    12d4:	77 95       	ror	r23
    12d6:	67 95       	ror	r22
    12d8:	b7 95       	ror	r27
    12da:	f7 95       	ror	r31
    12dc:	9f 5f       	subi	r25, 0xFF	; 255
    12de:	c9 f7       	brne	.-14     	; 0x12d2 <__divsf3_pse+0x78>
    12e0:	88 0f       	add	r24, r24
    12e2:	91 1d       	adc	r25, r1
    12e4:	96 95       	lsr	r25
    12e6:	87 95       	ror	r24
    12e8:	97 f9       	bld	r25, 7
    12ea:	08 95       	ret
    12ec:	e1 e0       	ldi	r30, 0x01	; 1
    12ee:	66 0f       	add	r22, r22
    12f0:	77 1f       	adc	r23, r23
    12f2:	88 1f       	adc	r24, r24
    12f4:	bb 1f       	adc	r27, r27
    12f6:	62 17       	cp	r22, r18
    12f8:	73 07       	cpc	r23, r19
    12fa:	84 07       	cpc	r24, r20
    12fc:	ba 07       	cpc	r27, r26
    12fe:	20 f0       	brcs	.+8      	; 0x1308 <__divsf3_pse+0xae>
    1300:	62 1b       	sub	r22, r18
    1302:	73 0b       	sbc	r23, r19
    1304:	84 0b       	sbc	r24, r20
    1306:	ba 0b       	sbc	r27, r26
    1308:	ee 1f       	adc	r30, r30
    130a:	88 f7       	brcc	.-30     	; 0x12ee <__divsf3_pse+0x94>
    130c:	e0 95       	com	r30
    130e:	08 95       	ret

00001310 <__fixunssfsi>:
    1310:	0e 94 24 0a 	call	0x1448	; 0x1448 <__fp_splitA>
    1314:	88 f0       	brcs	.+34     	; 0x1338 <__fixunssfsi+0x28>
    1316:	9f 57       	subi	r25, 0x7F	; 127
    1318:	98 f0       	brcs	.+38     	; 0x1340 <__fixunssfsi+0x30>
    131a:	b9 2f       	mov	r27, r25
    131c:	99 27       	eor	r25, r25
    131e:	b7 51       	subi	r27, 0x17	; 23
    1320:	b0 f0       	brcs	.+44     	; 0x134e <__fixunssfsi+0x3e>
    1322:	e1 f0       	breq	.+56     	; 0x135c <__fixunssfsi+0x4c>
    1324:	66 0f       	add	r22, r22
    1326:	77 1f       	adc	r23, r23
    1328:	88 1f       	adc	r24, r24
    132a:	99 1f       	adc	r25, r25
    132c:	1a f0       	brmi	.+6      	; 0x1334 <__fixunssfsi+0x24>
    132e:	ba 95       	dec	r27
    1330:	c9 f7       	brne	.-14     	; 0x1324 <__fixunssfsi+0x14>
    1332:	14 c0       	rjmp	.+40     	; 0x135c <__fixunssfsi+0x4c>
    1334:	b1 30       	cpi	r27, 0x01	; 1
    1336:	91 f0       	breq	.+36     	; 0x135c <__fixunssfsi+0x4c>
    1338:	0e 94 3e 0a 	call	0x147c	; 0x147c <__fp_zero>
    133c:	b1 e0       	ldi	r27, 0x01	; 1
    133e:	08 95       	ret
    1340:	0c 94 3e 0a 	jmp	0x147c	; 0x147c <__fp_zero>
    1344:	67 2f       	mov	r22, r23
    1346:	78 2f       	mov	r23, r24
    1348:	88 27       	eor	r24, r24
    134a:	b8 5f       	subi	r27, 0xF8	; 248
    134c:	39 f0       	breq	.+14     	; 0x135c <__fixunssfsi+0x4c>
    134e:	b9 3f       	cpi	r27, 0xF9	; 249
    1350:	cc f3       	brlt	.-14     	; 0x1344 <__fixunssfsi+0x34>
    1352:	86 95       	lsr	r24
    1354:	77 95       	ror	r23
    1356:	67 95       	ror	r22
    1358:	b3 95       	inc	r27
    135a:	d9 f7       	brne	.-10     	; 0x1352 <__fixunssfsi+0x42>
    135c:	3e f4       	brtc	.+14     	; 0x136c <__fixunssfsi+0x5c>
    135e:	90 95       	com	r25
    1360:	80 95       	com	r24
    1362:	70 95       	com	r23
    1364:	61 95       	neg	r22
    1366:	7f 4f       	sbci	r23, 0xFF	; 255
    1368:	8f 4f       	sbci	r24, 0xFF	; 255
    136a:	9f 4f       	sbci	r25, 0xFF	; 255
    136c:	08 95       	ret

0000136e <__floatunsisf>:
    136e:	e8 94       	clt
    1370:	09 c0       	rjmp	.+18     	; 0x1384 <__floatsisf+0x12>

00001372 <__floatsisf>:
    1372:	97 fb       	bst	r25, 7
    1374:	3e f4       	brtc	.+14     	; 0x1384 <__floatsisf+0x12>
    1376:	90 95       	com	r25
    1378:	80 95       	com	r24
    137a:	70 95       	com	r23
    137c:	61 95       	neg	r22
    137e:	7f 4f       	sbci	r23, 0xFF	; 255
    1380:	8f 4f       	sbci	r24, 0xFF	; 255
    1382:	9f 4f       	sbci	r25, 0xFF	; 255
    1384:	99 23       	and	r25, r25
    1386:	a9 f0       	breq	.+42     	; 0x13b2 <__floatsisf+0x40>
    1388:	f9 2f       	mov	r31, r25
    138a:	96 e9       	ldi	r25, 0x96	; 150
    138c:	bb 27       	eor	r27, r27
    138e:	93 95       	inc	r25
    1390:	f6 95       	lsr	r31
    1392:	87 95       	ror	r24
    1394:	77 95       	ror	r23
    1396:	67 95       	ror	r22
    1398:	b7 95       	ror	r27
    139a:	f1 11       	cpse	r31, r1
    139c:	f8 cf       	rjmp	.-16     	; 0x138e <__floatsisf+0x1c>
    139e:	fa f4       	brpl	.+62     	; 0x13de <__floatsisf+0x6c>
    13a0:	bb 0f       	add	r27, r27
    13a2:	11 f4       	brne	.+4      	; 0x13a8 <__floatsisf+0x36>
    13a4:	60 ff       	sbrs	r22, 0
    13a6:	1b c0       	rjmp	.+54     	; 0x13de <__floatsisf+0x6c>
    13a8:	6f 5f       	subi	r22, 0xFF	; 255
    13aa:	7f 4f       	sbci	r23, 0xFF	; 255
    13ac:	8f 4f       	sbci	r24, 0xFF	; 255
    13ae:	9f 4f       	sbci	r25, 0xFF	; 255
    13b0:	16 c0       	rjmp	.+44     	; 0x13de <__floatsisf+0x6c>
    13b2:	88 23       	and	r24, r24
    13b4:	11 f0       	breq	.+4      	; 0x13ba <__floatsisf+0x48>
    13b6:	96 e9       	ldi	r25, 0x96	; 150
    13b8:	11 c0       	rjmp	.+34     	; 0x13dc <__floatsisf+0x6a>
    13ba:	77 23       	and	r23, r23
    13bc:	21 f0       	breq	.+8      	; 0x13c6 <__floatsisf+0x54>
    13be:	9e e8       	ldi	r25, 0x8E	; 142
    13c0:	87 2f       	mov	r24, r23
    13c2:	76 2f       	mov	r23, r22
    13c4:	05 c0       	rjmp	.+10     	; 0x13d0 <__floatsisf+0x5e>
    13c6:	66 23       	and	r22, r22
    13c8:	71 f0       	breq	.+28     	; 0x13e6 <__floatsisf+0x74>
    13ca:	96 e8       	ldi	r25, 0x86	; 134
    13cc:	86 2f       	mov	r24, r22
    13ce:	70 e0       	ldi	r23, 0x00	; 0
    13d0:	60 e0       	ldi	r22, 0x00	; 0
    13d2:	2a f0       	brmi	.+10     	; 0x13de <__floatsisf+0x6c>
    13d4:	9a 95       	dec	r25
    13d6:	66 0f       	add	r22, r22
    13d8:	77 1f       	adc	r23, r23
    13da:	88 1f       	adc	r24, r24
    13dc:	da f7       	brpl	.-10     	; 0x13d4 <__floatsisf+0x62>
    13de:	88 0f       	add	r24, r24
    13e0:	96 95       	lsr	r25
    13e2:	87 95       	ror	r24
    13e4:	97 f9       	bld	r25, 7
    13e6:	08 95       	ret

000013e8 <__fp_inf>:
    13e8:	97 f9       	bld	r25, 7
    13ea:	9f 67       	ori	r25, 0x7F	; 127
    13ec:	80 e8       	ldi	r24, 0x80	; 128
    13ee:	70 e0       	ldi	r23, 0x00	; 0
    13f0:	60 e0       	ldi	r22, 0x00	; 0
    13f2:	08 95       	ret

000013f4 <__fp_nan>:
    13f4:	9f ef       	ldi	r25, 0xFF	; 255
    13f6:	80 ec       	ldi	r24, 0xC0	; 192
    13f8:	08 95       	ret

000013fa <__fp_pscA>:
    13fa:	00 24       	eor	r0, r0
    13fc:	0a 94       	dec	r0
    13fe:	16 16       	cp	r1, r22
    1400:	17 06       	cpc	r1, r23
    1402:	18 06       	cpc	r1, r24
    1404:	09 06       	cpc	r0, r25
    1406:	08 95       	ret

00001408 <__fp_pscB>:
    1408:	00 24       	eor	r0, r0
    140a:	0a 94       	dec	r0
    140c:	12 16       	cp	r1, r18
    140e:	13 06       	cpc	r1, r19
    1410:	14 06       	cpc	r1, r20
    1412:	05 06       	cpc	r0, r21
    1414:	08 95       	ret

00001416 <__fp_round>:
    1416:	09 2e       	mov	r0, r25
    1418:	03 94       	inc	r0
    141a:	00 0c       	add	r0, r0
    141c:	11 f4       	brne	.+4      	; 0x1422 <__fp_round+0xc>
    141e:	88 23       	and	r24, r24
    1420:	52 f0       	brmi	.+20     	; 0x1436 <__fp_round+0x20>
    1422:	bb 0f       	add	r27, r27
    1424:	40 f4       	brcc	.+16     	; 0x1436 <__fp_round+0x20>
    1426:	bf 2b       	or	r27, r31
    1428:	11 f4       	brne	.+4      	; 0x142e <__fp_round+0x18>
    142a:	60 ff       	sbrs	r22, 0
    142c:	04 c0       	rjmp	.+8      	; 0x1436 <__fp_round+0x20>
    142e:	6f 5f       	subi	r22, 0xFF	; 255
    1430:	7f 4f       	sbci	r23, 0xFF	; 255
    1432:	8f 4f       	sbci	r24, 0xFF	; 255
    1434:	9f 4f       	sbci	r25, 0xFF	; 255
    1436:	08 95       	ret

00001438 <__fp_split3>:
    1438:	57 fd       	sbrc	r21, 7
    143a:	90 58       	subi	r25, 0x80	; 128
    143c:	44 0f       	add	r20, r20
    143e:	55 1f       	adc	r21, r21
    1440:	59 f0       	breq	.+22     	; 0x1458 <__fp_splitA+0x10>
    1442:	5f 3f       	cpi	r21, 0xFF	; 255
    1444:	71 f0       	breq	.+28     	; 0x1462 <__fp_splitA+0x1a>
    1446:	47 95       	ror	r20

00001448 <__fp_splitA>:
    1448:	88 0f       	add	r24, r24
    144a:	97 fb       	bst	r25, 7
    144c:	99 1f       	adc	r25, r25
    144e:	61 f0       	breq	.+24     	; 0x1468 <__fp_splitA+0x20>
    1450:	9f 3f       	cpi	r25, 0xFF	; 255
    1452:	79 f0       	breq	.+30     	; 0x1472 <__fp_splitA+0x2a>
    1454:	87 95       	ror	r24
    1456:	08 95       	ret
    1458:	12 16       	cp	r1, r18
    145a:	13 06       	cpc	r1, r19
    145c:	14 06       	cpc	r1, r20
    145e:	55 1f       	adc	r21, r21
    1460:	f2 cf       	rjmp	.-28     	; 0x1446 <__fp_split3+0xe>
    1462:	46 95       	lsr	r20
    1464:	f1 df       	rcall	.-30     	; 0x1448 <__fp_splitA>
    1466:	08 c0       	rjmp	.+16     	; 0x1478 <__fp_splitA+0x30>
    1468:	16 16       	cp	r1, r22
    146a:	17 06       	cpc	r1, r23
    146c:	18 06       	cpc	r1, r24
    146e:	99 1f       	adc	r25, r25
    1470:	f1 cf       	rjmp	.-30     	; 0x1454 <__fp_splitA+0xc>
    1472:	86 95       	lsr	r24
    1474:	71 05       	cpc	r23, r1
    1476:	61 05       	cpc	r22, r1
    1478:	08 94       	sec
    147a:	08 95       	ret

0000147c <__fp_zero>:
    147c:	e8 94       	clt

0000147e <__fp_szero>:
    147e:	bb 27       	eor	r27, r27
    1480:	66 27       	eor	r22, r22
    1482:	77 27       	eor	r23, r23
    1484:	cb 01       	movw	r24, r22
    1486:	97 f9       	bld	r25, 7
    1488:	08 95       	ret

0000148a <__udivmodqi4>:
    148a:	99 1b       	sub	r25, r25
    148c:	79 e0       	ldi	r23, 0x09	; 9
    148e:	04 c0       	rjmp	.+8      	; 0x1498 <__udivmodqi4_ep>

00001490 <__udivmodqi4_loop>:
    1490:	99 1f       	adc	r25, r25
    1492:	96 17       	cp	r25, r22
    1494:	08 f0       	brcs	.+2      	; 0x1498 <__udivmodqi4_ep>
    1496:	96 1b       	sub	r25, r22

00001498 <__udivmodqi4_ep>:
    1498:	88 1f       	adc	r24, r24
    149a:	7a 95       	dec	r23
    149c:	c9 f7       	brne	.-14     	; 0x1490 <__udivmodqi4_loop>
    149e:	80 95       	com	r24
    14a0:	08 95       	ret

000014a2 <__udivmodsi4>:
    14a2:	a1 e2       	ldi	r26, 0x21	; 33
    14a4:	1a 2e       	mov	r1, r26
    14a6:	aa 1b       	sub	r26, r26
    14a8:	bb 1b       	sub	r27, r27
    14aa:	fd 01       	movw	r30, r26
    14ac:	0d c0       	rjmp	.+26     	; 0x14c8 <__udivmodsi4_ep>

000014ae <__udivmodsi4_loop>:
    14ae:	aa 1f       	adc	r26, r26
    14b0:	bb 1f       	adc	r27, r27
    14b2:	ee 1f       	adc	r30, r30
    14b4:	ff 1f       	adc	r31, r31
    14b6:	a2 17       	cp	r26, r18
    14b8:	b3 07       	cpc	r27, r19
    14ba:	e4 07       	cpc	r30, r20
    14bc:	f5 07       	cpc	r31, r21
    14be:	20 f0       	brcs	.+8      	; 0x14c8 <__udivmodsi4_ep>
    14c0:	a2 1b       	sub	r26, r18
    14c2:	b3 0b       	sbc	r27, r19
    14c4:	e4 0b       	sbc	r30, r20
    14c6:	f5 0b       	sbc	r31, r21

000014c8 <__udivmodsi4_ep>:
    14c8:	66 1f       	adc	r22, r22
    14ca:	77 1f       	adc	r23, r23
    14cc:	88 1f       	adc	r24, r24
    14ce:	99 1f       	adc	r25, r25
    14d0:	1a 94       	dec	r1
    14d2:	69 f7       	brne	.-38     	; 0x14ae <__udivmodsi4_loop>
    14d4:	60 95       	com	r22
    14d6:	70 95       	com	r23
    14d8:	80 95       	com	r24
    14da:	90 95       	com	r25
    14dc:	9b 01       	movw	r18, r22
    14de:	ac 01       	movw	r20, r24
    14e0:	bd 01       	movw	r22, r26
    14e2:	cf 01       	movw	r24, r30
    14e4:	08 95       	ret

000014e6 <__divmodsi4>:
    14e6:	05 2e       	mov	r0, r21
    14e8:	97 fb       	bst	r25, 7
    14ea:	1e f4       	brtc	.+6      	; 0x14f2 <__divmodsi4+0xc>
    14ec:	00 94       	com	r0
    14ee:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__negsi2>
    14f2:	57 fd       	sbrc	r21, 7
    14f4:	07 d0       	rcall	.+14     	; 0x1504 <__divmodsi4_neg2>
    14f6:	0e 94 51 0a 	call	0x14a2	; 0x14a2 <__udivmodsi4>
    14fa:	07 fc       	sbrc	r0, 7
    14fc:	03 d0       	rcall	.+6      	; 0x1504 <__divmodsi4_neg2>
    14fe:	4e f4       	brtc	.+18     	; 0x1512 <__divmodsi4_exit>
    1500:	0c 94 8a 0a 	jmp	0x1514	; 0x1514 <__negsi2>

00001504 <__divmodsi4_neg2>:
    1504:	50 95       	com	r21
    1506:	40 95       	com	r20
    1508:	30 95       	com	r19
    150a:	21 95       	neg	r18
    150c:	3f 4f       	sbci	r19, 0xFF	; 255
    150e:	4f 4f       	sbci	r20, 0xFF	; 255
    1510:	5f 4f       	sbci	r21, 0xFF	; 255

00001512 <__divmodsi4_exit>:
    1512:	08 95       	ret

00001514 <__negsi2>:
    1514:	90 95       	com	r25
    1516:	80 95       	com	r24
    1518:	70 95       	com	r23
    151a:	61 95       	neg	r22
    151c:	7f 4f       	sbci	r23, 0xFF	; 255
    151e:	8f 4f       	sbci	r24, 0xFF	; 255
    1520:	9f 4f       	sbci	r25, 0xFF	; 255
    1522:	08 95       	ret

00001524 <__tablejump2__>:
    1524:	ee 0f       	add	r30, r30
    1526:	ff 1f       	adc	r31, r31
    1528:	05 90       	lpm	r0, Z+
    152a:	f4 91       	lpm	r31, Z
    152c:	e0 2d       	mov	r30, r0
    152e:	09 94       	ijmp

00001530 <__prologue_saves__>:
    1530:	2f 92       	push	r2
    1532:	3f 92       	push	r3
    1534:	4f 92       	push	r4
    1536:	5f 92       	push	r5
    1538:	6f 92       	push	r6
    153a:	7f 92       	push	r7
    153c:	8f 92       	push	r8
    153e:	9f 92       	push	r9
    1540:	af 92       	push	r10
    1542:	bf 92       	push	r11
    1544:	cf 92       	push	r12
    1546:	df 92       	push	r13
    1548:	ef 92       	push	r14
    154a:	ff 92       	push	r15
    154c:	0f 93       	push	r16
    154e:	1f 93       	push	r17
    1550:	cf 93       	push	r28
    1552:	df 93       	push	r29
    1554:	cd b7       	in	r28, 0x3d	; 61
    1556:	de b7       	in	r29, 0x3e	; 62
    1558:	ca 1b       	sub	r28, r26
    155a:	db 0b       	sbc	r29, r27
    155c:	0f b6       	in	r0, 0x3f	; 63
    155e:	f8 94       	cli
    1560:	de bf       	out	0x3e, r29	; 62
    1562:	0f be       	out	0x3f, r0	; 63
    1564:	cd bf       	out	0x3d, r28	; 61
    1566:	09 94       	ijmp

00001568 <__epilogue_restores__>:
    1568:	2a 88       	ldd	r2, Y+18	; 0x12
    156a:	39 88       	ldd	r3, Y+17	; 0x11
    156c:	48 88       	ldd	r4, Y+16	; 0x10
    156e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1570:	6e 84       	ldd	r6, Y+14	; 0x0e
    1572:	7d 84       	ldd	r7, Y+13	; 0x0d
    1574:	8c 84       	ldd	r8, Y+12	; 0x0c
    1576:	9b 84       	ldd	r9, Y+11	; 0x0b
    1578:	aa 84       	ldd	r10, Y+10	; 0x0a
    157a:	b9 84       	ldd	r11, Y+9	; 0x09
    157c:	c8 84       	ldd	r12, Y+8	; 0x08
    157e:	df 80       	ldd	r13, Y+7	; 0x07
    1580:	ee 80       	ldd	r14, Y+6	; 0x06
    1582:	fd 80       	ldd	r15, Y+5	; 0x05
    1584:	0c 81       	ldd	r16, Y+4	; 0x04
    1586:	1b 81       	ldd	r17, Y+3	; 0x03
    1588:	aa 81       	ldd	r26, Y+2	; 0x02
    158a:	b9 81       	ldd	r27, Y+1	; 0x01
    158c:	ce 0f       	add	r28, r30
    158e:	d1 1d       	adc	r29, r1
    1590:	0f b6       	in	r0, 0x3f	; 63
    1592:	f8 94       	cli
    1594:	de bf       	out	0x3e, r29	; 62
    1596:	0f be       	out	0x3f, r0	; 63
    1598:	cd bf       	out	0x3d, r28	; 61
    159a:	ed 01       	movw	r28, r26
    159c:	08 95       	ret

0000159e <__ftoa_engine>:
    159e:	28 30       	cpi	r18, 0x08	; 8
    15a0:	08 f0       	brcs	.+2      	; 0x15a4 <__ftoa_engine+0x6>
    15a2:	27 e0       	ldi	r18, 0x07	; 7
    15a4:	33 27       	eor	r19, r19
    15a6:	da 01       	movw	r26, r20
    15a8:	99 0f       	add	r25, r25
    15aa:	31 1d       	adc	r19, r1
    15ac:	87 fd       	sbrc	r24, 7
    15ae:	91 60       	ori	r25, 0x01	; 1
    15b0:	00 96       	adiw	r24, 0x00	; 0
    15b2:	61 05       	cpc	r22, r1
    15b4:	71 05       	cpc	r23, r1
    15b6:	39 f4       	brne	.+14     	; 0x15c6 <__ftoa_engine+0x28>
    15b8:	32 60       	ori	r19, 0x02	; 2
    15ba:	2e 5f       	subi	r18, 0xFE	; 254
    15bc:	3d 93       	st	X+, r19
    15be:	30 e3       	ldi	r19, 0x30	; 48
    15c0:	2a 95       	dec	r18
    15c2:	e1 f7       	brne	.-8      	; 0x15bc <__ftoa_engine+0x1e>
    15c4:	08 95       	ret
    15c6:	9f 3f       	cpi	r25, 0xFF	; 255
    15c8:	30 f0       	brcs	.+12     	; 0x15d6 <__ftoa_engine+0x38>
    15ca:	80 38       	cpi	r24, 0x80	; 128
    15cc:	71 05       	cpc	r23, r1
    15ce:	61 05       	cpc	r22, r1
    15d0:	09 f0       	breq	.+2      	; 0x15d4 <__ftoa_engine+0x36>
    15d2:	3c 5f       	subi	r19, 0xFC	; 252
    15d4:	3c 5f       	subi	r19, 0xFC	; 252
    15d6:	3d 93       	st	X+, r19
    15d8:	91 30       	cpi	r25, 0x01	; 1
    15da:	08 f0       	brcs	.+2      	; 0x15de <__ftoa_engine+0x40>
    15dc:	80 68       	ori	r24, 0x80	; 128
    15de:	91 1d       	adc	r25, r1
    15e0:	df 93       	push	r29
    15e2:	cf 93       	push	r28
    15e4:	1f 93       	push	r17
    15e6:	0f 93       	push	r16
    15e8:	ff 92       	push	r15
    15ea:	ef 92       	push	r14
    15ec:	19 2f       	mov	r17, r25
    15ee:	98 7f       	andi	r25, 0xF8	; 248
    15f0:	96 95       	lsr	r25
    15f2:	e9 2f       	mov	r30, r25
    15f4:	96 95       	lsr	r25
    15f6:	96 95       	lsr	r25
    15f8:	e9 0f       	add	r30, r25
    15fa:	ff 27       	eor	r31, r31
    15fc:	e2 54       	subi	r30, 0x42	; 66
    15fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1600:	99 27       	eor	r25, r25
    1602:	33 27       	eor	r19, r19
    1604:	ee 24       	eor	r14, r14
    1606:	ff 24       	eor	r15, r15
    1608:	a7 01       	movw	r20, r14
    160a:	e7 01       	movw	r28, r14
    160c:	05 90       	lpm	r0, Z+
    160e:	08 94       	sec
    1610:	07 94       	ror	r0
    1612:	28 f4       	brcc	.+10     	; 0x161e <__ftoa_engine+0x80>
    1614:	36 0f       	add	r19, r22
    1616:	e7 1e       	adc	r14, r23
    1618:	f8 1e       	adc	r15, r24
    161a:	49 1f       	adc	r20, r25
    161c:	51 1d       	adc	r21, r1
    161e:	66 0f       	add	r22, r22
    1620:	77 1f       	adc	r23, r23
    1622:	88 1f       	adc	r24, r24
    1624:	99 1f       	adc	r25, r25
    1626:	06 94       	lsr	r0
    1628:	a1 f7       	brne	.-24     	; 0x1612 <__ftoa_engine+0x74>
    162a:	05 90       	lpm	r0, Z+
    162c:	07 94       	ror	r0
    162e:	28 f4       	brcc	.+10     	; 0x163a <__ftoa_engine+0x9c>
    1630:	e7 0e       	add	r14, r23
    1632:	f8 1e       	adc	r15, r24
    1634:	49 1f       	adc	r20, r25
    1636:	56 1f       	adc	r21, r22
    1638:	c1 1d       	adc	r28, r1
    163a:	77 0f       	add	r23, r23
    163c:	88 1f       	adc	r24, r24
    163e:	99 1f       	adc	r25, r25
    1640:	66 1f       	adc	r22, r22
    1642:	06 94       	lsr	r0
    1644:	a1 f7       	brne	.-24     	; 0x162e <__ftoa_engine+0x90>
    1646:	05 90       	lpm	r0, Z+
    1648:	07 94       	ror	r0
    164a:	28 f4       	brcc	.+10     	; 0x1656 <__ftoa_engine+0xb8>
    164c:	f8 0e       	add	r15, r24
    164e:	49 1f       	adc	r20, r25
    1650:	56 1f       	adc	r21, r22
    1652:	c7 1f       	adc	r28, r23
    1654:	d1 1d       	adc	r29, r1
    1656:	88 0f       	add	r24, r24
    1658:	99 1f       	adc	r25, r25
    165a:	66 1f       	adc	r22, r22
    165c:	77 1f       	adc	r23, r23
    165e:	06 94       	lsr	r0
    1660:	a1 f7       	brne	.-24     	; 0x164a <__ftoa_engine+0xac>
    1662:	05 90       	lpm	r0, Z+
    1664:	07 94       	ror	r0
    1666:	20 f4       	brcc	.+8      	; 0x1670 <__ftoa_engine+0xd2>
    1668:	49 0f       	add	r20, r25
    166a:	56 1f       	adc	r21, r22
    166c:	c7 1f       	adc	r28, r23
    166e:	d8 1f       	adc	r29, r24
    1670:	99 0f       	add	r25, r25
    1672:	66 1f       	adc	r22, r22
    1674:	77 1f       	adc	r23, r23
    1676:	88 1f       	adc	r24, r24
    1678:	06 94       	lsr	r0
    167a:	a9 f7       	brne	.-22     	; 0x1666 <__ftoa_engine+0xc8>
    167c:	84 91       	lpm	r24, Z
    167e:	10 95       	com	r17
    1680:	17 70       	andi	r17, 0x07	; 7
    1682:	41 f0       	breq	.+16     	; 0x1694 <__ftoa_engine+0xf6>
    1684:	d6 95       	lsr	r29
    1686:	c7 95       	ror	r28
    1688:	57 95       	ror	r21
    168a:	47 95       	ror	r20
    168c:	f7 94       	ror	r15
    168e:	e7 94       	ror	r14
    1690:	1a 95       	dec	r17
    1692:	c1 f7       	brne	.-16     	; 0x1684 <__ftoa_engine+0xe6>
    1694:	e4 e6       	ldi	r30, 0x64	; 100
    1696:	f0 e0       	ldi	r31, 0x00	; 0
    1698:	68 94       	set
    169a:	15 90       	lpm	r1, Z+
    169c:	15 91       	lpm	r17, Z+
    169e:	35 91       	lpm	r19, Z+
    16a0:	65 91       	lpm	r22, Z+
    16a2:	95 91       	lpm	r25, Z+
    16a4:	05 90       	lpm	r0, Z+
    16a6:	7f e2       	ldi	r23, 0x2F	; 47
    16a8:	73 95       	inc	r23
    16aa:	e1 18       	sub	r14, r1
    16ac:	f1 0a       	sbc	r15, r17
    16ae:	43 0b       	sbc	r20, r19
    16b0:	56 0b       	sbc	r21, r22
    16b2:	c9 0b       	sbc	r28, r25
    16b4:	d0 09       	sbc	r29, r0
    16b6:	c0 f7       	brcc	.-16     	; 0x16a8 <__ftoa_engine+0x10a>
    16b8:	e1 0c       	add	r14, r1
    16ba:	f1 1e       	adc	r15, r17
    16bc:	43 1f       	adc	r20, r19
    16be:	56 1f       	adc	r21, r22
    16c0:	c9 1f       	adc	r28, r25
    16c2:	d0 1d       	adc	r29, r0
    16c4:	7e f4       	brtc	.+30     	; 0x16e4 <__ftoa_engine+0x146>
    16c6:	70 33       	cpi	r23, 0x30	; 48
    16c8:	11 f4       	brne	.+4      	; 0x16ce <__ftoa_engine+0x130>
    16ca:	8a 95       	dec	r24
    16cc:	e6 cf       	rjmp	.-52     	; 0x169a <__ftoa_engine+0xfc>
    16ce:	e8 94       	clt
    16d0:	01 50       	subi	r16, 0x01	; 1
    16d2:	30 f0       	brcs	.+12     	; 0x16e0 <__ftoa_engine+0x142>
    16d4:	08 0f       	add	r16, r24
    16d6:	0a f4       	brpl	.+2      	; 0x16da <__ftoa_engine+0x13c>
    16d8:	00 27       	eor	r16, r16
    16da:	02 17       	cp	r16, r18
    16dc:	08 f4       	brcc	.+2      	; 0x16e0 <__ftoa_engine+0x142>
    16de:	20 2f       	mov	r18, r16
    16e0:	23 95       	inc	r18
    16e2:	02 2f       	mov	r16, r18
    16e4:	7a 33       	cpi	r23, 0x3A	; 58
    16e6:	28 f0       	brcs	.+10     	; 0x16f2 <__ftoa_engine+0x154>
    16e8:	79 e3       	ldi	r23, 0x39	; 57
    16ea:	7d 93       	st	X+, r23
    16ec:	2a 95       	dec	r18
    16ee:	e9 f7       	brne	.-6      	; 0x16ea <__ftoa_engine+0x14c>
    16f0:	10 c0       	rjmp	.+32     	; 0x1712 <__ftoa_engine+0x174>
    16f2:	7d 93       	st	X+, r23
    16f4:	2a 95       	dec	r18
    16f6:	89 f6       	brne	.-94     	; 0x169a <__ftoa_engine+0xfc>
    16f8:	06 94       	lsr	r0
    16fa:	97 95       	ror	r25
    16fc:	67 95       	ror	r22
    16fe:	37 95       	ror	r19
    1700:	17 95       	ror	r17
    1702:	17 94       	ror	r1
    1704:	e1 18       	sub	r14, r1
    1706:	f1 0a       	sbc	r15, r17
    1708:	43 0b       	sbc	r20, r19
    170a:	56 0b       	sbc	r21, r22
    170c:	c9 0b       	sbc	r28, r25
    170e:	d0 09       	sbc	r29, r0
    1710:	98 f0       	brcs	.+38     	; 0x1738 <__ftoa_engine+0x19a>
    1712:	23 95       	inc	r18
    1714:	7e 91       	ld	r23, -X
    1716:	73 95       	inc	r23
    1718:	7a 33       	cpi	r23, 0x3A	; 58
    171a:	08 f0       	brcs	.+2      	; 0x171e <__ftoa_engine+0x180>
    171c:	70 e3       	ldi	r23, 0x30	; 48
    171e:	7c 93       	st	X, r23
    1720:	20 13       	cpse	r18, r16
    1722:	b8 f7       	brcc	.-18     	; 0x1712 <__ftoa_engine+0x174>
    1724:	7e 91       	ld	r23, -X
    1726:	70 61       	ori	r23, 0x10	; 16
    1728:	7d 93       	st	X+, r23
    172a:	30 f0       	brcs	.+12     	; 0x1738 <__ftoa_engine+0x19a>
    172c:	83 95       	inc	r24
    172e:	71 e3       	ldi	r23, 0x31	; 49
    1730:	7d 93       	st	X+, r23
    1732:	70 e3       	ldi	r23, 0x30	; 48
    1734:	2a 95       	dec	r18
    1736:	e1 f7       	brne	.-8      	; 0x1730 <__ftoa_engine+0x192>
    1738:	11 24       	eor	r1, r1
    173a:	ef 90       	pop	r14
    173c:	ff 90       	pop	r15
    173e:	0f 91       	pop	r16
    1740:	1f 91       	pop	r17
    1742:	cf 91       	pop	r28
    1744:	df 91       	pop	r29
    1746:	99 27       	eor	r25, r25
    1748:	87 fd       	sbrc	r24, 7
    174a:	90 95       	com	r25
    174c:	08 95       	ret

0000174e <strnlen_P>:
    174e:	fc 01       	movw	r30, r24
    1750:	05 90       	lpm	r0, Z+
    1752:	61 50       	subi	r22, 0x01	; 1
    1754:	70 40       	sbci	r23, 0x00	; 0
    1756:	01 10       	cpse	r0, r1
    1758:	d8 f7       	brcc	.-10     	; 0x1750 <strnlen_P+0x2>
    175a:	80 95       	com	r24
    175c:	90 95       	com	r25
    175e:	8e 0f       	add	r24, r30
    1760:	9f 1f       	adc	r25, r31
    1762:	08 95       	ret

00001764 <strnlen>:
    1764:	fc 01       	movw	r30, r24
    1766:	61 50       	subi	r22, 0x01	; 1
    1768:	70 40       	sbci	r23, 0x00	; 0
    176a:	01 90       	ld	r0, Z+
    176c:	01 10       	cpse	r0, r1
    176e:	d8 f7       	brcc	.-10     	; 0x1766 <strnlen+0x2>
    1770:	80 95       	com	r24
    1772:	90 95       	com	r25
    1774:	8e 0f       	add	r24, r30
    1776:	9f 1f       	adc	r25, r31
    1778:	08 95       	ret

0000177a <fputc>:
    177a:	0f 93       	push	r16
    177c:	1f 93       	push	r17
    177e:	cf 93       	push	r28
    1780:	df 93       	push	r29
    1782:	18 2f       	mov	r17, r24
    1784:	09 2f       	mov	r16, r25
    1786:	eb 01       	movw	r28, r22
    1788:	8b 81       	ldd	r24, Y+3	; 0x03
    178a:	81 fd       	sbrc	r24, 1
    178c:	09 c0       	rjmp	.+18     	; 0x17a0 <fputc+0x26>
    178e:	1f ef       	ldi	r17, 0xFF	; 255
    1790:	0f ef       	ldi	r16, 0xFF	; 255
    1792:	81 2f       	mov	r24, r17
    1794:	90 2f       	mov	r25, r16
    1796:	df 91       	pop	r29
    1798:	cf 91       	pop	r28
    179a:	1f 91       	pop	r17
    179c:	0f 91       	pop	r16
    179e:	08 95       	ret
    17a0:	82 ff       	sbrs	r24, 2
    17a2:	14 c0       	rjmp	.+40     	; 0x17cc <fputc+0x52>
    17a4:	2e 81       	ldd	r18, Y+6	; 0x06
    17a6:	3f 81       	ldd	r19, Y+7	; 0x07
    17a8:	8c 81       	ldd	r24, Y+4	; 0x04
    17aa:	9d 81       	ldd	r25, Y+5	; 0x05
    17ac:	28 17       	cp	r18, r24
    17ae:	39 07       	cpc	r19, r25
    17b0:	3c f4       	brge	.+14     	; 0x17c0 <fputc+0x46>
    17b2:	e8 81       	ld	r30, Y
    17b4:	f9 81       	ldd	r31, Y+1	; 0x01
    17b6:	cf 01       	movw	r24, r30
    17b8:	01 96       	adiw	r24, 0x01	; 1
    17ba:	99 83       	std	Y+1, r25	; 0x01
    17bc:	88 83       	st	Y, r24
    17be:	10 83       	st	Z, r17
    17c0:	8e 81       	ldd	r24, Y+6	; 0x06
    17c2:	9f 81       	ldd	r25, Y+7	; 0x07
    17c4:	01 96       	adiw	r24, 0x01	; 1
    17c6:	9f 83       	std	Y+7, r25	; 0x07
    17c8:	8e 83       	std	Y+6, r24	; 0x06
    17ca:	e3 cf       	rjmp	.-58     	; 0x1792 <fputc+0x18>
    17cc:	e8 85       	ldd	r30, Y+8	; 0x08
    17ce:	f9 85       	ldd	r31, Y+9	; 0x09
    17d0:	81 2f       	mov	r24, r17
    17d2:	09 95       	icall
    17d4:	89 2b       	or	r24, r25
    17d6:	a1 f3       	breq	.-24     	; 0x17c0 <fputc+0x46>
    17d8:	da cf       	rjmp	.-76     	; 0x178e <fputc+0x14>

000017da <__ultoa_invert>:
    17da:	fa 01       	movw	r30, r20
    17dc:	aa 27       	eor	r26, r26
    17de:	28 30       	cpi	r18, 0x08	; 8
    17e0:	51 f1       	breq	.+84     	; 0x1836 <__ultoa_invert+0x5c>
    17e2:	20 31       	cpi	r18, 0x10	; 16
    17e4:	81 f1       	breq	.+96     	; 0x1846 <__ultoa_invert+0x6c>
    17e6:	e8 94       	clt
    17e8:	6f 93       	push	r22
    17ea:	6e 7f       	andi	r22, 0xFE	; 254
    17ec:	6e 5f       	subi	r22, 0xFE	; 254
    17ee:	7f 4f       	sbci	r23, 0xFF	; 255
    17f0:	8f 4f       	sbci	r24, 0xFF	; 255
    17f2:	9f 4f       	sbci	r25, 0xFF	; 255
    17f4:	af 4f       	sbci	r26, 0xFF	; 255
    17f6:	b1 e0       	ldi	r27, 0x01	; 1
    17f8:	3e d0       	rcall	.+124    	; 0x1876 <__ultoa_invert+0x9c>
    17fa:	b4 e0       	ldi	r27, 0x04	; 4
    17fc:	3c d0       	rcall	.+120    	; 0x1876 <__ultoa_invert+0x9c>
    17fe:	67 0f       	add	r22, r23
    1800:	78 1f       	adc	r23, r24
    1802:	89 1f       	adc	r24, r25
    1804:	9a 1f       	adc	r25, r26
    1806:	a1 1d       	adc	r26, r1
    1808:	68 0f       	add	r22, r24
    180a:	79 1f       	adc	r23, r25
    180c:	8a 1f       	adc	r24, r26
    180e:	91 1d       	adc	r25, r1
    1810:	a1 1d       	adc	r26, r1
    1812:	6a 0f       	add	r22, r26
    1814:	71 1d       	adc	r23, r1
    1816:	81 1d       	adc	r24, r1
    1818:	91 1d       	adc	r25, r1
    181a:	a1 1d       	adc	r26, r1
    181c:	20 d0       	rcall	.+64     	; 0x185e <__ultoa_invert+0x84>
    181e:	09 f4       	brne	.+2      	; 0x1822 <__ultoa_invert+0x48>
    1820:	68 94       	set
    1822:	3f 91       	pop	r19
    1824:	2a e0       	ldi	r18, 0x0A	; 10
    1826:	26 9f       	mul	r18, r22
    1828:	11 24       	eor	r1, r1
    182a:	30 19       	sub	r19, r0
    182c:	30 5d       	subi	r19, 0xD0	; 208
    182e:	31 93       	st	Z+, r19
    1830:	de f6       	brtc	.-74     	; 0x17e8 <__ultoa_invert+0xe>
    1832:	cf 01       	movw	r24, r30
    1834:	08 95       	ret
    1836:	46 2f       	mov	r20, r22
    1838:	47 70       	andi	r20, 0x07	; 7
    183a:	40 5d       	subi	r20, 0xD0	; 208
    183c:	41 93       	st	Z+, r20
    183e:	b3 e0       	ldi	r27, 0x03	; 3
    1840:	0f d0       	rcall	.+30     	; 0x1860 <__ultoa_invert+0x86>
    1842:	c9 f7       	brne	.-14     	; 0x1836 <__ultoa_invert+0x5c>
    1844:	f6 cf       	rjmp	.-20     	; 0x1832 <__ultoa_invert+0x58>
    1846:	46 2f       	mov	r20, r22
    1848:	4f 70       	andi	r20, 0x0F	; 15
    184a:	40 5d       	subi	r20, 0xD0	; 208
    184c:	4a 33       	cpi	r20, 0x3A	; 58
    184e:	18 f0       	brcs	.+6      	; 0x1856 <__ultoa_invert+0x7c>
    1850:	49 5d       	subi	r20, 0xD9	; 217
    1852:	31 fd       	sbrc	r19, 1
    1854:	40 52       	subi	r20, 0x20	; 32
    1856:	41 93       	st	Z+, r20
    1858:	02 d0       	rcall	.+4      	; 0x185e <__ultoa_invert+0x84>
    185a:	a9 f7       	brne	.-22     	; 0x1846 <__ultoa_invert+0x6c>
    185c:	ea cf       	rjmp	.-44     	; 0x1832 <__ultoa_invert+0x58>
    185e:	b4 e0       	ldi	r27, 0x04	; 4
    1860:	a6 95       	lsr	r26
    1862:	97 95       	ror	r25
    1864:	87 95       	ror	r24
    1866:	77 95       	ror	r23
    1868:	67 95       	ror	r22
    186a:	ba 95       	dec	r27
    186c:	c9 f7       	brne	.-14     	; 0x1860 <__ultoa_invert+0x86>
    186e:	00 97       	sbiw	r24, 0x00	; 0
    1870:	61 05       	cpc	r22, r1
    1872:	71 05       	cpc	r23, r1
    1874:	08 95       	ret
    1876:	9b 01       	movw	r18, r22
    1878:	ac 01       	movw	r20, r24
    187a:	0a 2e       	mov	r0, r26
    187c:	06 94       	lsr	r0
    187e:	57 95       	ror	r21
    1880:	47 95       	ror	r20
    1882:	37 95       	ror	r19
    1884:	27 95       	ror	r18
    1886:	ba 95       	dec	r27
    1888:	c9 f7       	brne	.-14     	; 0x187c <__ultoa_invert+0xa2>
    188a:	62 0f       	add	r22, r18
    188c:	73 1f       	adc	r23, r19
    188e:	84 1f       	adc	r24, r20
    1890:	95 1f       	adc	r25, r21
    1892:	a0 1d       	adc	r26, r0
    1894:	08 95       	ret

00001896 <__do_global_dtors>:
    1896:	10 e0       	ldi	r17, 0x00	; 0
    1898:	c0 eb       	ldi	r28, 0xB0	; 176
    189a:	d0 e0       	ldi	r29, 0x00	; 0
    189c:	04 c0       	rjmp	.+8      	; 0x18a6 <__do_global_dtors+0x10>
    189e:	fe 01       	movw	r30, r28
    18a0:	0e 94 92 0a 	call	0x1524	; 0x1524 <__tablejump2__>
    18a4:	21 96       	adiw	r28, 0x01	; 1
    18a6:	c1 3b       	cpi	r28, 0xB1	; 177
    18a8:	d1 07       	cpc	r29, r17
    18aa:	c9 f7       	brne	.-14     	; 0x189e <__do_global_dtors+0x8>
    18ac:	f8 94       	cli

000018ae <__stop_program>:
    18ae:	ff cf       	rjmp	.-2      	; 0x18ae <__stop_program>
