
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000092  00800100  000016e0  00001774  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800192  00800192  00001806  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00001806  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001818  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00001854  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001801  00000000  00000000  0000190c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000abd  00000000  00000000  0000310d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007b6  00000000  00000000  00003bca  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000424  00000000  00000000  00004380  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006bb  00000000  00000000  000047a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a64  00000000  00000000  00004e5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000058c3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b9 00 	jmp	0x172	; 0x172 <__dtors_end>
       4:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
       8:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
       c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__vector_3>
      10:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      14:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      18:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      1c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      20:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      24:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      28:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      2c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      30:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      34:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      38:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      3c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      40:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      44:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      48:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      4c:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <__vector_19>
      50:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      54:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      58:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
      5c:	49 02       	muls	r20, r25
      5e:	4b 02       	muls	r20, r27
      60:	52 02       	muls	r21, r18
      62:	54 02       	muls	r21, r20
      64:	60 02       	muls	r22, r16
      66:	71 02       	muls	r23, r17
      68:	7d 02       	muls	r23, r29
      6a:	84 02       	muls	r24, r20

0000006c <__trampolines_end>:
      6c:	6e 61       	ori	r22, 0x1E	; 30
      6e:	6e 00       	.word	0x006e	; ????

00000070 <__c.2332>:
      70:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      80:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      90:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      a0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      b0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      c0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      d0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      e0:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      f0:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     100:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     110:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     120:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     130:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     140:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     150:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     160:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016e <__ctors_start>:
     16e:	5b 04       	cpc	r5, r11

00000170 <__ctors_end>:
     170:	6c 04       	cpc	r6, r12

00000172 <__dtors_end>:
     172:	11 24       	eor	r1, r1
     174:	1f be       	out	0x3f, r1	; 63
     176:	cf ef       	ldi	r28, 0xFF	; 255
     178:	d4 e0       	ldi	r29, 0x04	; 4
     17a:	de bf       	out	0x3e, r29	; 62
     17c:	cd bf       	out	0x3d, r28	; 61

0000017e <__do_copy_data>:
     17e:	11 e0       	ldi	r17, 0x01	; 1
     180:	a0 e0       	ldi	r26, 0x00	; 0
     182:	b1 e0       	ldi	r27, 0x01	; 1
     184:	e0 ee       	ldi	r30, 0xE0	; 224
     186:	f6 e1       	ldi	r31, 0x16	; 22
     188:	02 c0       	rjmp	.+4      	; 0x18e <__do_copy_data+0x10>
     18a:	05 90       	lpm	r0, Z+
     18c:	0d 92       	st	X+, r0
     18e:	a2 39       	cpi	r26, 0x92	; 146
     190:	b1 07       	cpc	r27, r17
     192:	d9 f7       	brne	.-10     	; 0x18a <__do_copy_data+0xc>

00000194 <__do_clear_bss>:
     194:	21 e0       	ldi	r18, 0x01	; 1
     196:	a2 e9       	ldi	r26, 0x92	; 146
     198:	b1 e0       	ldi	r27, 0x01	; 1
     19a:	01 c0       	rjmp	.+2      	; 0x19e <.do_clear_bss_start>

0000019c <.do_clear_bss_loop>:
     19c:	1d 92       	st	X+, r1

0000019e <.do_clear_bss_start>:
     19e:	a7 39       	cpi	r26, 0x97	; 151
     1a0:	b2 07       	cpc	r27, r18
     1a2:	e1 f7       	brne	.-8      	; 0x19c <.do_clear_bss_loop>

000001a4 <__do_global_ctors>:
     1a4:	10 e0       	ldi	r17, 0x00	; 0
     1a6:	c8 eb       	ldi	r28, 0xB8	; 184
     1a8:	d0 e0       	ldi	r29, 0x00	; 0
     1aa:	04 c0       	rjmp	.+8      	; 0x1b4 <__do_global_ctors+0x10>
     1ac:	21 97       	sbiw	r28, 0x01	; 1
     1ae:	fe 01       	movw	r30, r28
     1b0:	0e 94 47 09 	call	0x128e	; 0x128e <__tablejump2__>
     1b4:	c7 3b       	cpi	r28, 0xB7	; 183
     1b6:	d1 07       	cpc	r29, r17
     1b8:	c9 f7       	brne	.-14     	; 0x1ac <__do_global_ctors+0x8>
     1ba:	0e 94 9d 03 	call	0x73a	; 0x73a <main>
     1be:	0c 94 63 0b 	jmp	0x16c6	; 0x16c6 <__do_global_dtors>

000001c2 <__bad_interrupt>:
     1c2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c6 <__vector_3>:
	return 0;
}



ISR(PCINT1_vect){
     1c6:	1f 92       	push	r1
     1c8:	0f 92       	push	r0
     1ca:	0f b6       	in	r0, 0x3f	; 63
     1cc:	0f 92       	push	r0
     1ce:	11 24       	eor	r1, r1
     1d0:	8f 93       	push	r24
	if(BTN0){
     1d2:	1e 9b       	sbis	0x03, 6	; 3
     1d4:	09 c0       	rjmp	.+18     	; 0x1e8 <__vector_3+0x22>
		if(state==1){
     1d6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1da:	81 30       	cpi	r24, 0x01	; 1
     1dc:	21 f4       	brne	.+8      	; 0x1e6 <__vector_3+0x20>
			LED0_OFF;
     1de:	5e 98       	cbi	0x0b, 6	; 11
			state=0;
     1e0:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
     1e4:	01 c0       	rjmp	.+2      	; 0x1e8 <__vector_3+0x22>
		}else{
			LED0_ON;
     1e6:	5e 9a       	sbi	0x0b, 6	; 11
		}
	}
}
     1e8:	8f 91       	pop	r24
     1ea:	0f 90       	pop	r0
     1ec:	0f be       	out	0x3f, r0	; 63
     1ee:	0f 90       	pop	r0
     1f0:	1f 90       	pop	r1
     1f2:	18 95       	reti

000001f4 <__vector_19>:

ISR(ADC_vect){
     1f4:	1f 92       	push	r1
     1f6:	0f 92       	push	r0
     1f8:	0f b6       	in	r0, 0x3f	; 63
     1fa:	0f 92       	push	r0
     1fc:	11 24       	eor	r1, r1
     1fe:	2f 93       	push	r18
     200:	3f 93       	push	r19
     202:	4f 93       	push	r20
     204:	5f 93       	push	r21
     206:	6f 93       	push	r22
     208:	7f 93       	push	r23
     20a:	8f 93       	push	r24
     20c:	9f 93       	push	r25
     20e:	af 93       	push	r26
     210:	bf 93       	push	r27
     212:	ef 93       	push	r30
     214:	ff 93       	push	r31
	uint16_t ADC_val=ADCL;
     216:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7fc078>
	ADC_val+=ADCH<<8;
     21a:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7fc079>
	
	//CNT=1.1*1024/Vref
	//Vref=1.1*1024/CNT
	cnt=(1024.0*1100.0)/ADC_val;
     21e:	70 e0       	ldi	r23, 0x00	; 0
     220:	76 2f       	mov	r23, r22
     222:	66 27       	eor	r22, r22
     224:	68 0f       	add	r22, r24
     226:	71 1d       	adc	r23, r1
     228:	80 e0       	ldi	r24, 0x00	; 0
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	0e 94 9a 08 	call	0x1134	; 0x1134 <__floatunsisf>
     230:	9b 01       	movw	r18, r22
     232:	ac 01       	movw	r20, r24
     234:	60 e0       	ldi	r22, 0x00	; 0
     236:	70 e8       	ldi	r23, 0x80	; 128
     238:	89 e8       	ldi	r24, 0x89	; 137
     23a:	99 e4       	ldi	r25, 0x49	; 73
     23c:	0e 94 f9 07 	call	0xff2	; 0xff2 <__divsf3>
     240:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <__fixunssfsi>
     244:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <cnt>
     248:	70 93 02 01 	sts	0x0102, r23	; 0x800102 <cnt+0x1>
     24c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <cnt+0x2>
     250:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <cnt+0x3>
	myLCD.setNb(cnt);
     254:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <cnt>
     258:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <cnt+0x1>
     25c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <cnt+0x2>
     260:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <cnt+0x3>
     264:	0e 94 cf 02 	call	0x59e	; 0x59e <_ZN3LCD5setNbEl>
}
     268:	ff 91       	pop	r31
     26a:	ef 91       	pop	r30
     26c:	bf 91       	pop	r27
     26e:	af 91       	pop	r26
     270:	9f 91       	pop	r25
     272:	8f 91       	pop	r24
     274:	7f 91       	pop	r23
     276:	6f 91       	pop	r22
     278:	5f 91       	pop	r21
     27a:	4f 91       	pop	r20
     27c:	3f 91       	pop	r19
     27e:	2f 91       	pop	r18
     280:	0f 90       	pop	r0
     282:	0f be       	out	0x3f, r0	; 63
     284:	0f 90       	pop	r0
     286:	1f 90       	pop	r1
     288:	18 95       	reti

0000028a <USART_RX_vect>:

ISR(USART_RX_vect){
     28a:	1f 92       	push	r1
     28c:	0f 92       	push	r0
     28e:	0f b6       	in	r0, 0x3f	; 63
     290:	0f 92       	push	r0
     292:	11 24       	eor	r1, r1
     294:	2f 93       	push	r18
     296:	3f 93       	push	r19
     298:	4f 93       	push	r20
     29a:	5f 93       	push	r21
     29c:	6f 93       	push	r22
     29e:	7f 93       	push	r23
     2a0:	8f 93       	push	r24
     2a2:	9f 93       	push	r25
     2a4:	af 93       	push	r26
     2a6:	bf 93       	push	r27
     2a8:	ef 93       	push	r30
     2aa:	ff 93       	push	r31
	uint8_t data=uart.getChar();
     2ac:	86 e9       	ldi	r24, 0x96	; 150
     2ae:	91 e0       	ldi	r25, 0x01	; 1
     2b0:	0e 94 96 03 	call	0x72c	; 0x72c <_ZN4UART7getCharEv>
}
     2b4:	ff 91       	pop	r31
     2b6:	ef 91       	pop	r30
     2b8:	bf 91       	pop	r27
     2ba:	af 91       	pop	r26
     2bc:	9f 91       	pop	r25
     2be:	8f 91       	pop	r24
     2c0:	7f 91       	pop	r23
     2c2:	6f 91       	pop	r22
     2c4:	5f 91       	pop	r21
     2c6:	4f 91       	pop	r20
     2c8:	3f 91       	pop	r19
     2ca:	2f 91       	pop	r18
     2cc:	0f 90       	pop	r0
     2ce:	0f be       	out	0x3f, r0	; 63
     2d0:	0f 90       	pop	r0
     2d2:	1f 90       	pop	r1
     2d4:	18 95       	reti

000002d6 <_ZN3LCDC1Eb>:
		{{4,4,4,5,5,5,5},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}},
		{{2,2,2,3,3,3,3},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}},
		{{0,0,0,1,1,1,1},{&LCDDR0,&LCDDR5,&LCDDR10,&LCDDR15,&LCDDR10,&LCDDR0,&LCDDR5}}};

LCD::LCD(bool lowP){
	DDRB |= (1 << PB0);
     2d6:	20 9a       	sbi	0x04, 0	; 4
	PORTB |= (1<<PB0);
     2d8:	28 9a       	sbi	0x05, 0	; 5
	LCDCRB|=(1<<LCDMUX1)|(1<<LCDMUX0);
     2da:	80 91 e5 00 	lds	r24, 0x00E5	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
     2de:	80 63       	ori	r24, 0x30	; 48
     2e0:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	
	if(lowP){
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD1)|(1<<LCDCD0); // prescaler 4096, division factor 32 & K=8 for duty 1/4
     2e4:	80 91 e6 00 	lds	r24, 0x00E6	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
LCD::LCD(bool lowP){
	DDRB |= (1 << PB0);
	PORTB |= (1<<PB0);
	LCDCRB|=(1<<LCDMUX1)|(1<<LCDMUX0);
	
	if(lowP){
     2e8:	66 23       	and	r22, r22
     2ea:	61 f0       	breq	.+24     	; 0x304 <_ZN3LCDC1Eb+0x2e>
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD1)|(1<<LCDCD0); // prescaler 4096, division factor 32 & K=8 for duty 1/4
     2ec:	87 67       	ori	r24, 0x77	; 119
     2ee:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCDCCR|=(1<<LCDDC0);// 2.6V 70µs
     2f2:	80 91 e7 00 	lds	r24, 0x00E7	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     2f6:	80 62       	ori	r24, 0x20	; 32
     2f8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
		LCDCRA|=(1<<LCDEN)|(1<<LCDAB);//LCDAB=low power waveform
     2fc:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     300:	80 6c       	ori	r24, 0xC0	; 192
     302:	0b c0       	rjmp	.+22     	; 0x31a <_ZN3LCDC1Eb+0x44>
	}else{
		LCDFRR|=(1<<LCDPS2)|(1<<LCDPS1)|(1<<LCDPS0)|(1<<LCDCD2)|(1<<LCDCD2)|(1<<LCDCD0); // prescaler 4096, division factor 8 & K=8 for duty 1/4
     304:	85 67       	ori	r24, 0x75	; 117
     306:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
		LCDCCR|=(1<<LCDCC1)|(1<<LCDCC2)|(1<<LCDDC1);//2.7V 1150µs
     30a:	80 91 e7 00 	lds	r24, 0x00E7	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
     30e:	86 64       	ori	r24, 0x46	; 70
     310:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
		LCDCRA|=(1<<LCDEN);
     314:	80 91 e4 00 	lds	r24, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     318:	80 68       	ori	r24, 0x80	; 128
     31a:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
     31e:	08 95       	ret

00000320 <_ZN3LCDD1Ev>:
	}
}

LCD::~LCD() {
	LCDCRA|=(1<<LCDBL);
     320:	e4 ee       	ldi	r30, 0xE4	; 228
     322:	f0 e0       	ldi	r31, 0x00	; 0
     324:	80 81       	ld	r24, Z
     326:	81 60       	ori	r24, 0x01	; 1
     328:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     32a:	2f ef       	ldi	r18, 0xFF	; 255
     32c:	84 e3       	ldi	r24, 0x34	; 52
     32e:	9c e0       	ldi	r25, 0x0C	; 12
     330:	21 50       	subi	r18, 0x01	; 1
     332:	80 40       	sbci	r24, 0x00	; 0
     334:	90 40       	sbci	r25, 0x00	; 0
     336:	e1 f7       	brne	.-8      	; 0x330 <_ZN3LCDD1Ev+0x10>
     338:	00 c0       	rjmp	.+0      	; 0x33a <_ZN3LCDD1Ev+0x1a>
     33a:	00 00       	nop
	_delay_ms(500);
	LCDCRA&=~(1<<LCDEN);
     33c:	80 81       	ld	r24, Z
     33e:	8f 77       	andi	r24, 0x7F	; 127
     340:	80 83       	st	Z, r24
     342:	08 95       	ret

00000344 <_ZN3LCD8setDigitEhh>:
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
     344:	cf 92       	push	r12
     346:	df 92       	push	r13
     348:	ef 92       	push	r14
     34a:	ff 92       	push	r15
     34c:	0f 93       	push	r16
     34e:	1f 93       	push	r17
     350:	cf 93       	push	r28
     352:	df 93       	push	r29
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
     354:	e6 2f       	mov	r30, r22
     356:	f0 e0       	ldi	r31, 0x00	; 0
     358:	ed 57       	subi	r30, 0x7D	; 125
     35a:	fe 4f       	sbci	r31, 0xFE	; 254
     35c:	40 81       	ld	r20, Z
     35e:	50 e0       	ldi	r21, 0x00	; 0
     360:	25 e1       	ldi	r18, 0x15	; 21
     362:	82 9f       	mul	r24, r18
     364:	c0 01       	movw	r24, r0
     366:	11 24       	eor	r1, r1
     368:	8b 5f       	subi	r24, 0xFB	; 251
     36a:	9e 4f       	sbci	r25, 0xFE	; 254
     36c:	fc 01       	movw	r30, r24
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	30 e0       	ldi	r19, 0x00	; 0
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     372:	c1 e0       	ldi	r28, 0x01	; 1
     374:	d0 e0       	ldi	r29, 0x00	; 0
     376:	6c 01       	movw	r12, r24
     378:	c2 0e       	add	r12, r18
     37a:	d3 1e       	adc	r13, r19
	LCDCRA&=~(1<<LCDEN);
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
     37c:	ba 01       	movw	r22, r20
     37e:	02 2e       	mov	r0, r18
     380:	02 c0       	rjmp	.+4      	; 0x386 <_ZN3LCD8setDigitEhh+0x42>
     382:	75 95       	asr	r23
     384:	67 95       	ror	r22
     386:	0a 94       	dec	r0
     388:	e2 f7       	brpl	.-8      	; 0x382 <_ZN3LCD8setDigitEhh+0x3e>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     38a:	07 81       	ldd	r16, Z+7	; 0x07
     38c:	10 85       	ldd	r17, Z+8	; 0x08
     38e:	d8 01       	movw	r26, r16
	LCDCRA&=~(1<<LCDEN);
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
		if(NbMap[nb] & (1<<j)){
     390:	60 ff       	sbrs	r22, 0
     392:	0b c0       	rjmp	.+22     	; 0x3aa <_ZN3LCD8setDigitEhh+0x66>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     394:	fc 90       	ld	r15, X
     396:	be 01       	movw	r22, r28
     398:	d6 01       	movw	r26, r12
     39a:	0c 90       	ld	r0, X
     39c:	02 c0       	rjmp	.+4      	; 0x3a2 <_ZN3LCD8setDigitEhh+0x5e>
     39e:	66 0f       	add	r22, r22
     3a0:	77 1f       	adc	r23, r23
     3a2:	0a 94       	dec	r0
     3a4:	e2 f7       	brpl	.-8      	; 0x39e <_ZN3LCD8setDigitEhh+0x5a>
     3a6:	6f 29       	or	r22, r15
     3a8:	0c c0       	rjmp	.+24     	; 0x3c2 <_ZN3LCD8setDigitEhh+0x7e>
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     3aa:	7c 91       	ld	r23, X
     3ac:	7e 01       	movw	r14, r28
     3ae:	d6 01       	movw	r26, r12
     3b0:	0c 90       	ld	r0, X
     3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <_ZN3LCD8setDigitEhh+0x74>
     3b4:	ee 0c       	add	r14, r14
     3b6:	ff 1c       	adc	r15, r15
     3b8:	0a 94       	dec	r0
     3ba:	e2 f7       	brpl	.-8      	; 0x3b4 <_ZN3LCD8setDigitEhh+0x70>
     3bc:	6e 2d       	mov	r22, r14
     3be:	60 95       	com	r22
     3c0:	67 23       	and	r22, r23
     3c2:	d8 01       	movw	r26, r16
     3c4:	6c 93       	st	X, r22
     3c6:	2f 5f       	subi	r18, 0xFF	; 255
     3c8:	3f 4f       	sbci	r19, 0xFF	; 255
     3ca:	32 96       	adiw	r30, 0x02	; 2
	_delay_ms(500);
	LCDCRA&=~(1<<LCDEN);
}

void LCD::setDigit(uint8_t dig, uint8_t nb) {
	for(uint8_t j=0;j<8;j++){
     3cc:	28 30       	cpi	r18, 0x08	; 8
     3ce:	31 05       	cpc	r19, r1
     3d0:	91 f6       	brne	.-92     	; 0x376 <_ZN3LCD8setDigitEhh+0x32>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
		}	
	}
}
     3d2:	df 91       	pop	r29
     3d4:	cf 91       	pop	r28
     3d6:	1f 91       	pop	r17
     3d8:	0f 91       	pop	r16
     3da:	ff 90       	pop	r15
     3dc:	ef 90       	pop	r14
     3de:	df 90       	pop	r13
     3e0:	cf 90       	pop	r12
     3e2:	08 95       	ret

000003e4 <_ZN3LCD8setDigitEhNS_6SymbolE>:

void LCD::setDigit(uint8_t dig, Symbol sy) {
     3e4:	cf 92       	push	r12
     3e6:	df 92       	push	r13
     3e8:	ef 92       	push	r14
     3ea:	ff 92       	push	r15
     3ec:	0f 93       	push	r16
     3ee:	1f 93       	push	r17
     3f0:	cf 93       	push	r28
     3f2:	df 93       	push	r29
     3f4:	25 e1       	ldi	r18, 0x15	; 21
     3f6:	82 9f       	mul	r24, r18
     3f8:	c0 01       	movw	r24, r0
     3fa:	11 24       	eor	r1, r1
     3fc:	8b 5f       	subi	r24, 0xFB	; 251
     3fe:	9e 4f       	sbci	r25, 0xFE	; 254
     400:	fc 01       	movw	r30, r24
     402:	20 e0       	ldi	r18, 0x00	; 0
     404:	30 e0       	ldi	r19, 0x00	; 0
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
     406:	70 e0       	ldi	r23, 0x00	; 0
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     408:	c1 e0       	ldi	r28, 0x01	; 1
     40a:	d0 e0       	ldi	r29, 0x00	; 0
     40c:	6c 01       	movw	r12, r24
     40e:	c2 0e       	add	r12, r18
     410:	d3 1e       	adc	r13, r19
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
     412:	ab 01       	movw	r20, r22
     414:	02 2e       	mov	r0, r18
     416:	02 c0       	rjmp	.+4      	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
     418:	55 95       	asr	r21
     41a:	47 95       	ror	r20
     41c:	0a 94       	dec	r0
     41e:	e2 f7       	brpl	.-8      	; 0x418 <__DATA_REGION_LENGTH__+0x18>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     420:	07 81       	ldd	r16, Z+7	; 0x07
     422:	10 85       	ldd	r17, Z+8	; 0x08
     424:	d8 01       	movw	r26, r16
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
		if(sy & (1<<j)){
     426:	40 ff       	sbrs	r20, 0
     428:	0b c0       	rjmp	.+22     	; 0x440 <__DATA_REGION_LENGTH__+0x40>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
     42a:	fc 90       	ld	r15, X
     42c:	ae 01       	movw	r20, r28
     42e:	d6 01       	movw	r26, r12
     430:	0c 90       	ld	r0, X
     432:	02 c0       	rjmp	.+4      	; 0x438 <__DATA_REGION_LENGTH__+0x38>
     434:	44 0f       	add	r20, r20
     436:	55 1f       	adc	r21, r21
     438:	0a 94       	dec	r0
     43a:	e2 f7       	brpl	.-8      	; 0x434 <__DATA_REGION_LENGTH__+0x34>
     43c:	4f 29       	or	r20, r15
     43e:	0c c0       	rjmp	.+24     	; 0x458 <__DATA_REGION_LENGTH__+0x58>
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
     440:	5c 91       	ld	r21, X
     442:	7e 01       	movw	r14, r28
     444:	d6 01       	movw	r26, r12
     446:	0c 90       	ld	r0, X
     448:	02 c0       	rjmp	.+4      	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
     44a:	ee 0c       	add	r14, r14
     44c:	ff 1c       	adc	r15, r15
     44e:	0a 94       	dec	r0
     450:	e2 f7       	brpl	.-8      	; 0x44a <__DATA_REGION_LENGTH__+0x4a>
     452:	4e 2d       	mov	r20, r14
     454:	40 95       	com	r20
     456:	45 23       	and	r20, r21
     458:	d8 01       	movw	r26, r16
     45a:	4c 93       	st	X, r20
     45c:	2f 5f       	subi	r18, 0xFF	; 255
     45e:	3f 4f       	sbci	r19, 0xFF	; 255
     460:	32 96       	adiw	r30, 0x02	; 2
		}	
	}
}

void LCD::setDigit(uint8_t dig, Symbol sy) {
	for(uint8_t j=0;j<8;j++){
     462:	28 30       	cpi	r18, 0x08	; 8
     464:	31 05       	cpc	r19, r1
     466:	91 f6       	brne	.-92     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
			*(digits[dig].dr[j]) |= (1<<digits[dig].s[j]);
		}else{
			*(digits[dig].dr[j]) &= ~(1<<digits[dig].s[j]);
		}
	}
}
     468:	df 91       	pop	r29
     46a:	cf 91       	pop	r28
     46c:	1f 91       	pop	r17
     46e:	0f 91       	pop	r16
     470:	ff 90       	pop	r15
     472:	ef 90       	pop	r14
     474:	df 90       	pop	r13
     476:	cf 90       	pop	r12
     478:	08 95       	ret

0000047a <_ZN3LCD10setBatteryENS_7BatteryE>:

void LCD::setBattery(Battery b) {
	switch(b){
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	88 30       	cpi	r24, 0x08	; 8
     47e:	91 05       	cpc	r25, r1
     480:	08 f0       	brcs	.+2      	; 0x484 <_ZN3LCD10setBatteryENS_7BatteryE+0xa>
     482:	54 c0       	rjmp	.+168    	; 0x52c <__stack+0x2d>
     484:	fc 01       	movw	r30, r24
     486:	e2 5d       	subi	r30, 0xD2	; 210
     488:	ff 4f       	sbci	r31, 0xFF	; 255
		LCDDR6 &=~(1<<4);
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
     48a:	80 91 ed 00 	lds	r24, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		}
	}
}

void LCD::setBattery(Battery b) {
	switch(b){
     48e:	0c 94 47 09 	jmp	0x128e	; 0x128e <__tablejump2__>
	case NONE:
		LCDDR1 &=~(1<<4);
     492:	8f 7e       	andi	r24, 0xEF	; 239
     494:	01 c0       	rjmp	.+2      	; 0x498 <_ZN3LCD10setBatteryENS_7BatteryE+0x1e>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case EMPTY:
		LCDDR1 |=(1<<4);
     496:	80 61       	ori	r24, 0x10	; 16
     498:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     49c:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     4a0:	8f 7e       	andi	r24, 0xEF	; 239
     4a2:	14 c0       	rjmp	.+40     	; 0x4cc <_ZN3LCD10setBatteryENS_7BatteryE+0x52>
		LCDDR11 &=~(1<<4);
		LCDDR16 &=~(1<<4);
		break;
	case FIRST:
		LCDDR1 &=~(1<<4);
     4a4:	8f 7e       	andi	r24, 0xEF	; 239
     4a6:	1e c0       	rjmp	.+60     	; 0x4e4 <_ZN3LCD10setBatteryENS_7BatteryE+0x6a>
		LCDDR6 &=~(1<<4);
		LCDDR11 &=~(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case SECOND:
		LCDDR1 &=~(1<<4);
     4a8:	8f 7e       	andi	r24, 0xEF	; 239
     4aa:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     4ae:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     4b2:	8f 7e       	andi	r24, 0xEF	; 239
     4b4:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 |=(1<<4);
     4b8:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     4bc:	80 61       	ori	r24, 0x10	; 16
     4be:	0b c0       	rjmp	.+22     	; 0x4d6 <_ZN3LCD10setBatteryENS_7BatteryE+0x5c>
		LCDDR16 &=~(1<<4);
		break;
	case THIRD:
		LCDDR1 &=~(1<<4);
     4c0:	8f 7e       	andi	r24, 0xEF	; 239
     4c2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 |=(1<<4);
     4c6:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     4ca:	80 61       	ori	r24, 0x10	; 16
     4cc:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 &=~(1<<4);
     4d0:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     4d4:	8f 7e       	andi	r24, 0xEF	; 239
     4d6:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
		LCDDR16 &=~(1<<4);
     4da:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     4de:	8f 7e       	andi	r24, 0xEF	; 239
     4e0:	23 c0       	rjmp	.+70     	; 0x528 <__stack+0x29>
		break;
	case ONEBAR:
		LCDDR1 |=(1<<4);
     4e2:	80 61       	ori	r24, 0x10	; 16
     4e4:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     4e8:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     4ec:	8f 7e       	andi	r24, 0xEF	; 239
     4ee:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 &=~(1<<4);
     4f2:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     4f6:	8f 7e       	andi	r24, 0xEF	; 239
     4f8:	12 c0       	rjmp	.+36     	; 0x51e <__stack+0x1f>
		LCDDR16 |=(1<<4);
		break;
	case TWOBAR:
		LCDDR1 |=(1<<4);
     4fa:	80 61       	ori	r24, 0x10	; 16
     4fc:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 &=~(1<<4);
     500:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     504:	8f 7e       	andi	r24, 0xEF	; 239
     506:	06 c0       	rjmp	.+12     	; 0x514 <__stack+0x15>
		LCDDR11 |=(1<<4);
		LCDDR16 |=(1<<4);
		break;
	case FULL:
		LCDDR1 |=(1<<4);
     508:	80 61       	ori	r24, 0x10	; 16
     50a:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
		LCDDR6 |=(1<<4);
     50e:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
     512:	80 61       	ori	r24, 0x10	; 16
     514:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
		LCDDR11 |=(1<<4);
     518:	80 91 f7 00 	lds	r24, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
     51c:	80 61       	ori	r24, 0x10	; 16
     51e:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
		LCDDR16 |=(1<<4);
     522:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     526:	80 61       	ori	r24, 0x10	; 16
     528:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     52c:	08 95       	ret

0000052e <_ZN3LCD5setDPEb>:
		break;
	}
}

void LCD::setDP(bool b) {
	if(b){
     52e:	88 23       	and	r24, r24
     530:	21 f0       	breq	.+8      	; 0x53a <_ZN3LCD5setDPEb+0xc>
		LCDDR15|=(1<<4);
     532:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     536:	80 61       	ori	r24, 0x10	; 16
     538:	03 c0       	rjmp	.+6      	; 0x540 <_ZN3LCD5setDPEb+0x12>
	}else{
		LCDDR15&=~(1<<4);
     53a:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     53e:	8f 7e       	andi	r24, 0xEF	; 239
     540:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
     544:	08 95       	ret

00000546 <_ZN3LCD6setClkEb>:
	}
}

void LCD::setClk(bool b) {
	if(b){
     546:	88 23       	and	r24, r24
     548:	21 f0       	breq	.+8      	; 0x552 <_ZN3LCD6setClkEb+0xc>
		LCDDR16|=1;
     54a:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     54e:	81 60       	ori	r24, 0x01	; 1
     550:	03 c0       	rjmp	.+6      	; 0x558 <_ZN3LCD6setClkEb+0x12>
	}else{
		LCDDR16&=~1;
     552:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     556:	8e 7f       	andi	r24, 0xFE	; 254
     558:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
     55c:	08 95       	ret

0000055e <_ZN3LCD5getDPEv>:
	}
}

bool LCD::getDP(void) {
	return (LCDDR15 & (1<<4));
     55e:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
}
     562:	82 95       	swap	r24
     564:	81 70       	andi	r24, 0x01	; 1
     566:	08 95       	ret

00000568 <_ZN3LCD6getClkEv>:

bool LCD::getClk(void) {
	return (LCDDR16 & 1);
     568:	80 91 fc 00 	lds	r24, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
}
     56c:	81 70       	andi	r24, 0x01	; 1
     56e:	08 95       	ret

00000570 <_ZN3LCD5blinkEj>:

void LCD::blink(uint16_t t) {
	for(uint16_t i=0;i<t;i++){
     570:	20 e0       	ldi	r18, 0x00	; 0
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	28 17       	cp	r18, r24
     576:	39 07       	cpc	r19, r25
     578:	89 f0       	breq	.+34     	; 0x59c <_ZN3LCD5blinkEj+0x2c>
		PORTB|=(1<<PB0);
     57a:	28 9a       	sbi	0x05, 0	; 5
     57c:	ef e2       	ldi	r30, 0x2F	; 47
     57e:	f5 e7       	ldi	r31, 0x75	; 117
     580:	31 97       	sbiw	r30, 0x01	; 1
     582:	f1 f7       	brne	.-4      	; 0x580 <_ZN3LCD5blinkEj+0x10>
     584:	00 c0       	rjmp	.+0      	; 0x586 <_ZN3LCD5blinkEj+0x16>
     586:	00 00       	nop
		_delay_ms(15);
		PORTB&=~(1<<PB0);
     588:	28 98       	cbi	0x05, 0	; 5
     58a:	ef e2       	ldi	r30, 0x2F	; 47
     58c:	f5 e7       	ldi	r31, 0x75	; 117
     58e:	31 97       	sbiw	r30, 0x01	; 1
     590:	f1 f7       	brne	.-4      	; 0x58e <_ZN3LCD5blinkEj+0x1e>
     592:	00 c0       	rjmp	.+0      	; 0x594 <_ZN3LCD5blinkEj+0x24>
     594:	00 00       	nop
bool LCD::getClk(void) {
	return (LCDDR16 & 1);
}

void LCD::blink(uint16_t t) {
	for(uint16_t i=0;i<t;i++){
     596:	2f 5f       	subi	r18, 0xFF	; 255
     598:	3f 4f       	sbci	r19, 0xFF	; 255
     59a:	ec cf       	rjmp	.-40     	; 0x574 <_ZN3LCD5blinkEj+0x4>
     59c:	08 95       	ret

0000059e <_ZN3LCD5setNbEl>:
		PORTB&=~(1<<PB0);
		_delay_ms(15);
	}
}

uint8_t LCD::setNb(int32_t nb) {// TODO 10ms !
     59e:	4f 92       	push	r4
     5a0:	5f 92       	push	r5
     5a2:	6f 92       	push	r6
     5a4:	7f 92       	push	r7
     5a6:	8f 92       	push	r8
     5a8:	9f 92       	push	r9
     5aa:	af 92       	push	r10
     5ac:	bf 92       	push	r11
     5ae:	cf 92       	push	r12
     5b0:	df 92       	push	r13
     5b2:	ef 92       	push	r14
     5b4:	ff 92       	push	r15
     5b6:	0f 93       	push	r16
     5b8:	1f 93       	push	r17
     5ba:	cf 93       	push	r28
     5bc:	df 93       	push	r29
     5be:	6b 01       	movw	r12, r22
     5c0:	7c 01       	movw	r14, r24
	if(nb>999999 || nb <-99999){
     5c2:	dc 01       	movw	r26, r24
     5c4:	cb 01       	movw	r24, r22
     5c6:	81 56       	subi	r24, 0x61	; 97
     5c8:	99 47       	sbci	r25, 0x79	; 121
     5ca:	ae 4f       	sbci	r26, 0xFE	; 254
     5cc:	bf 4f       	sbci	r27, 0xFF	; 255
     5ce:	8f 3d       	cpi	r24, 0xDF	; 223
     5d0:	98 4c       	sbci	r25, 0xC8	; 200
     5d2:	a0 41       	sbci	r26, 0x10	; 16
     5d4:	b1 05       	cpc	r27, r1
     5d6:	08 f0       	brcs	.+2      	; 0x5da <_ZN3LCD5setNbEl+0x3c>
     5d8:	41 c0       	rjmp	.+130    	; 0x65c <_ZN3LCD5setNbEl+0xbe>
		return 1;
	}
	int8_t d=5;
	uint8_t min=0;
	if(nb<0){
     5da:	f7 fe       	sbrs	r15, 7
     5dc:	0e c0       	rjmp	.+28     	; 0x5fa <_ZN3LCD5setNbEl+0x5c>
		setDigit(0,Minus);
     5de:	60 e4       	ldi	r22, 0x40	; 64
     5e0:	80 e0       	ldi	r24, 0x00	; 0
     5e2:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <_ZN3LCD8setDigitEhNS_6SymbolE>
		min++;
		nb=(~nb)+1;
     5e6:	f0 94       	com	r15
     5e8:	e0 94       	com	r14
     5ea:	d0 94       	com	r13
     5ec:	c0 94       	com	r12
     5ee:	c1 1c       	adc	r12, r1
     5f0:	d1 1c       	adc	r13, r1
     5f2:	e1 1c       	adc	r14, r1
     5f4:	f1 1c       	adc	r15, r1
	}
	int8_t d=5;
	uint8_t min=0;
	if(nb<0){
		setDigit(0,Minus);
		min++;
     5f6:	01 e0       	ldi	r16, 0x01	; 1
     5f8:	01 c0       	rjmp	.+2      	; 0x5fc <_ZN3LCD5setNbEl+0x5e>
uint8_t LCD::setNb(int32_t nb) {// TODO 10ms !
	if(nb>999999 || nb <-99999){
		return 1;
	}
	int8_t d=5;
	uint8_t min=0;
     5fa:	00 e0       	ldi	r16, 0x00	; 0
	if(nb<0){
		setDigit(0,Minus);
		min++;
     5fc:	c5 e0       	ldi	r28, 0x05	; 5
		nb=(~nb)+1;
	}
	while(d>=min){
     5fe:	10 e0       	ldi	r17, 0x00	; 0
		setDigit(d--,nb%10);
     600:	8a e0       	ldi	r24, 0x0A	; 10
     602:	48 2e       	mov	r4, r24
     604:	51 2c       	mov	r5, r1
     606:	61 2c       	mov	r6, r1
     608:	71 2c       	mov	r7, r1
	if(nb<0){
		setDigit(0,Minus);
		min++;
		nb=(~nb)+1;
	}
	while(d>=min){
     60a:	8c 2f       	mov	r24, r28
     60c:	0c 2e       	mov	r0, r28
     60e:	00 0c       	add	r0, r0
     610:	99 0b       	sbc	r25, r25
     612:	80 17       	cp	r24, r16
     614:	91 07       	cpc	r25, r17
     616:	14 f4       	brge	.+4      	; 0x61c <_ZN3LCD5setNbEl+0x7e>
		setDigit(d--,nb%10);
		nb/=10;
		if(nb==0)break;
	}
	while(d>=min)setDigit(d--,Blank);
	return 0;
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	21 c0       	rjmp	.+66     	; 0x65e <_ZN3LCD5setNbEl+0xc0>
		setDigit(0,Minus);
		min++;
		nb=(~nb)+1;
	}
	while(d>=min){
		setDigit(d--,nb%10);
     61c:	c7 01       	movw	r24, r14
     61e:	b6 01       	movw	r22, r12
     620:	a3 01       	movw	r20, r6
     622:	92 01       	movw	r18, r4
     624:	0e 94 28 09 	call	0x1250	; 0x1250 <__divmodsi4>
     628:	49 01       	movw	r8, r18
     62a:	5a 01       	movw	r10, r20
     62c:	8c 2f       	mov	r24, r28
     62e:	c1 50       	subi	r28, 0x01	; 1
     630:	0e 94 a2 01 	call	0x344	; 0x344 <_ZN3LCD8setDigitEhh>
		nb/=10;
     634:	64 01       	movw	r12, r8
     636:	75 01       	movw	r14, r10
		if(nb==0)break;
     638:	c1 14       	cp	r12, r1
     63a:	d1 04       	cpc	r13, r1
     63c:	e1 04       	cpc	r14, r1
     63e:	f1 04       	cpc	r15, r1
     640:	21 f7       	brne	.-56     	; 0x60a <_ZN3LCD5setNbEl+0x6c>
	}
	while(d>=min)setDigit(d--,Blank);
     642:	8c 2f       	mov	r24, r28
     644:	0c 2e       	mov	r0, r28
     646:	00 0c       	add	r0, r0
     648:	99 0b       	sbc	r25, r25
     64a:	80 17       	cp	r24, r16
     64c:	91 07       	cpc	r25, r17
     64e:	24 f3       	brlt	.-56     	; 0x618 <_ZN3LCD5setNbEl+0x7a>
     650:	8c 2f       	mov	r24, r28
     652:	60 e0       	ldi	r22, 0x00	; 0
     654:	c1 50       	subi	r28, 0x01	; 1
     656:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <_ZN3LCD8setDigitEhNS_6SymbolE>
     65a:	f3 cf       	rjmp	.-26     	; 0x642 <_ZN3LCD5setNbEl+0xa4>
	}
}

uint8_t LCD::setNb(int32_t nb) {// TODO 10ms !
	if(nb>999999 || nb <-99999){
		return 1;
     65c:	81 e0       	ldi	r24, 0x01	; 1
		nb/=10;
		if(nb==0)break;
	}
	while(d>=min)setDigit(d--,Blank);
	return 0;
}
     65e:	df 91       	pop	r29
     660:	cf 91       	pop	r28
     662:	1f 91       	pop	r17
     664:	0f 91       	pop	r16
     666:	ff 90       	pop	r15
     668:	ef 90       	pop	r14
     66a:	df 90       	pop	r13
     66c:	cf 90       	pop	r12
     66e:	bf 90       	pop	r11
     670:	af 90       	pop	r10
     672:	9f 90       	pop	r9
     674:	8f 90       	pop	r8
     676:	7f 90       	pop	r7
     678:	6f 90       	pop	r6
     67a:	5f 90       	pop	r5
     67c:	4f 90       	pop	r4
     67e:	08 95       	ret

00000680 <_ZN3LCD5clearEv>:

void LCD::clear(void) {
     680:	cf 93       	push	r28
	setBattery(NONE);
     682:	80 e0       	ldi	r24, 0x00	; 0
     684:	0e 94 3d 02 	call	0x47a	; 0x47a <_ZN3LCD10setBatteryENS_7BatteryE>
	setClk(false);
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	0e 94 a3 02 	call	0x546	; 0x546 <_ZN3LCD6setClkEb>
	setDP(false);
     68e:	80 e0       	ldi	r24, 0x00	; 0
     690:	0e 94 97 02 	call	0x52e	; 0x52e <_ZN3LCD5setDPEb>
	for(int8_t i=5;i>=0;i--)setDigit(i,Blank);
     694:	c5 e0       	ldi	r28, 0x05	; 5
     696:	60 e0       	ldi	r22, 0x00	; 0
     698:	8c 2f       	mov	r24, r28
     69a:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <_ZN3LCD8setDigitEhNS_6SymbolE>
     69e:	c1 50       	subi	r28, 0x01	; 1
     6a0:	d0 f7       	brcc	.-12     	; 0x696 <_ZN3LCD5clearEv+0x16>
}
     6a2:	cf 91       	pop	r28
     6a4:	08 95       	ret

000006a6 <_ZN2SMC1Ev>:
#include "state_machine.h"

const uint8_t SM::states_duration[] = {0, 10, 20, 255};

SM::SM(void){
	current_state=STATE_WAKEUP;
     6a6:	21 e0       	ldi	r18, 0x01	; 1
     6a8:	fc 01       	movw	r30, r24
     6aa:	20 83       	st	Z, r18
	current_duration=states_duration[current_state];
     6ac:	2a e0       	ldi	r18, 0x0A	; 10
     6ae:	21 83       	std	Z+1, r18	; 0x01
     6b0:	08 95       	ret

000006b2 <_ZN2SMD1Ev>:
}


SM::~SM(void){
     6b2:	08 95       	ret

000006b4 <_ZN2SM9nextStateEv>:
			//measure and show result
			break;
	}
}

void SM::nextState(void){
     6b4:	dc 01       	movw	r26, r24
		case STATE_IDLE:
			//goto sleep
		break;
	}
	
	current_state++;
     6b6:	ec 91       	ld	r30, X
     6b8:	ef 5f       	subi	r30, 0xFF	; 255
     6ba:	ec 93       	st	X, r30
	current_duration=states_duration[current_state];
     6bc:	f0 e0       	ldi	r31, 0x00	; 0
     6be:	e3 57       	subi	r30, 0x73	; 115
     6c0:	fe 4f       	sbci	r31, 0xFE	; 254
     6c2:	80 81       	ld	r24, Z
     6c4:	11 96       	adiw	r26, 0x01	; 1
     6c6:	8c 93       	st	X, r24
     6c8:	08 95       	ret

000006ca <_ZN2SM6updateEv>:

SM::~SM(void){
}

void SM::update(void){
	if(current_duration--==0){
     6ca:	fc 01       	movw	r30, r24
     6cc:	21 81       	ldd	r18, Z+1	; 0x01
     6ce:	3f ef       	ldi	r19, 0xFF	; 255
     6d0:	32 0f       	add	r19, r18
     6d2:	31 83       	std	Z+1, r19	; 0x01
     6d4:	21 11       	cpse	r18, r1
     6d6:	02 c0       	rjmp	.+4      	; 0x6dc <_ZN2SM6updateEv+0x12>
		nextState();
     6d8:	0c 94 5a 03 	jmp	0x6b4	; 0x6b4 <_ZN2SM9nextStateEv>
     6dc:	08 95       	ret

000006de <_ZN7MCP3462C1Ev>:
#include "ADC.h"


MCP3462::MCP3462(){
     6de:	08 95       	ret

000006e0 <_ZN7MCP3462D1Ev>:
    
}

MCP3462::~MCP3462(){
     6e0:	08 95       	ret

000006e2 <_ZN7MCP346211isDataReadyEv>:
    
}

bool MCP3462::isDataReady(void){
    return 0;
}
     6e2:	80 e0       	ldi	r24, 0x00	; 0
     6e4:	08 95       	ret

000006e6 <_ZN7MCP346213getDirectDataEv>:
     6e6:	60 e0       	ldi	r22, 0x00	; 0
     6e8:	70 e0       	ldi	r23, 0x00	; 0
     6ea:	cb 01       	movw	r24, r22
     6ec:	08 95       	ret

000006ee <_ZN7MCP346213getGainedDataEv>:
    return 0;
}

uint32_t MCP3462::getGainedData(void){
    return 0;
}
     6ee:	60 e0       	ldi	r22, 0x00	; 0
     6f0:	70 e0       	ldi	r23, 0x00	; 0
     6f2:	cb 01       	movw	r24, r22
     6f4:	08 95       	ret

000006f6 <_ZN4UARTC1Ev>:
#include "UART.h"

UART::UART(void){
     6f6:	08 95       	ret

000006f8 <_ZN4UARTD1Ev>:
    UCSR0B|= (1<<TXEN0)|(1<<RXEN0);	// enable receiver and transmitter
    UCSR0C|= (1<<UMSEL01)|(1<<UCSZ00)|(1<<UCSZ01);	// 8bit data format    */
    
}

UART::~UART(void){
     6f8:	08 95       	ret

000006fa <_ZN4UART8sendByteEh>:
    
}

void UART::sendByte(uint8_t b){
    while (!( UCSRA & (1<<UDRE)));	// wait while register is free
     6fa:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
     6fe:	85 ff       	sbrs	r24, 5
     700:	fc cf       	rjmp	.-8      	; 0x6fa <_ZN4UART8sendByteEh>
    UDR = b;	// load data in the register
     702:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     706:	08 95       	ret

00000708 <_ZN4UART10sendStringEPc>:
}

void UART::sendString(char* data){
     708:	0f 93       	push	r16
     70a:	1f 93       	push	r17
     70c:	cf 93       	push	r28
     70e:	df 93       	push	r29
     710:	8c 01       	movw	r16, r24
     712:	eb 01       	movw	r28, r22
    while(*data>0){
     714:	69 91       	ld	r22, Y+
     716:	66 23       	and	r22, r22
     718:	21 f0       	breq	.+8      	; 0x722 <_ZN4UART10sendStringEPc+0x1a>
		sendByte(*data++);
     71a:	c8 01       	movw	r24, r16
     71c:	0e 94 7d 03 	call	0x6fa	; 0x6fa <_ZN4UART8sendByteEh>
    while (!( UCSRA & (1<<UDRE)));	// wait while register is free
    UDR = b;	// load data in the register
}

void UART::sendString(char* data){
    while(*data>0){
     720:	f9 cf       	rjmp	.-14     	; 0x714 <_ZN4UART10sendStringEPc+0xc>
		sendByte(*data++);
	}
}
     722:	df 91       	pop	r29
     724:	cf 91       	pop	r28
     726:	1f 91       	pop	r17
     728:	0f 91       	pop	r16
     72a:	08 95       	ret

0000072c <_ZN4UART7getCharEv>:

uint8_t UART::getChar(void){
    if(isDataAvailable()){
        while(!(UCSRA) & (1<<RXC));	// wait while data is being received
     72c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
        return UDR;	// return 8-bit data
     730:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
    }else{
        return 0;
    }
    
}
     734:	08 95       	ret

00000736 <_ZN4UART15isDataAvailableEv>:

bool UART::isDataAvailable(void){
    return 1;
}
     736:	81 e0       	ldi	r24, 0x01	; 1
     738:	08 95       	ret

0000073a <main>:


volatile uint32_t cnt=59650;
volatile uint8_t state=1;

int main(void){
     73a:	cf 93       	push	r28
     73c:	df 93       	push	r29
     73e:	cd b7       	in	r28, 0x3d	; 61
     740:	de b7       	in	r29, 0x3e	; 62
     742:	2b 97       	sbiw	r28, 0x0b	; 11
     744:	0f b6       	in	r0, 0x3f	; 63
     746:	f8 94       	cli
     748:	de bf       	out	0x3e, r29	; 62
     74a:	0f be       	out	0x3f, r0	; 63
     74c:	cd bf       	out	0x3d, r28	; 61
	
	DDRD=0b11000000; 	//LED0, LED1 as outputs
     74e:	80 ec       	ldi	r24, 0xC0	; 192
     750:	8a b9       	out	0x0a, r24	; 10
	PORTD=0x00;			//LED initial state:low
     752:	1b b8       	out	0x0b, r1	; 11
	DDRB=0x00; 			//BTN0, BTN1 as inputs
     754:	14 b8       	out	0x04, r1	; 4
	PORTB=0b11000000;	//BTN0, BTN1 activate internal pullups
     756:	85 b9       	out	0x05, r24	; 5
	
	DDRE=0x00;
     758:	1d b8       	out	0x0d, r1	; 13
	PORTE=0xFF;
     75a:	8f ef       	ldi	r24, 0xFF	; 255
     75c:	8e b9       	out	0x0e, r24	; 14
	DDRB=0x00;
     75e:	14 b8       	out	0x04, r1	; 4
	PORTB=0xFF;
     760:	85 b9       	out	0x05, r24	; 5
	
	LED0_ON;
     762:	5e 9a       	sbi	0x0b, 6	; 11
	PRR|=(1<<PRTIM1)|(1<<PRSPI)|(1<<PRUSART0);//Shut down clock to Timer1, SPI, UART
     764:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
     768:	8e 60       	ori	r24, 0x0E	; 14
     76a:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
	
	ADMUX|=(1<<REFS0)|0b11110;//Set AVCC as reference voltage for ADC, ADC MUX input to 1.1V BG
     76e:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7fc07c>
     772:	8e 65       	ori	r24, 0x5E	; 94
     774:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7fc07c>
	ADCSRA|=(1<<ADEN)|(1<<ADIE)|(1<<ADPS1);//Enable conversin complete interrupt, Clock prescaler 12MHz/64=187kHz
     778:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
     77c:	8a 68       	ori	r24, 0x8A	; 138
     77e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
	EIMSK=0b00100000;//Enable pin change interrupt PCINT8-15 WARNING Avrdude is not up to date with changelog from P to PA: PCIE1 has changed location from bit 7 to 5 
     782:	80 e2       	ldi	r24, 0x20	; 32
     784:	8d bb       	out	0x1d, r24	; 29
	PCMSK1=(1<<PCINT14);//Enable BTN0 interrupt
     786:	80 e4       	ldi	r24, 0x40	; 64
     788:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
	sei();
     78c:	78 94       	sei
					sleep_disable();
				}
				PRR&=~(1<<PRADC);//Enable power to ADC again
				ADCSRA|=(1<<ADEN);//Enable ADC again
				sei();
				state=1;
     78e:	11 e0       	ldi	r17, 0x01	; 1
				break;
				
			case 1:
				LED0_Toggle;
     790:	00 e4       	ldi	r16, 0x40	; 64
     792:	2f ef       	ldi	r18, 0xFF	; 255
     794:	80 e7       	ldi	r24, 0x70	; 112
     796:	92 e0       	ldi	r25, 0x02	; 2
     798:	21 50       	subi	r18, 0x01	; 1
     79a:	80 40       	sbci	r24, 0x00	; 0
     79c:	90 40       	sbci	r25, 0x00	; 0
     79e:	e1 f7       	brne	.-8      	; 0x798 <main+0x5e>
     7a0:	00 c0       	rjmp	.+0      	; 0x7a2 <main+0x68>
     7a2:	00 00       	nop
	
	
	while(1){
	
		_delay_ms(100);
		switch(state){
     7a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7a8:	88 23       	and	r24, r24
     7aa:	19 f0       	breq	.+6      	; 0x7b2 <main+0x78>
     7ac:	81 30       	cpi	r24, 0x01	; 1
     7ae:	31 f1       	breq	.+76     	; 0x7fc <main+0xc2>
     7b0:	42 c0       	rjmp	.+132    	; 0x836 <main+0xfc>
			case 0:
				ADCSRA&=~(1<<ADEN);//Disable ADC
     7b2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
     7b6:	8f 77       	andi	r24, 0x7F	; 127
     7b8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
				PRR|=(1<<PRTIM1)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRADC);//Shut down clock to Timer1, SPI, UART, ADC
     7bc:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
     7c0:	8f 60       	ori	r24, 0x0F	; 15
     7c2:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
				
				set_sleep_mode(SLEEP_MODE_PWR_SAVE);
     7c6:	83 b7       	in	r24, 0x33	; 51
     7c8:	81 7f       	andi	r24, 0xF1	; 241
     7ca:	86 60       	ori	r24, 0x06	; 6
     7cc:	83 bf       	out	0x33, r24	; 51
				//set_sleep_mode(SLEEP_MODE_PWR_DOWN);
				cli();
     7ce:	f8 94       	cli
				if (1){
					sleep_enable();
     7d0:	83 b7       	in	r24, 0x33	; 51
     7d2:	81 60       	ori	r24, 0x01	; 1
     7d4:	83 bf       	out	0x33, r24	; 51
					sei();
     7d6:	78 94       	sei
					sleep_cpu();
     7d8:	88 95       	sleep
					sleep_disable();
     7da:	83 b7       	in	r24, 0x33	; 51
     7dc:	8e 7f       	andi	r24, 0xFE	; 254
     7de:	83 bf       	out	0x33, r24	; 51
				}
				PRR&=~(1<<PRADC);//Enable power to ADC again
     7e0:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
     7e4:	8e 7f       	andi	r24, 0xFE	; 254
     7e6:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
				ADCSRA|=(1<<ADEN);//Enable ADC again
     7ea:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
     7ee:	80 68       	ori	r24, 0x80	; 128
     7f0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
				sei();
     7f4:	78 94       	sei
				state=1;
     7f6:	10 93 00 01 	sts	0x0100, r17	; 0x800100 <__DATA_REGION_ORIGIN__>
				break;
     7fa:	1d c0       	rjmp	.+58     	; 0x836 <main+0xfc>
				
			case 1:
				LED0_Toggle;
     7fc:	8b b1       	in	r24, 0x0b	; 11
     7fe:	80 27       	eor	r24, r16
     800:	8b b9       	out	0x0b, r24	; 11
				ADCSRA|=(1<<ADSC); //Start single ADC conversion
     802:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
     806:	80 64       	ori	r24, 0x40	; 64
     808:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
				if(myADC.isDataReady()){
     80c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <_ZN7MCP346211isDataReadyEv>
     810:	88 23       	and	r24, r24
     812:	89 f0       	breq	.+34     	; 0x836 <main+0xfc>
					uint32_t d=myADC.getDirectData();
     814:	0e 94 73 03 	call	0x6e6	; 0x6e6 <_ZN7MCP346213getDirectDataEv>
     818:	dc 01       	movw	r26, r24
     81a:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     81c:	4a e0       	ldi	r20, 0x0A	; 10
     81e:	be 01       	movw	r22, r28
     820:	6f 5f       	subi	r22, 0xFF	; 255
     822:	7f 4f       	sbci	r23, 0xFF	; 255
     824:	0e 94 94 0a 	call	0x1528	; 0x1528 <__itoa_ncheck>
					char buffer [11];//32 bits in decimal is 4milions, 10 digits
					itoa(d,buffer,10);
					uart.sendString(buffer);
     828:	be 01       	movw	r22, r28
     82a:	6f 5f       	subi	r22, 0xFF	; 255
     82c:	7f 4f       	sbci	r23, 0xFF	; 255
     82e:	86 e9       	ldi	r24, 0x96	; 150
     830:	91 e0       	ldi	r25, 0x01	; 1
     832:	0e 94 84 03 	call	0x708	; 0x708 <_ZN4UART10sendStringEPc>
				}
		}
		
		if(cnt>=BATT_FULL){
     836:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <cnt>
     83a:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <cnt+0x1>
     83e:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <cnt+0x2>
     842:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <cnt+0x3>
     846:	8c 33       	cpi	r24, 0x3C	; 60
     848:	9f 40       	sbci	r25, 0x0F	; 15
     84a:	a1 05       	cpc	r26, r1
     84c:	b1 05       	cpc	r27, r1
     84e:	10 f0       	brcs	.+4      	; 0x854 <main+0x11a>
			myLCD.setBattery(LCD::FULL);
     850:	87 e0       	ldi	r24, 0x07	; 7
     852:	2e c0       	rjmp	.+92     	; 0x8b0 <main+0x176>
		}else if(cnt>=BATT_TWOBAR){
     854:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <cnt>
     858:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <cnt+0x1>
     85c:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <cnt+0x2>
     860:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <cnt+0x3>
     864:	86 3a       	cpi	r24, 0xA6	; 166
     866:	9e 40       	sbci	r25, 0x0E	; 14
     868:	a1 05       	cpc	r26, r1
     86a:	b1 05       	cpc	r27, r1
     86c:	10 f0       	brcs	.+4      	; 0x872 <main+0x138>
			myLCD.setBattery(LCD::TWOBAR);
     86e:	86 e0       	ldi	r24, 0x06	; 6
     870:	1f c0       	rjmp	.+62     	; 0x8b0 <main+0x176>
		}else if(cnt>=BATT_ONEBAR){
     872:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <cnt>
     876:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <cnt+0x1>
     87a:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <cnt+0x2>
     87e:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <cnt+0x3>
     882:	80 31       	cpi	r24, 0x10	; 16
     884:	9e 40       	sbci	r25, 0x0E	; 14
     886:	a1 05       	cpc	r26, r1
     888:	b1 05       	cpc	r27, r1
     88a:	10 f0       	brcs	.+4      	; 0x890 <main+0x156>
			myLCD.setBattery(LCD::ONEBAR);
     88c:	85 e0       	ldi	r24, 0x05	; 5
     88e:	10 c0       	rjmp	.+32     	; 0x8b0 <main+0x176>
		}else if(cnt>=BATT_EMPTY){
     890:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <cnt>
     894:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <cnt+0x1>
     898:	a0 91 03 01 	lds	r26, 0x0103	; 0x800103 <cnt+0x2>
     89c:	b0 91 04 01 	lds	r27, 0x0104	; 0x800104 <cnt+0x3>
     8a0:	8c 3a       	cpi	r24, 0xAC	; 172
     8a2:	9d 40       	sbci	r25, 0x0D	; 13
     8a4:	a1 05       	cpc	r26, r1
     8a6:	b1 05       	cpc	r27, r1
     8a8:	10 f0       	brcs	.+4      	; 0x8ae <main+0x174>
			myLCD.setBattery(LCD::EMPTY);
     8aa:	81 e0       	ldi	r24, 0x01	; 1
     8ac:	01 c0       	rjmp	.+2      	; 0x8b0 <main+0x176>
		}else{
			myLCD.setBattery(LCD::NONE);
     8ae:	80 e0       	ldi	r24, 0x00	; 0
     8b0:	0e 94 3d 02 	call	0x47a	; 0x47a <_ZN3LCD10setBatteryENS_7BatteryE>
     8b4:	6e cf       	rjmp	.-292    	; 0x792 <main+0x58>

000008b6 <_GLOBAL__sub_I_uart>:
#include "LCD.h"
#include "UART.h"
#include "ADC.h"
#include "state_machine.h"

UART uart;
     8b6:	86 e9       	ldi	r24, 0x96	; 150
     8b8:	91 e0       	ldi	r25, 0x01	; 1
     8ba:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <_ZN4UARTC1Ev>
MCP3462 myADC;
     8be:	85 e9       	ldi	r24, 0x95	; 149
     8c0:	91 e0       	ldi	r25, 0x01	; 1
     8c2:	0e 94 6f 03 	call	0x6de	; 0x6de <_ZN7MCP3462C1Ev>
SM mySM;
     8c6:	83 e9       	ldi	r24, 0x93	; 147
     8c8:	91 e0       	ldi	r25, 0x01	; 1
     8ca:	0e 94 53 03 	call	0x6a6	; 0x6a6 <_ZN2SMC1Ev>
LCD myLCD(0);//Use 1 for lowest power LCD mode
     8ce:	60 e0       	ldi	r22, 0x00	; 0
     8d0:	82 e9       	ldi	r24, 0x92	; 146
     8d2:	91 e0       	ldi	r25, 0x01	; 1
     8d4:	0c 94 6b 01 	jmp	0x2d6	; 0x2d6 <_ZN3LCDC1Eb>

000008d8 <_GLOBAL__sub_D_uart>:
     8d8:	82 e9       	ldi	r24, 0x92	; 146
     8da:	91 e0       	ldi	r25, 0x01	; 1
     8dc:	0e 94 90 01 	call	0x320	; 0x320 <_ZN3LCDD1Ev>
#include "ADC.h"
#include "state_machine.h"

UART uart;
MCP3462 myADC;
SM mySM;
     8e0:	83 e9       	ldi	r24, 0x93	; 147
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	0e 94 59 03 	call	0x6b2	; 0x6b2 <_ZN2SMD1Ev>
#include "UART.h"
#include "ADC.h"
#include "state_machine.h"

UART uart;
MCP3462 myADC;
     8e8:	85 e9       	ldi	r24, 0x95	; 149
     8ea:	91 e0       	ldi	r25, 0x01	; 1
     8ec:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN7MCP3462D1Ev>
#include "LCD.h"
#include "UART.h"
#include "ADC.h"
#include "state_machine.h"

UART uart;
     8f0:	86 e9       	ldi	r24, 0x96	; 150
     8f2:	91 e0       	ldi	r25, 0x01	; 1
     8f4:	0c 94 7c 03 	jmp	0x6f8	; 0x6f8 <_ZN4UARTD1Ev>

000008f8 <vfprintf>:
     8f8:	a0 e1       	ldi	r26, 0x10	; 16
     8fa:	b0 e0       	ldi	r27, 0x00	; 0
     8fc:	e2 e8       	ldi	r30, 0x82	; 130
     8fe:	f4 e0       	ldi	r31, 0x04	; 4
     900:	0c 94 4d 09 	jmp	0x129a	; 0x129a <__prologue_saves__>
     904:	7c 01       	movw	r14, r24
     906:	1b 01       	movw	r2, r22
     908:	6a 01       	movw	r12, r20
     90a:	fc 01       	movw	r30, r24
     90c:	17 82       	std	Z+7, r1	; 0x07
     90e:	16 82       	std	Z+6, r1	; 0x06
     910:	83 81       	ldd	r24, Z+3	; 0x03
     912:	81 ff       	sbrs	r24, 1
     914:	44 c3       	rjmp	.+1672   	; 0xf9e <vfprintf+0x6a6>
     916:	9e 01       	movw	r18, r28
     918:	2f 5f       	subi	r18, 0xFF	; 255
     91a:	3f 4f       	sbci	r19, 0xFF	; 255
     91c:	39 01       	movw	r6, r18
     91e:	f7 01       	movw	r30, r14
     920:	93 81       	ldd	r25, Z+3	; 0x03
     922:	f1 01       	movw	r30, r2
     924:	93 fd       	sbrc	r25, 3
     926:	85 91       	lpm	r24, Z+
     928:	93 ff       	sbrs	r25, 3
     92a:	81 91       	ld	r24, Z+
     92c:	1f 01       	movw	r2, r30
     92e:	88 23       	and	r24, r24
     930:	09 f4       	brne	.+2      	; 0x934 <vfprintf+0x3c>
     932:	31 c3       	rjmp	.+1634   	; 0xf96 <vfprintf+0x69e>
     934:	85 32       	cpi	r24, 0x25	; 37
     936:	39 f4       	brne	.+14     	; 0x946 <vfprintf+0x4e>
     938:	93 fd       	sbrc	r25, 3
     93a:	85 91       	lpm	r24, Z+
     93c:	93 ff       	sbrs	r25, 3
     93e:	81 91       	ld	r24, Z+
     940:	1f 01       	movw	r2, r30
     942:	85 32       	cpi	r24, 0x25	; 37
     944:	39 f4       	brne	.+14     	; 0x954 <vfprintf+0x5c>
     946:	b7 01       	movw	r22, r14
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     94e:	56 01       	movw	r10, r12
     950:	65 01       	movw	r12, r10
     952:	e5 cf       	rjmp	.-54     	; 0x91e <vfprintf+0x26>
     954:	10 e0       	ldi	r17, 0x00	; 0
     956:	51 2c       	mov	r5, r1
     958:	91 2c       	mov	r9, r1
     95a:	ff e1       	ldi	r31, 0x1F	; 31
     95c:	f9 15       	cp	r31, r9
     95e:	d8 f0       	brcs	.+54     	; 0x996 <vfprintf+0x9e>
     960:	8b 32       	cpi	r24, 0x2B	; 43
     962:	79 f0       	breq	.+30     	; 0x982 <vfprintf+0x8a>
     964:	38 f4       	brcc	.+14     	; 0x974 <vfprintf+0x7c>
     966:	80 32       	cpi	r24, 0x20	; 32
     968:	79 f0       	breq	.+30     	; 0x988 <vfprintf+0x90>
     96a:	83 32       	cpi	r24, 0x23	; 35
     96c:	a1 f4       	brne	.+40     	; 0x996 <vfprintf+0x9e>
     96e:	f9 2d       	mov	r31, r9
     970:	f0 61       	ori	r31, 0x10	; 16
     972:	2e c0       	rjmp	.+92     	; 0x9d0 <vfprintf+0xd8>
     974:	8d 32       	cpi	r24, 0x2D	; 45
     976:	61 f0       	breq	.+24     	; 0x990 <vfprintf+0x98>
     978:	80 33       	cpi	r24, 0x30	; 48
     97a:	69 f4       	brne	.+26     	; 0x996 <vfprintf+0x9e>
     97c:	29 2d       	mov	r18, r9
     97e:	21 60       	ori	r18, 0x01	; 1
     980:	2d c0       	rjmp	.+90     	; 0x9dc <vfprintf+0xe4>
     982:	39 2d       	mov	r19, r9
     984:	32 60       	ori	r19, 0x02	; 2
     986:	93 2e       	mov	r9, r19
     988:	89 2d       	mov	r24, r9
     98a:	84 60       	ori	r24, 0x04	; 4
     98c:	98 2e       	mov	r9, r24
     98e:	2a c0       	rjmp	.+84     	; 0x9e4 <vfprintf+0xec>
     990:	e9 2d       	mov	r30, r9
     992:	e8 60       	ori	r30, 0x08	; 8
     994:	15 c0       	rjmp	.+42     	; 0x9c0 <vfprintf+0xc8>
     996:	97 fc       	sbrc	r9, 7
     998:	2d c0       	rjmp	.+90     	; 0x9f4 <vfprintf+0xfc>
     99a:	20 ed       	ldi	r18, 0xD0	; 208
     99c:	28 0f       	add	r18, r24
     99e:	2a 30       	cpi	r18, 0x0A	; 10
     9a0:	88 f4       	brcc	.+34     	; 0x9c4 <vfprintf+0xcc>
     9a2:	96 fe       	sbrs	r9, 6
     9a4:	06 c0       	rjmp	.+12     	; 0x9b2 <vfprintf+0xba>
     9a6:	3a e0       	ldi	r19, 0x0A	; 10
     9a8:	13 9f       	mul	r17, r19
     9aa:	20 0d       	add	r18, r0
     9ac:	11 24       	eor	r1, r1
     9ae:	12 2f       	mov	r17, r18
     9b0:	19 c0       	rjmp	.+50     	; 0x9e4 <vfprintf+0xec>
     9b2:	8a e0       	ldi	r24, 0x0A	; 10
     9b4:	58 9e       	mul	r5, r24
     9b6:	20 0d       	add	r18, r0
     9b8:	11 24       	eor	r1, r1
     9ba:	52 2e       	mov	r5, r18
     9bc:	e9 2d       	mov	r30, r9
     9be:	e0 62       	ori	r30, 0x20	; 32
     9c0:	9e 2e       	mov	r9, r30
     9c2:	10 c0       	rjmp	.+32     	; 0x9e4 <vfprintf+0xec>
     9c4:	8e 32       	cpi	r24, 0x2E	; 46
     9c6:	31 f4       	brne	.+12     	; 0x9d4 <vfprintf+0xdc>
     9c8:	96 fc       	sbrc	r9, 6
     9ca:	e5 c2       	rjmp	.+1482   	; 0xf96 <vfprintf+0x69e>
     9cc:	f9 2d       	mov	r31, r9
     9ce:	f0 64       	ori	r31, 0x40	; 64
     9d0:	9f 2e       	mov	r9, r31
     9d2:	08 c0       	rjmp	.+16     	; 0x9e4 <vfprintf+0xec>
     9d4:	8c 36       	cpi	r24, 0x6C	; 108
     9d6:	21 f4       	brne	.+8      	; 0x9e0 <vfprintf+0xe8>
     9d8:	29 2d       	mov	r18, r9
     9da:	20 68       	ori	r18, 0x80	; 128
     9dc:	92 2e       	mov	r9, r18
     9de:	02 c0       	rjmp	.+4      	; 0x9e4 <vfprintf+0xec>
     9e0:	88 36       	cpi	r24, 0x68	; 104
     9e2:	41 f4       	brne	.+16     	; 0x9f4 <vfprintf+0xfc>
     9e4:	f1 01       	movw	r30, r2
     9e6:	93 fd       	sbrc	r25, 3
     9e8:	85 91       	lpm	r24, Z+
     9ea:	93 ff       	sbrs	r25, 3
     9ec:	81 91       	ld	r24, Z+
     9ee:	1f 01       	movw	r2, r30
     9f0:	81 11       	cpse	r24, r1
     9f2:	b3 cf       	rjmp	.-154    	; 0x95a <vfprintf+0x62>
     9f4:	9b eb       	ldi	r25, 0xBB	; 187
     9f6:	98 0f       	add	r25, r24
     9f8:	93 30       	cpi	r25, 0x03	; 3
     9fa:	20 f4       	brcc	.+8      	; 0xa04 <vfprintf+0x10c>
     9fc:	99 2d       	mov	r25, r9
     9fe:	90 61       	ori	r25, 0x10	; 16
     a00:	80 5e       	subi	r24, 0xE0	; 224
     a02:	07 c0       	rjmp	.+14     	; 0xa12 <vfprintf+0x11a>
     a04:	9b e9       	ldi	r25, 0x9B	; 155
     a06:	98 0f       	add	r25, r24
     a08:	93 30       	cpi	r25, 0x03	; 3
     a0a:	08 f0       	brcs	.+2      	; 0xa0e <vfprintf+0x116>
     a0c:	66 c1       	rjmp	.+716    	; 0xcda <vfprintf+0x3e2>
     a0e:	99 2d       	mov	r25, r9
     a10:	9f 7e       	andi	r25, 0xEF	; 239
     a12:	96 ff       	sbrs	r25, 6
     a14:	16 e0       	ldi	r17, 0x06	; 6
     a16:	9f 73       	andi	r25, 0x3F	; 63
     a18:	99 2e       	mov	r9, r25
     a1a:	85 36       	cpi	r24, 0x65	; 101
     a1c:	19 f4       	brne	.+6      	; 0xa24 <vfprintf+0x12c>
     a1e:	90 64       	ori	r25, 0x40	; 64
     a20:	99 2e       	mov	r9, r25
     a22:	08 c0       	rjmp	.+16     	; 0xa34 <vfprintf+0x13c>
     a24:	86 36       	cpi	r24, 0x66	; 102
     a26:	21 f4       	brne	.+8      	; 0xa30 <vfprintf+0x138>
     a28:	39 2f       	mov	r19, r25
     a2a:	30 68       	ori	r19, 0x80	; 128
     a2c:	93 2e       	mov	r9, r19
     a2e:	02 c0       	rjmp	.+4      	; 0xa34 <vfprintf+0x13c>
     a30:	11 11       	cpse	r17, r1
     a32:	11 50       	subi	r17, 0x01	; 1
     a34:	97 fe       	sbrs	r9, 7
     a36:	07 c0       	rjmp	.+14     	; 0xa46 <vfprintf+0x14e>
     a38:	1c 33       	cpi	r17, 0x3C	; 60
     a3a:	50 f4       	brcc	.+20     	; 0xa50 <vfprintf+0x158>
     a3c:	44 24       	eor	r4, r4
     a3e:	43 94       	inc	r4
     a40:	41 0e       	add	r4, r17
     a42:	27 e0       	ldi	r18, 0x07	; 7
     a44:	0b c0       	rjmp	.+22     	; 0xa5c <vfprintf+0x164>
     a46:	18 30       	cpi	r17, 0x08	; 8
     a48:	38 f0       	brcs	.+14     	; 0xa58 <vfprintf+0x160>
     a4a:	27 e0       	ldi	r18, 0x07	; 7
     a4c:	17 e0       	ldi	r17, 0x07	; 7
     a4e:	05 c0       	rjmp	.+10     	; 0xa5a <vfprintf+0x162>
     a50:	27 e0       	ldi	r18, 0x07	; 7
     a52:	9c e3       	ldi	r25, 0x3C	; 60
     a54:	49 2e       	mov	r4, r25
     a56:	02 c0       	rjmp	.+4      	; 0xa5c <vfprintf+0x164>
     a58:	21 2f       	mov	r18, r17
     a5a:	41 2c       	mov	r4, r1
     a5c:	56 01       	movw	r10, r12
     a5e:	84 e0       	ldi	r24, 0x04	; 4
     a60:	a8 0e       	add	r10, r24
     a62:	b1 1c       	adc	r11, r1
     a64:	f6 01       	movw	r30, r12
     a66:	60 81       	ld	r22, Z
     a68:	71 81       	ldd	r23, Z+1	; 0x01
     a6a:	82 81       	ldd	r24, Z+2	; 0x02
     a6c:	93 81       	ldd	r25, Z+3	; 0x03
     a6e:	04 2d       	mov	r16, r4
     a70:	a3 01       	movw	r20, r6
     a72:	0e 94 a6 09 	call	0x134c	; 0x134c <__ftoa_engine>
     a76:	6c 01       	movw	r12, r24
     a78:	f9 81       	ldd	r31, Y+1	; 0x01
     a7a:	fc 87       	std	Y+12, r31	; 0x0c
     a7c:	f0 ff       	sbrs	r31, 0
     a7e:	02 c0       	rjmp	.+4      	; 0xa84 <vfprintf+0x18c>
     a80:	f3 ff       	sbrs	r31, 3
     a82:	06 c0       	rjmp	.+12     	; 0xa90 <vfprintf+0x198>
     a84:	91 fc       	sbrc	r9, 1
     a86:	06 c0       	rjmp	.+12     	; 0xa94 <vfprintf+0x19c>
     a88:	92 fe       	sbrs	r9, 2
     a8a:	06 c0       	rjmp	.+12     	; 0xa98 <vfprintf+0x1a0>
     a8c:	00 e2       	ldi	r16, 0x20	; 32
     a8e:	05 c0       	rjmp	.+10     	; 0xa9a <vfprintf+0x1a2>
     a90:	0d e2       	ldi	r16, 0x2D	; 45
     a92:	03 c0       	rjmp	.+6      	; 0xa9a <vfprintf+0x1a2>
     a94:	0b e2       	ldi	r16, 0x2B	; 43
     a96:	01 c0       	rjmp	.+2      	; 0xa9a <vfprintf+0x1a2>
     a98:	00 e0       	ldi	r16, 0x00	; 0
     a9a:	8c 85       	ldd	r24, Y+12	; 0x0c
     a9c:	8c 70       	andi	r24, 0x0C	; 12
     a9e:	19 f0       	breq	.+6      	; 0xaa6 <vfprintf+0x1ae>
     aa0:	01 11       	cpse	r16, r1
     aa2:	5a c2       	rjmp	.+1204   	; 0xf58 <vfprintf+0x660>
     aa4:	9b c2       	rjmp	.+1334   	; 0xfdc <vfprintf+0x6e4>
     aa6:	97 fe       	sbrs	r9, 7
     aa8:	10 c0       	rjmp	.+32     	; 0xaca <vfprintf+0x1d2>
     aaa:	4c 0c       	add	r4, r12
     aac:	fc 85       	ldd	r31, Y+12	; 0x0c
     aae:	f4 ff       	sbrs	r31, 4
     ab0:	04 c0       	rjmp	.+8      	; 0xaba <vfprintf+0x1c2>
     ab2:	8a 81       	ldd	r24, Y+2	; 0x02
     ab4:	81 33       	cpi	r24, 0x31	; 49
     ab6:	09 f4       	brne	.+2      	; 0xaba <vfprintf+0x1c2>
     ab8:	4a 94       	dec	r4
     aba:	14 14       	cp	r1, r4
     abc:	74 f5       	brge	.+92     	; 0xb1a <vfprintf+0x222>
     abe:	28 e0       	ldi	r18, 0x08	; 8
     ac0:	24 15       	cp	r18, r4
     ac2:	78 f5       	brcc	.+94     	; 0xb22 <vfprintf+0x22a>
     ac4:	88 e0       	ldi	r24, 0x08	; 8
     ac6:	48 2e       	mov	r4, r24
     ac8:	2c c0       	rjmp	.+88     	; 0xb22 <vfprintf+0x22a>
     aca:	96 fc       	sbrc	r9, 6
     acc:	2a c0       	rjmp	.+84     	; 0xb22 <vfprintf+0x22a>
     ace:	81 2f       	mov	r24, r17
     ad0:	90 e0       	ldi	r25, 0x00	; 0
     ad2:	8c 15       	cp	r24, r12
     ad4:	9d 05       	cpc	r25, r13
     ad6:	9c f0       	brlt	.+38     	; 0xafe <vfprintf+0x206>
     ad8:	3c ef       	ldi	r19, 0xFC	; 252
     ada:	c3 16       	cp	r12, r19
     adc:	3f ef       	ldi	r19, 0xFF	; 255
     ade:	d3 06       	cpc	r13, r19
     ae0:	74 f0       	brlt	.+28     	; 0xafe <vfprintf+0x206>
     ae2:	89 2d       	mov	r24, r9
     ae4:	80 68       	ori	r24, 0x80	; 128
     ae6:	98 2e       	mov	r9, r24
     ae8:	0a c0       	rjmp	.+20     	; 0xafe <vfprintf+0x206>
     aea:	e2 e0       	ldi	r30, 0x02	; 2
     aec:	f0 e0       	ldi	r31, 0x00	; 0
     aee:	ec 0f       	add	r30, r28
     af0:	fd 1f       	adc	r31, r29
     af2:	e1 0f       	add	r30, r17
     af4:	f1 1d       	adc	r31, r1
     af6:	80 81       	ld	r24, Z
     af8:	80 33       	cpi	r24, 0x30	; 48
     afa:	19 f4       	brne	.+6      	; 0xb02 <vfprintf+0x20a>
     afc:	11 50       	subi	r17, 0x01	; 1
     afe:	11 11       	cpse	r17, r1
     b00:	f4 cf       	rjmp	.-24     	; 0xaea <vfprintf+0x1f2>
     b02:	97 fe       	sbrs	r9, 7
     b04:	0e c0       	rjmp	.+28     	; 0xb22 <vfprintf+0x22a>
     b06:	44 24       	eor	r4, r4
     b08:	43 94       	inc	r4
     b0a:	41 0e       	add	r4, r17
     b0c:	81 2f       	mov	r24, r17
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	c8 16       	cp	r12, r24
     b12:	d9 06       	cpc	r13, r25
     b14:	2c f4       	brge	.+10     	; 0xb20 <vfprintf+0x228>
     b16:	1c 19       	sub	r17, r12
     b18:	04 c0       	rjmp	.+8      	; 0xb22 <vfprintf+0x22a>
     b1a:	44 24       	eor	r4, r4
     b1c:	43 94       	inc	r4
     b1e:	01 c0       	rjmp	.+2      	; 0xb22 <vfprintf+0x22a>
     b20:	10 e0       	ldi	r17, 0x00	; 0
     b22:	97 fe       	sbrs	r9, 7
     b24:	06 c0       	rjmp	.+12     	; 0xb32 <vfprintf+0x23a>
     b26:	1c 14       	cp	r1, r12
     b28:	1d 04       	cpc	r1, r13
     b2a:	34 f4       	brge	.+12     	; 0xb38 <vfprintf+0x240>
     b2c:	c6 01       	movw	r24, r12
     b2e:	01 96       	adiw	r24, 0x01	; 1
     b30:	05 c0       	rjmp	.+10     	; 0xb3c <vfprintf+0x244>
     b32:	85 e0       	ldi	r24, 0x05	; 5
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	02 c0       	rjmp	.+4      	; 0xb3c <vfprintf+0x244>
     b38:	81 e0       	ldi	r24, 0x01	; 1
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	01 11       	cpse	r16, r1
     b3e:	01 96       	adiw	r24, 0x01	; 1
     b40:	11 23       	and	r17, r17
     b42:	31 f0       	breq	.+12     	; 0xb50 <vfprintf+0x258>
     b44:	21 2f       	mov	r18, r17
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	2f 5f       	subi	r18, 0xFF	; 255
     b4a:	3f 4f       	sbci	r19, 0xFF	; 255
     b4c:	82 0f       	add	r24, r18
     b4e:	93 1f       	adc	r25, r19
     b50:	25 2d       	mov	r18, r5
     b52:	30 e0       	ldi	r19, 0x00	; 0
     b54:	82 17       	cp	r24, r18
     b56:	93 07       	cpc	r25, r19
     b58:	14 f4       	brge	.+4      	; 0xb5e <vfprintf+0x266>
     b5a:	58 1a       	sub	r5, r24
     b5c:	01 c0       	rjmp	.+2      	; 0xb60 <vfprintf+0x268>
     b5e:	51 2c       	mov	r5, r1
     b60:	89 2d       	mov	r24, r9
     b62:	89 70       	andi	r24, 0x09	; 9
     b64:	49 f4       	brne	.+18     	; 0xb78 <vfprintf+0x280>
     b66:	55 20       	and	r5, r5
     b68:	39 f0       	breq	.+14     	; 0xb78 <vfprintf+0x280>
     b6a:	b7 01       	movw	r22, r14
     b6c:	80 e2       	ldi	r24, 0x20	; 32
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     b74:	5a 94       	dec	r5
     b76:	f7 cf       	rjmp	.-18     	; 0xb66 <vfprintf+0x26e>
     b78:	00 23       	and	r16, r16
     b7a:	29 f0       	breq	.+10     	; 0xb86 <vfprintf+0x28e>
     b7c:	b7 01       	movw	r22, r14
     b7e:	80 2f       	mov	r24, r16
     b80:	90 e0       	ldi	r25, 0x00	; 0
     b82:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     b86:	93 fc       	sbrc	r9, 3
     b88:	09 c0       	rjmp	.+18     	; 0xb9c <vfprintf+0x2a4>
     b8a:	55 20       	and	r5, r5
     b8c:	39 f0       	breq	.+14     	; 0xb9c <vfprintf+0x2a4>
     b8e:	b7 01       	movw	r22, r14
     b90:	80 e3       	ldi	r24, 0x30	; 48
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     b98:	5a 94       	dec	r5
     b9a:	f7 cf       	rjmp	.-18     	; 0xb8a <vfprintf+0x292>
     b9c:	97 fe       	sbrs	r9, 7
     b9e:	4c c0       	rjmp	.+152    	; 0xc38 <vfprintf+0x340>
     ba0:	46 01       	movw	r8, r12
     ba2:	d7 fe       	sbrs	r13, 7
     ba4:	02 c0       	rjmp	.+4      	; 0xbaa <vfprintf+0x2b2>
     ba6:	81 2c       	mov	r8, r1
     ba8:	91 2c       	mov	r9, r1
     baa:	c6 01       	movw	r24, r12
     bac:	88 19       	sub	r24, r8
     bae:	99 09       	sbc	r25, r9
     bb0:	f3 01       	movw	r30, r6
     bb2:	e8 0f       	add	r30, r24
     bb4:	f9 1f       	adc	r31, r25
     bb6:	fe 87       	std	Y+14, r31	; 0x0e
     bb8:	ed 87       	std	Y+13, r30	; 0x0d
     bba:	96 01       	movw	r18, r12
     bbc:	24 19       	sub	r18, r4
     bbe:	31 09       	sbc	r19, r1
     bc0:	38 8b       	std	Y+16, r19	; 0x10
     bc2:	2f 87       	std	Y+15, r18	; 0x0f
     bc4:	01 2f       	mov	r16, r17
     bc6:	10 e0       	ldi	r17, 0x00	; 0
     bc8:	11 95       	neg	r17
     bca:	01 95       	neg	r16
     bcc:	11 09       	sbc	r17, r1
     bce:	3f ef       	ldi	r19, 0xFF	; 255
     bd0:	83 16       	cp	r8, r19
     bd2:	93 06       	cpc	r9, r19
     bd4:	29 f4       	brne	.+10     	; 0xbe0 <vfprintf+0x2e8>
     bd6:	b7 01       	movw	r22, r14
     bd8:	8e e2       	ldi	r24, 0x2E	; 46
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     be0:	c8 14       	cp	r12, r8
     be2:	d9 04       	cpc	r13, r9
     be4:	4c f0       	brlt	.+18     	; 0xbf8 <vfprintf+0x300>
     be6:	8f 85       	ldd	r24, Y+15	; 0x0f
     be8:	98 89       	ldd	r25, Y+16	; 0x10
     bea:	88 15       	cp	r24, r8
     bec:	99 05       	cpc	r25, r9
     bee:	24 f4       	brge	.+8      	; 0xbf8 <vfprintf+0x300>
     bf0:	ed 85       	ldd	r30, Y+13	; 0x0d
     bf2:	fe 85       	ldd	r31, Y+14	; 0x0e
     bf4:	81 81       	ldd	r24, Z+1	; 0x01
     bf6:	01 c0       	rjmp	.+2      	; 0xbfa <vfprintf+0x302>
     bf8:	80 e3       	ldi	r24, 0x30	; 48
     bfa:	f1 e0       	ldi	r31, 0x01	; 1
     bfc:	8f 1a       	sub	r8, r31
     bfe:	91 08       	sbc	r9, r1
     c00:	2d 85       	ldd	r18, Y+13	; 0x0d
     c02:	3e 85       	ldd	r19, Y+14	; 0x0e
     c04:	2f 5f       	subi	r18, 0xFF	; 255
     c06:	3f 4f       	sbci	r19, 0xFF	; 255
     c08:	3e 87       	std	Y+14, r19	; 0x0e
     c0a:	2d 87       	std	Y+13, r18	; 0x0d
     c0c:	80 16       	cp	r8, r16
     c0e:	91 06       	cpc	r9, r17
     c10:	2c f0       	brlt	.+10     	; 0xc1c <vfprintf+0x324>
     c12:	b7 01       	movw	r22, r14
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     c1a:	d9 cf       	rjmp	.-78     	; 0xbce <vfprintf+0x2d6>
     c1c:	c8 14       	cp	r12, r8
     c1e:	d9 04       	cpc	r13, r9
     c20:	41 f4       	brne	.+16     	; 0xc32 <vfprintf+0x33a>
     c22:	9a 81       	ldd	r25, Y+2	; 0x02
     c24:	96 33       	cpi	r25, 0x36	; 54
     c26:	20 f4       	brcc	.+8      	; 0xc30 <vfprintf+0x338>
     c28:	95 33       	cpi	r25, 0x35	; 53
     c2a:	19 f4       	brne	.+6      	; 0xc32 <vfprintf+0x33a>
     c2c:	3c 85       	ldd	r19, Y+12	; 0x0c
     c2e:	34 ff       	sbrs	r19, 4
     c30:	81 e3       	ldi	r24, 0x31	; 49
     c32:	b7 01       	movw	r22, r14
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	4e c0       	rjmp	.+156    	; 0xcd4 <vfprintf+0x3dc>
     c38:	8a 81       	ldd	r24, Y+2	; 0x02
     c3a:	81 33       	cpi	r24, 0x31	; 49
     c3c:	19 f0       	breq	.+6      	; 0xc44 <vfprintf+0x34c>
     c3e:	9c 85       	ldd	r25, Y+12	; 0x0c
     c40:	9f 7e       	andi	r25, 0xEF	; 239
     c42:	9c 87       	std	Y+12, r25	; 0x0c
     c44:	b7 01       	movw	r22, r14
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     c4c:	11 11       	cpse	r17, r1
     c4e:	05 c0       	rjmp	.+10     	; 0xc5a <vfprintf+0x362>
     c50:	94 fc       	sbrc	r9, 4
     c52:	18 c0       	rjmp	.+48     	; 0xc84 <vfprintf+0x38c>
     c54:	85 e6       	ldi	r24, 0x65	; 101
     c56:	90 e0       	ldi	r25, 0x00	; 0
     c58:	17 c0       	rjmp	.+46     	; 0xc88 <vfprintf+0x390>
     c5a:	b7 01       	movw	r22, r14
     c5c:	8e e2       	ldi	r24, 0x2E	; 46
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     c64:	1e 5f       	subi	r17, 0xFE	; 254
     c66:	82 e0       	ldi	r24, 0x02	; 2
     c68:	01 e0       	ldi	r16, 0x01	; 1
     c6a:	08 0f       	add	r16, r24
     c6c:	f3 01       	movw	r30, r6
     c6e:	e8 0f       	add	r30, r24
     c70:	f1 1d       	adc	r31, r1
     c72:	80 81       	ld	r24, Z
     c74:	b7 01       	movw	r22, r14
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     c7c:	80 2f       	mov	r24, r16
     c7e:	01 13       	cpse	r16, r17
     c80:	f3 cf       	rjmp	.-26     	; 0xc68 <vfprintf+0x370>
     c82:	e6 cf       	rjmp	.-52     	; 0xc50 <vfprintf+0x358>
     c84:	85 e4       	ldi	r24, 0x45	; 69
     c86:	90 e0       	ldi	r25, 0x00	; 0
     c88:	b7 01       	movw	r22, r14
     c8a:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     c8e:	d7 fc       	sbrc	r13, 7
     c90:	06 c0       	rjmp	.+12     	; 0xc9e <vfprintf+0x3a6>
     c92:	c1 14       	cp	r12, r1
     c94:	d1 04       	cpc	r13, r1
     c96:	41 f4       	brne	.+16     	; 0xca8 <vfprintf+0x3b0>
     c98:	ec 85       	ldd	r30, Y+12	; 0x0c
     c9a:	e4 ff       	sbrs	r30, 4
     c9c:	05 c0       	rjmp	.+10     	; 0xca8 <vfprintf+0x3b0>
     c9e:	d1 94       	neg	r13
     ca0:	c1 94       	neg	r12
     ca2:	d1 08       	sbc	r13, r1
     ca4:	8d e2       	ldi	r24, 0x2D	; 45
     ca6:	01 c0       	rjmp	.+2      	; 0xcaa <vfprintf+0x3b2>
     ca8:	8b e2       	ldi	r24, 0x2B	; 43
     caa:	b7 01       	movw	r22, r14
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     cb2:	80 e3       	ldi	r24, 0x30	; 48
     cb4:	2a e0       	ldi	r18, 0x0A	; 10
     cb6:	c2 16       	cp	r12, r18
     cb8:	d1 04       	cpc	r13, r1
     cba:	2c f0       	brlt	.+10     	; 0xcc6 <vfprintf+0x3ce>
     cbc:	8f 5f       	subi	r24, 0xFF	; 255
     cbe:	fa e0       	ldi	r31, 0x0A	; 10
     cc0:	cf 1a       	sub	r12, r31
     cc2:	d1 08       	sbc	r13, r1
     cc4:	f7 cf       	rjmp	.-18     	; 0xcb4 <vfprintf+0x3bc>
     cc6:	b7 01       	movw	r22, r14
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     cce:	b7 01       	movw	r22, r14
     cd0:	c6 01       	movw	r24, r12
     cd2:	c0 96       	adiw	r24, 0x30	; 48
     cd4:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     cd8:	54 c1       	rjmp	.+680    	; 0xf82 <vfprintf+0x68a>
     cda:	83 36       	cpi	r24, 0x63	; 99
     cdc:	31 f0       	breq	.+12     	; 0xcea <vfprintf+0x3f2>
     cde:	83 37       	cpi	r24, 0x73	; 115
     ce0:	79 f0       	breq	.+30     	; 0xd00 <vfprintf+0x408>
     ce2:	83 35       	cpi	r24, 0x53	; 83
     ce4:	09 f0       	breq	.+2      	; 0xce8 <vfprintf+0x3f0>
     ce6:	56 c0       	rjmp	.+172    	; 0xd94 <vfprintf+0x49c>
     ce8:	20 c0       	rjmp	.+64     	; 0xd2a <vfprintf+0x432>
     cea:	56 01       	movw	r10, r12
     cec:	32 e0       	ldi	r19, 0x02	; 2
     cee:	a3 0e       	add	r10, r19
     cf0:	b1 1c       	adc	r11, r1
     cf2:	f6 01       	movw	r30, r12
     cf4:	80 81       	ld	r24, Z
     cf6:	89 83       	std	Y+1, r24	; 0x01
     cf8:	01 e0       	ldi	r16, 0x01	; 1
     cfa:	10 e0       	ldi	r17, 0x00	; 0
     cfc:	63 01       	movw	r12, r6
     cfe:	12 c0       	rjmp	.+36     	; 0xd24 <vfprintf+0x42c>
     d00:	56 01       	movw	r10, r12
     d02:	f2 e0       	ldi	r31, 0x02	; 2
     d04:	af 0e       	add	r10, r31
     d06:	b1 1c       	adc	r11, r1
     d08:	f6 01       	movw	r30, r12
     d0a:	c0 80       	ld	r12, Z
     d0c:	d1 80       	ldd	r13, Z+1	; 0x01
     d0e:	96 fe       	sbrs	r9, 6
     d10:	03 c0       	rjmp	.+6      	; 0xd18 <vfprintf+0x420>
     d12:	61 2f       	mov	r22, r17
     d14:	70 e0       	ldi	r23, 0x00	; 0
     d16:	02 c0       	rjmp	.+4      	; 0xd1c <vfprintf+0x424>
     d18:	6f ef       	ldi	r22, 0xFF	; 255
     d1a:	7f ef       	ldi	r23, 0xFF	; 255
     d1c:	c6 01       	movw	r24, r12
     d1e:	0e 94 89 0a 	call	0x1512	; 0x1512 <strnlen>
     d22:	8c 01       	movw	r16, r24
     d24:	f9 2d       	mov	r31, r9
     d26:	ff 77       	andi	r31, 0x7F	; 127
     d28:	14 c0       	rjmp	.+40     	; 0xd52 <vfprintf+0x45a>
     d2a:	56 01       	movw	r10, r12
     d2c:	22 e0       	ldi	r18, 0x02	; 2
     d2e:	a2 0e       	add	r10, r18
     d30:	b1 1c       	adc	r11, r1
     d32:	f6 01       	movw	r30, r12
     d34:	c0 80       	ld	r12, Z
     d36:	d1 80       	ldd	r13, Z+1	; 0x01
     d38:	96 fe       	sbrs	r9, 6
     d3a:	03 c0       	rjmp	.+6      	; 0xd42 <vfprintf+0x44a>
     d3c:	61 2f       	mov	r22, r17
     d3e:	70 e0       	ldi	r23, 0x00	; 0
     d40:	02 c0       	rjmp	.+4      	; 0xd46 <vfprintf+0x44e>
     d42:	6f ef       	ldi	r22, 0xFF	; 255
     d44:	7f ef       	ldi	r23, 0xFF	; 255
     d46:	c6 01       	movw	r24, r12
     d48:	0e 94 7e 0a 	call	0x14fc	; 0x14fc <strnlen_P>
     d4c:	8c 01       	movw	r16, r24
     d4e:	f9 2d       	mov	r31, r9
     d50:	f0 68       	ori	r31, 0x80	; 128
     d52:	9f 2e       	mov	r9, r31
     d54:	f3 fd       	sbrc	r31, 3
     d56:	1a c0       	rjmp	.+52     	; 0xd8c <vfprintf+0x494>
     d58:	85 2d       	mov	r24, r5
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	08 17       	cp	r16, r24
     d5e:	19 07       	cpc	r17, r25
     d60:	a8 f4       	brcc	.+42     	; 0xd8c <vfprintf+0x494>
     d62:	b7 01       	movw	r22, r14
     d64:	80 e2       	ldi	r24, 0x20	; 32
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     d6c:	5a 94       	dec	r5
     d6e:	f4 cf       	rjmp	.-24     	; 0xd58 <vfprintf+0x460>
     d70:	f6 01       	movw	r30, r12
     d72:	97 fc       	sbrc	r9, 7
     d74:	85 91       	lpm	r24, Z+
     d76:	97 fe       	sbrs	r9, 7
     d78:	81 91       	ld	r24, Z+
     d7a:	6f 01       	movw	r12, r30
     d7c:	b7 01       	movw	r22, r14
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     d84:	51 10       	cpse	r5, r1
     d86:	5a 94       	dec	r5
     d88:	01 50       	subi	r16, 0x01	; 1
     d8a:	11 09       	sbc	r17, r1
     d8c:	01 15       	cp	r16, r1
     d8e:	11 05       	cpc	r17, r1
     d90:	79 f7       	brne	.-34     	; 0xd70 <vfprintf+0x478>
     d92:	f7 c0       	rjmp	.+494    	; 0xf82 <vfprintf+0x68a>
     d94:	84 36       	cpi	r24, 0x64	; 100
     d96:	11 f0       	breq	.+4      	; 0xd9c <vfprintf+0x4a4>
     d98:	89 36       	cpi	r24, 0x69	; 105
     d9a:	61 f5       	brne	.+88     	; 0xdf4 <vfprintf+0x4fc>
     d9c:	56 01       	movw	r10, r12
     d9e:	97 fe       	sbrs	r9, 7
     da0:	09 c0       	rjmp	.+18     	; 0xdb4 <vfprintf+0x4bc>
     da2:	24 e0       	ldi	r18, 0x04	; 4
     da4:	a2 0e       	add	r10, r18
     da6:	b1 1c       	adc	r11, r1
     da8:	f6 01       	movw	r30, r12
     daa:	60 81       	ld	r22, Z
     dac:	71 81       	ldd	r23, Z+1	; 0x01
     dae:	82 81       	ldd	r24, Z+2	; 0x02
     db0:	93 81       	ldd	r25, Z+3	; 0x03
     db2:	0a c0       	rjmp	.+20     	; 0xdc8 <vfprintf+0x4d0>
     db4:	f2 e0       	ldi	r31, 0x02	; 2
     db6:	af 0e       	add	r10, r31
     db8:	b1 1c       	adc	r11, r1
     dba:	f6 01       	movw	r30, r12
     dbc:	60 81       	ld	r22, Z
     dbe:	71 81       	ldd	r23, Z+1	; 0x01
     dc0:	07 2e       	mov	r0, r23
     dc2:	00 0c       	add	r0, r0
     dc4:	88 0b       	sbc	r24, r24
     dc6:	99 0b       	sbc	r25, r25
     dc8:	f9 2d       	mov	r31, r9
     dca:	ff 76       	andi	r31, 0x6F	; 111
     dcc:	9f 2e       	mov	r9, r31
     dce:	97 ff       	sbrs	r25, 7
     dd0:	09 c0       	rjmp	.+18     	; 0xde4 <vfprintf+0x4ec>
     dd2:	90 95       	com	r25
     dd4:	80 95       	com	r24
     dd6:	70 95       	com	r23
     dd8:	61 95       	neg	r22
     dda:	7f 4f       	sbci	r23, 0xFF	; 255
     ddc:	8f 4f       	sbci	r24, 0xFF	; 255
     dde:	9f 4f       	sbci	r25, 0xFF	; 255
     de0:	f0 68       	ori	r31, 0x80	; 128
     de2:	9f 2e       	mov	r9, r31
     de4:	2a e0       	ldi	r18, 0x0A	; 10
     de6:	30 e0       	ldi	r19, 0x00	; 0
     de8:	a3 01       	movw	r20, r6
     dea:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <__ultoa_invert>
     dee:	c8 2e       	mov	r12, r24
     df0:	c6 18       	sub	r12, r6
     df2:	3f c0       	rjmp	.+126    	; 0xe72 <vfprintf+0x57a>
     df4:	09 2d       	mov	r16, r9
     df6:	85 37       	cpi	r24, 0x75	; 117
     df8:	21 f4       	brne	.+8      	; 0xe02 <vfprintf+0x50a>
     dfa:	0f 7e       	andi	r16, 0xEF	; 239
     dfc:	2a e0       	ldi	r18, 0x0A	; 10
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	1d c0       	rjmp	.+58     	; 0xe3c <vfprintf+0x544>
     e02:	09 7f       	andi	r16, 0xF9	; 249
     e04:	8f 36       	cpi	r24, 0x6F	; 111
     e06:	91 f0       	breq	.+36     	; 0xe2c <vfprintf+0x534>
     e08:	18 f4       	brcc	.+6      	; 0xe10 <vfprintf+0x518>
     e0a:	88 35       	cpi	r24, 0x58	; 88
     e0c:	59 f0       	breq	.+22     	; 0xe24 <vfprintf+0x52c>
     e0e:	c3 c0       	rjmp	.+390    	; 0xf96 <vfprintf+0x69e>
     e10:	80 37       	cpi	r24, 0x70	; 112
     e12:	19 f0       	breq	.+6      	; 0xe1a <vfprintf+0x522>
     e14:	88 37       	cpi	r24, 0x78	; 120
     e16:	11 f0       	breq	.+4      	; 0xe1c <vfprintf+0x524>
     e18:	be c0       	rjmp	.+380    	; 0xf96 <vfprintf+0x69e>
     e1a:	00 61       	ori	r16, 0x10	; 16
     e1c:	04 ff       	sbrs	r16, 4
     e1e:	09 c0       	rjmp	.+18     	; 0xe32 <vfprintf+0x53a>
     e20:	04 60       	ori	r16, 0x04	; 4
     e22:	07 c0       	rjmp	.+14     	; 0xe32 <vfprintf+0x53a>
     e24:	94 fe       	sbrs	r9, 4
     e26:	08 c0       	rjmp	.+16     	; 0xe38 <vfprintf+0x540>
     e28:	06 60       	ori	r16, 0x06	; 6
     e2a:	06 c0       	rjmp	.+12     	; 0xe38 <vfprintf+0x540>
     e2c:	28 e0       	ldi	r18, 0x08	; 8
     e2e:	30 e0       	ldi	r19, 0x00	; 0
     e30:	05 c0       	rjmp	.+10     	; 0xe3c <vfprintf+0x544>
     e32:	20 e1       	ldi	r18, 0x10	; 16
     e34:	30 e0       	ldi	r19, 0x00	; 0
     e36:	02 c0       	rjmp	.+4      	; 0xe3c <vfprintf+0x544>
     e38:	20 e1       	ldi	r18, 0x10	; 16
     e3a:	32 e0       	ldi	r19, 0x02	; 2
     e3c:	56 01       	movw	r10, r12
     e3e:	07 ff       	sbrs	r16, 7
     e40:	09 c0       	rjmp	.+18     	; 0xe54 <vfprintf+0x55c>
     e42:	84 e0       	ldi	r24, 0x04	; 4
     e44:	a8 0e       	add	r10, r24
     e46:	b1 1c       	adc	r11, r1
     e48:	f6 01       	movw	r30, r12
     e4a:	60 81       	ld	r22, Z
     e4c:	71 81       	ldd	r23, Z+1	; 0x01
     e4e:	82 81       	ldd	r24, Z+2	; 0x02
     e50:	93 81       	ldd	r25, Z+3	; 0x03
     e52:	08 c0       	rjmp	.+16     	; 0xe64 <vfprintf+0x56c>
     e54:	f2 e0       	ldi	r31, 0x02	; 2
     e56:	af 0e       	add	r10, r31
     e58:	b1 1c       	adc	r11, r1
     e5a:	f6 01       	movw	r30, r12
     e5c:	60 81       	ld	r22, Z
     e5e:	71 81       	ldd	r23, Z+1	; 0x01
     e60:	80 e0       	ldi	r24, 0x00	; 0
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	a3 01       	movw	r20, r6
     e66:	0e 94 f5 0a 	call	0x15ea	; 0x15ea <__ultoa_invert>
     e6a:	c8 2e       	mov	r12, r24
     e6c:	c6 18       	sub	r12, r6
     e6e:	0f 77       	andi	r16, 0x7F	; 127
     e70:	90 2e       	mov	r9, r16
     e72:	96 fe       	sbrs	r9, 6
     e74:	0b c0       	rjmp	.+22     	; 0xe8c <vfprintf+0x594>
     e76:	09 2d       	mov	r16, r9
     e78:	0e 7f       	andi	r16, 0xFE	; 254
     e7a:	c1 16       	cp	r12, r17
     e7c:	50 f4       	brcc	.+20     	; 0xe92 <vfprintf+0x59a>
     e7e:	94 fe       	sbrs	r9, 4
     e80:	0a c0       	rjmp	.+20     	; 0xe96 <vfprintf+0x59e>
     e82:	92 fc       	sbrc	r9, 2
     e84:	08 c0       	rjmp	.+16     	; 0xe96 <vfprintf+0x59e>
     e86:	09 2d       	mov	r16, r9
     e88:	0e 7e       	andi	r16, 0xEE	; 238
     e8a:	05 c0       	rjmp	.+10     	; 0xe96 <vfprintf+0x59e>
     e8c:	dc 2c       	mov	r13, r12
     e8e:	09 2d       	mov	r16, r9
     e90:	03 c0       	rjmp	.+6      	; 0xe98 <vfprintf+0x5a0>
     e92:	dc 2c       	mov	r13, r12
     e94:	01 c0       	rjmp	.+2      	; 0xe98 <vfprintf+0x5a0>
     e96:	d1 2e       	mov	r13, r17
     e98:	04 ff       	sbrs	r16, 4
     e9a:	0d c0       	rjmp	.+26     	; 0xeb6 <vfprintf+0x5be>
     e9c:	fe 01       	movw	r30, r28
     e9e:	ec 0d       	add	r30, r12
     ea0:	f1 1d       	adc	r31, r1
     ea2:	80 81       	ld	r24, Z
     ea4:	80 33       	cpi	r24, 0x30	; 48
     ea6:	11 f4       	brne	.+4      	; 0xeac <vfprintf+0x5b4>
     ea8:	09 7e       	andi	r16, 0xE9	; 233
     eaa:	09 c0       	rjmp	.+18     	; 0xebe <vfprintf+0x5c6>
     eac:	02 ff       	sbrs	r16, 2
     eae:	06 c0       	rjmp	.+12     	; 0xebc <vfprintf+0x5c4>
     eb0:	d3 94       	inc	r13
     eb2:	d3 94       	inc	r13
     eb4:	04 c0       	rjmp	.+8      	; 0xebe <vfprintf+0x5c6>
     eb6:	80 2f       	mov	r24, r16
     eb8:	86 78       	andi	r24, 0x86	; 134
     eba:	09 f0       	breq	.+2      	; 0xebe <vfprintf+0x5c6>
     ebc:	d3 94       	inc	r13
     ebe:	03 fd       	sbrc	r16, 3
     ec0:	11 c0       	rjmp	.+34     	; 0xee4 <vfprintf+0x5ec>
     ec2:	00 ff       	sbrs	r16, 0
     ec4:	06 c0       	rjmp	.+12     	; 0xed2 <vfprintf+0x5da>
     ec6:	1c 2d       	mov	r17, r12
     ec8:	d5 14       	cp	r13, r5
     eca:	80 f4       	brcc	.+32     	; 0xeec <vfprintf+0x5f4>
     ecc:	15 0d       	add	r17, r5
     ece:	1d 19       	sub	r17, r13
     ed0:	0d c0       	rjmp	.+26     	; 0xeec <vfprintf+0x5f4>
     ed2:	d5 14       	cp	r13, r5
     ed4:	58 f4       	brcc	.+22     	; 0xeec <vfprintf+0x5f4>
     ed6:	b7 01       	movw	r22, r14
     ed8:	80 e2       	ldi	r24, 0x20	; 32
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     ee0:	d3 94       	inc	r13
     ee2:	f7 cf       	rjmp	.-18     	; 0xed2 <vfprintf+0x5da>
     ee4:	d5 14       	cp	r13, r5
     ee6:	10 f4       	brcc	.+4      	; 0xeec <vfprintf+0x5f4>
     ee8:	5d 18       	sub	r5, r13
     eea:	01 c0       	rjmp	.+2      	; 0xeee <vfprintf+0x5f6>
     eec:	51 2c       	mov	r5, r1
     eee:	04 ff       	sbrs	r16, 4
     ef0:	10 c0       	rjmp	.+32     	; 0xf12 <vfprintf+0x61a>
     ef2:	b7 01       	movw	r22, r14
     ef4:	80 e3       	ldi	r24, 0x30	; 48
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     efc:	02 ff       	sbrs	r16, 2
     efe:	17 c0       	rjmp	.+46     	; 0xf2e <vfprintf+0x636>
     f00:	01 fd       	sbrc	r16, 1
     f02:	03 c0       	rjmp	.+6      	; 0xf0a <vfprintf+0x612>
     f04:	88 e7       	ldi	r24, 0x78	; 120
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	02 c0       	rjmp	.+4      	; 0xf0e <vfprintf+0x616>
     f0a:	88 e5       	ldi	r24, 0x58	; 88
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	b7 01       	movw	r22, r14
     f10:	0c c0       	rjmp	.+24     	; 0xf2a <vfprintf+0x632>
     f12:	80 2f       	mov	r24, r16
     f14:	86 78       	andi	r24, 0x86	; 134
     f16:	59 f0       	breq	.+22     	; 0xf2e <vfprintf+0x636>
     f18:	01 ff       	sbrs	r16, 1
     f1a:	02 c0       	rjmp	.+4      	; 0xf20 <vfprintf+0x628>
     f1c:	8b e2       	ldi	r24, 0x2B	; 43
     f1e:	01 c0       	rjmp	.+2      	; 0xf22 <vfprintf+0x62a>
     f20:	80 e2       	ldi	r24, 0x20	; 32
     f22:	07 fd       	sbrc	r16, 7
     f24:	8d e2       	ldi	r24, 0x2D	; 45
     f26:	b7 01       	movw	r22, r14
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     f2e:	c1 16       	cp	r12, r17
     f30:	38 f4       	brcc	.+14     	; 0xf40 <vfprintf+0x648>
     f32:	b7 01       	movw	r22, r14
     f34:	80 e3       	ldi	r24, 0x30	; 48
     f36:	90 e0       	ldi	r25, 0x00	; 0
     f38:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     f3c:	11 50       	subi	r17, 0x01	; 1
     f3e:	f7 cf       	rjmp	.-18     	; 0xf2e <vfprintf+0x636>
     f40:	ca 94       	dec	r12
     f42:	f3 01       	movw	r30, r6
     f44:	ec 0d       	add	r30, r12
     f46:	f1 1d       	adc	r31, r1
     f48:	80 81       	ld	r24, Z
     f4a:	b7 01       	movw	r22, r14
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     f52:	c1 10       	cpse	r12, r1
     f54:	f5 cf       	rjmp	.-22     	; 0xf40 <vfprintf+0x648>
     f56:	15 c0       	rjmp	.+42     	; 0xf82 <vfprintf+0x68a>
     f58:	f4 e0       	ldi	r31, 0x04	; 4
     f5a:	f5 15       	cp	r31, r5
     f5c:	60 f5       	brcc	.+88     	; 0xfb6 <vfprintf+0x6be>
     f5e:	84 e0       	ldi	r24, 0x04	; 4
     f60:	58 1a       	sub	r5, r24
     f62:	93 fe       	sbrs	r9, 3
     f64:	1f c0       	rjmp	.+62     	; 0xfa4 <vfprintf+0x6ac>
     f66:	01 11       	cpse	r16, r1
     f68:	27 c0       	rjmp	.+78     	; 0xfb8 <vfprintf+0x6c0>
     f6a:	2c 85       	ldd	r18, Y+12	; 0x0c
     f6c:	23 ff       	sbrs	r18, 3
     f6e:	2a c0       	rjmp	.+84     	; 0xfc4 <vfprintf+0x6cc>
     f70:	0c e6       	ldi	r16, 0x6C	; 108
     f72:	10 e0       	ldi	r17, 0x00	; 0
     f74:	39 2d       	mov	r19, r9
     f76:	30 71       	andi	r19, 0x10	; 16
     f78:	93 2e       	mov	r9, r19
     f7a:	f8 01       	movw	r30, r16
     f7c:	84 91       	lpm	r24, Z
     f7e:	81 11       	cpse	r24, r1
     f80:	24 c0       	rjmp	.+72     	; 0xfca <vfprintf+0x6d2>
     f82:	55 20       	and	r5, r5
     f84:	09 f4       	brne	.+2      	; 0xf88 <vfprintf+0x690>
     f86:	e4 cc       	rjmp	.-1592   	; 0x950 <vfprintf+0x58>
     f88:	b7 01       	movw	r22, r14
     f8a:	80 e2       	ldi	r24, 0x20	; 32
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     f92:	5a 94       	dec	r5
     f94:	f6 cf       	rjmp	.-20     	; 0xf82 <vfprintf+0x68a>
     f96:	f7 01       	movw	r30, r14
     f98:	86 81       	ldd	r24, Z+6	; 0x06
     f9a:	97 81       	ldd	r25, Z+7	; 0x07
     f9c:	26 c0       	rjmp	.+76     	; 0xfea <vfprintf+0x6f2>
     f9e:	8f ef       	ldi	r24, 0xFF	; 255
     fa0:	9f ef       	ldi	r25, 0xFF	; 255
     fa2:	23 c0       	rjmp	.+70     	; 0xfea <vfprintf+0x6f2>
     fa4:	b7 01       	movw	r22, r14
     fa6:	80 e2       	ldi	r24, 0x20	; 32
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     fae:	5a 94       	dec	r5
     fb0:	51 10       	cpse	r5, r1
     fb2:	f8 cf       	rjmp	.-16     	; 0xfa4 <vfprintf+0x6ac>
     fb4:	d8 cf       	rjmp	.-80     	; 0xf66 <vfprintf+0x66e>
     fb6:	51 2c       	mov	r5, r1
     fb8:	b7 01       	movw	r22, r14
     fba:	80 2f       	mov	r24, r16
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     fc2:	d3 cf       	rjmp	.-90     	; 0xf6a <vfprintf+0x672>
     fc4:	00 e7       	ldi	r16, 0x70	; 112
     fc6:	10 e0       	ldi	r17, 0x00	; 0
     fc8:	d5 cf       	rjmp	.-86     	; 0xf74 <vfprintf+0x67c>
     fca:	91 10       	cpse	r9, r1
     fcc:	80 52       	subi	r24, 0x20	; 32
     fce:	b7 01       	movw	r22, r14
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	0e 94 b9 0a 	call	0x1572	; 0x1572 <fputc>
     fd6:	0f 5f       	subi	r16, 0xFF	; 255
     fd8:	1f 4f       	sbci	r17, 0xFF	; 255
     fda:	cf cf       	rjmp	.-98     	; 0xf7a <vfprintf+0x682>
     fdc:	23 e0       	ldi	r18, 0x03	; 3
     fde:	25 15       	cp	r18, r5
     fe0:	10 f4       	brcc	.+4      	; 0xfe6 <vfprintf+0x6ee>
     fe2:	83 e0       	ldi	r24, 0x03	; 3
     fe4:	bd cf       	rjmp	.-134    	; 0xf60 <vfprintf+0x668>
     fe6:	51 2c       	mov	r5, r1
     fe8:	c0 cf       	rjmp	.-128    	; 0xf6a <vfprintf+0x672>
     fea:	60 96       	adiw	r28, 0x10	; 16
     fec:	e2 e1       	ldi	r30, 0x12	; 18
     fee:	0c 94 69 09 	jmp	0x12d2	; 0x12d2 <__epilogue_restores__>

00000ff2 <__divsf3>:
     ff2:	0e 94 0d 08 	call	0x101a	; 0x101a <__divsf3x>
     ff6:	0c 94 ee 08 	jmp	0x11dc	; 0x11dc <__fp_round>
     ffa:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__fp_pscB>
     ffe:	58 f0       	brcs	.+22     	; 0x1016 <__divsf3+0x24>
    1000:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__fp_pscA>
    1004:	40 f0       	brcs	.+16     	; 0x1016 <__divsf3+0x24>
    1006:	29 f4       	brne	.+10     	; 0x1012 <__divsf3+0x20>
    1008:	5f 3f       	cpi	r21, 0xFF	; 255
    100a:	29 f0       	breq	.+10     	; 0x1016 <__divsf3+0x24>
    100c:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__fp_inf>
    1010:	51 11       	cpse	r21, r1
    1012:	0c 94 22 09 	jmp	0x1244	; 0x1244 <__fp_szero>
    1016:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__fp_nan>

0000101a <__divsf3x>:
    101a:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fp_split3>
    101e:	68 f3       	brcs	.-38     	; 0xffa <__divsf3+0x8>

00001020 <__divsf3_pse>:
    1020:	99 23       	and	r25, r25
    1022:	b1 f3       	breq	.-20     	; 0x1010 <__divsf3+0x1e>
    1024:	55 23       	and	r21, r21
    1026:	91 f3       	breq	.-28     	; 0x100c <__divsf3+0x1a>
    1028:	95 1b       	sub	r25, r21
    102a:	55 0b       	sbc	r21, r21
    102c:	bb 27       	eor	r27, r27
    102e:	aa 27       	eor	r26, r26
    1030:	62 17       	cp	r22, r18
    1032:	73 07       	cpc	r23, r19
    1034:	84 07       	cpc	r24, r20
    1036:	38 f0       	brcs	.+14     	; 0x1046 <__divsf3_pse+0x26>
    1038:	9f 5f       	subi	r25, 0xFF	; 255
    103a:	5f 4f       	sbci	r21, 0xFF	; 255
    103c:	22 0f       	add	r18, r18
    103e:	33 1f       	adc	r19, r19
    1040:	44 1f       	adc	r20, r20
    1042:	aa 1f       	adc	r26, r26
    1044:	a9 f3       	breq	.-22     	; 0x1030 <__divsf3_pse+0x10>
    1046:	35 d0       	rcall	.+106    	; 0x10b2 <__divsf3_pse+0x92>
    1048:	0e 2e       	mov	r0, r30
    104a:	3a f0       	brmi	.+14     	; 0x105a <__divsf3_pse+0x3a>
    104c:	e0 e8       	ldi	r30, 0x80	; 128
    104e:	32 d0       	rcall	.+100    	; 0x10b4 <__divsf3_pse+0x94>
    1050:	91 50       	subi	r25, 0x01	; 1
    1052:	50 40       	sbci	r21, 0x00	; 0
    1054:	e6 95       	lsr	r30
    1056:	00 1c       	adc	r0, r0
    1058:	ca f7       	brpl	.-14     	; 0x104c <__divsf3_pse+0x2c>
    105a:	2b d0       	rcall	.+86     	; 0x10b2 <__divsf3_pse+0x92>
    105c:	fe 2f       	mov	r31, r30
    105e:	29 d0       	rcall	.+82     	; 0x10b2 <__divsf3_pse+0x92>
    1060:	66 0f       	add	r22, r22
    1062:	77 1f       	adc	r23, r23
    1064:	88 1f       	adc	r24, r24
    1066:	bb 1f       	adc	r27, r27
    1068:	26 17       	cp	r18, r22
    106a:	37 07       	cpc	r19, r23
    106c:	48 07       	cpc	r20, r24
    106e:	ab 07       	cpc	r26, r27
    1070:	b0 e8       	ldi	r27, 0x80	; 128
    1072:	09 f0       	breq	.+2      	; 0x1076 <__divsf3_pse+0x56>
    1074:	bb 0b       	sbc	r27, r27
    1076:	80 2d       	mov	r24, r0
    1078:	bf 01       	movw	r22, r30
    107a:	ff 27       	eor	r31, r31
    107c:	93 58       	subi	r25, 0x83	; 131
    107e:	5f 4f       	sbci	r21, 0xFF	; 255
    1080:	3a f0       	brmi	.+14     	; 0x1090 <__divsf3_pse+0x70>
    1082:	9e 3f       	cpi	r25, 0xFE	; 254
    1084:	51 05       	cpc	r21, r1
    1086:	78 f0       	brcs	.+30     	; 0x10a6 <__divsf3_pse+0x86>
    1088:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__fp_inf>
    108c:	0c 94 22 09 	jmp	0x1244	; 0x1244 <__fp_szero>
    1090:	5f 3f       	cpi	r21, 0xFF	; 255
    1092:	e4 f3       	brlt	.-8      	; 0x108c <__divsf3_pse+0x6c>
    1094:	98 3e       	cpi	r25, 0xE8	; 232
    1096:	d4 f3       	brlt	.-12     	; 0x108c <__divsf3_pse+0x6c>
    1098:	86 95       	lsr	r24
    109a:	77 95       	ror	r23
    109c:	67 95       	ror	r22
    109e:	b7 95       	ror	r27
    10a0:	f7 95       	ror	r31
    10a2:	9f 5f       	subi	r25, 0xFF	; 255
    10a4:	c9 f7       	brne	.-14     	; 0x1098 <__divsf3_pse+0x78>
    10a6:	88 0f       	add	r24, r24
    10a8:	91 1d       	adc	r25, r1
    10aa:	96 95       	lsr	r25
    10ac:	87 95       	ror	r24
    10ae:	97 f9       	bld	r25, 7
    10b0:	08 95       	ret
    10b2:	e1 e0       	ldi	r30, 0x01	; 1
    10b4:	66 0f       	add	r22, r22
    10b6:	77 1f       	adc	r23, r23
    10b8:	88 1f       	adc	r24, r24
    10ba:	bb 1f       	adc	r27, r27
    10bc:	62 17       	cp	r22, r18
    10be:	73 07       	cpc	r23, r19
    10c0:	84 07       	cpc	r24, r20
    10c2:	ba 07       	cpc	r27, r26
    10c4:	20 f0       	brcs	.+8      	; 0x10ce <__divsf3_pse+0xae>
    10c6:	62 1b       	sub	r22, r18
    10c8:	73 0b       	sbc	r23, r19
    10ca:	84 0b       	sbc	r24, r20
    10cc:	ba 0b       	sbc	r27, r26
    10ce:	ee 1f       	adc	r30, r30
    10d0:	88 f7       	brcc	.-30     	; 0x10b4 <__divsf3_pse+0x94>
    10d2:	e0 95       	com	r30
    10d4:	08 95       	ret

000010d6 <__fixunssfsi>:
    10d6:	0e 94 07 09 	call	0x120e	; 0x120e <__fp_splitA>
    10da:	88 f0       	brcs	.+34     	; 0x10fe <__fixunssfsi+0x28>
    10dc:	9f 57       	subi	r25, 0x7F	; 127
    10de:	98 f0       	brcs	.+38     	; 0x1106 <__fixunssfsi+0x30>
    10e0:	b9 2f       	mov	r27, r25
    10e2:	99 27       	eor	r25, r25
    10e4:	b7 51       	subi	r27, 0x17	; 23
    10e6:	b0 f0       	brcs	.+44     	; 0x1114 <__fixunssfsi+0x3e>
    10e8:	e1 f0       	breq	.+56     	; 0x1122 <__fixunssfsi+0x4c>
    10ea:	66 0f       	add	r22, r22
    10ec:	77 1f       	adc	r23, r23
    10ee:	88 1f       	adc	r24, r24
    10f0:	99 1f       	adc	r25, r25
    10f2:	1a f0       	brmi	.+6      	; 0x10fa <__fixunssfsi+0x24>
    10f4:	ba 95       	dec	r27
    10f6:	c9 f7       	brne	.-14     	; 0x10ea <__fixunssfsi+0x14>
    10f8:	14 c0       	rjmp	.+40     	; 0x1122 <__fixunssfsi+0x4c>
    10fa:	b1 30       	cpi	r27, 0x01	; 1
    10fc:	91 f0       	breq	.+36     	; 0x1122 <__fixunssfsi+0x4c>
    10fe:	0e 94 21 09 	call	0x1242	; 0x1242 <__fp_zero>
    1102:	b1 e0       	ldi	r27, 0x01	; 1
    1104:	08 95       	ret
    1106:	0c 94 21 09 	jmp	0x1242	; 0x1242 <__fp_zero>
    110a:	67 2f       	mov	r22, r23
    110c:	78 2f       	mov	r23, r24
    110e:	88 27       	eor	r24, r24
    1110:	b8 5f       	subi	r27, 0xF8	; 248
    1112:	39 f0       	breq	.+14     	; 0x1122 <__fixunssfsi+0x4c>
    1114:	b9 3f       	cpi	r27, 0xF9	; 249
    1116:	cc f3       	brlt	.-14     	; 0x110a <__fixunssfsi+0x34>
    1118:	86 95       	lsr	r24
    111a:	77 95       	ror	r23
    111c:	67 95       	ror	r22
    111e:	b3 95       	inc	r27
    1120:	d9 f7       	brne	.-10     	; 0x1118 <__fixunssfsi+0x42>
    1122:	3e f4       	brtc	.+14     	; 0x1132 <__fixunssfsi+0x5c>
    1124:	90 95       	com	r25
    1126:	80 95       	com	r24
    1128:	70 95       	com	r23
    112a:	61 95       	neg	r22
    112c:	7f 4f       	sbci	r23, 0xFF	; 255
    112e:	8f 4f       	sbci	r24, 0xFF	; 255
    1130:	9f 4f       	sbci	r25, 0xFF	; 255
    1132:	08 95       	ret

00001134 <__floatunsisf>:
    1134:	e8 94       	clt
    1136:	09 c0       	rjmp	.+18     	; 0x114a <__floatsisf+0x12>

00001138 <__floatsisf>:
    1138:	97 fb       	bst	r25, 7
    113a:	3e f4       	brtc	.+14     	; 0x114a <__floatsisf+0x12>
    113c:	90 95       	com	r25
    113e:	80 95       	com	r24
    1140:	70 95       	com	r23
    1142:	61 95       	neg	r22
    1144:	7f 4f       	sbci	r23, 0xFF	; 255
    1146:	8f 4f       	sbci	r24, 0xFF	; 255
    1148:	9f 4f       	sbci	r25, 0xFF	; 255
    114a:	99 23       	and	r25, r25
    114c:	a9 f0       	breq	.+42     	; 0x1178 <__floatsisf+0x40>
    114e:	f9 2f       	mov	r31, r25
    1150:	96 e9       	ldi	r25, 0x96	; 150
    1152:	bb 27       	eor	r27, r27
    1154:	93 95       	inc	r25
    1156:	f6 95       	lsr	r31
    1158:	87 95       	ror	r24
    115a:	77 95       	ror	r23
    115c:	67 95       	ror	r22
    115e:	b7 95       	ror	r27
    1160:	f1 11       	cpse	r31, r1
    1162:	f8 cf       	rjmp	.-16     	; 0x1154 <__floatsisf+0x1c>
    1164:	fa f4       	brpl	.+62     	; 0x11a4 <__floatsisf+0x6c>
    1166:	bb 0f       	add	r27, r27
    1168:	11 f4       	brne	.+4      	; 0x116e <__floatsisf+0x36>
    116a:	60 ff       	sbrs	r22, 0
    116c:	1b c0       	rjmp	.+54     	; 0x11a4 <__floatsisf+0x6c>
    116e:	6f 5f       	subi	r22, 0xFF	; 255
    1170:	7f 4f       	sbci	r23, 0xFF	; 255
    1172:	8f 4f       	sbci	r24, 0xFF	; 255
    1174:	9f 4f       	sbci	r25, 0xFF	; 255
    1176:	16 c0       	rjmp	.+44     	; 0x11a4 <__floatsisf+0x6c>
    1178:	88 23       	and	r24, r24
    117a:	11 f0       	breq	.+4      	; 0x1180 <__floatsisf+0x48>
    117c:	96 e9       	ldi	r25, 0x96	; 150
    117e:	11 c0       	rjmp	.+34     	; 0x11a2 <__floatsisf+0x6a>
    1180:	77 23       	and	r23, r23
    1182:	21 f0       	breq	.+8      	; 0x118c <__floatsisf+0x54>
    1184:	9e e8       	ldi	r25, 0x8E	; 142
    1186:	87 2f       	mov	r24, r23
    1188:	76 2f       	mov	r23, r22
    118a:	05 c0       	rjmp	.+10     	; 0x1196 <__floatsisf+0x5e>
    118c:	66 23       	and	r22, r22
    118e:	71 f0       	breq	.+28     	; 0x11ac <__floatsisf+0x74>
    1190:	96 e8       	ldi	r25, 0x86	; 134
    1192:	86 2f       	mov	r24, r22
    1194:	70 e0       	ldi	r23, 0x00	; 0
    1196:	60 e0       	ldi	r22, 0x00	; 0
    1198:	2a f0       	brmi	.+10     	; 0x11a4 <__floatsisf+0x6c>
    119a:	9a 95       	dec	r25
    119c:	66 0f       	add	r22, r22
    119e:	77 1f       	adc	r23, r23
    11a0:	88 1f       	adc	r24, r24
    11a2:	da f7       	brpl	.-10     	; 0x119a <__floatsisf+0x62>
    11a4:	88 0f       	add	r24, r24
    11a6:	96 95       	lsr	r25
    11a8:	87 95       	ror	r24
    11aa:	97 f9       	bld	r25, 7
    11ac:	08 95       	ret

000011ae <__fp_inf>:
    11ae:	97 f9       	bld	r25, 7
    11b0:	9f 67       	ori	r25, 0x7F	; 127
    11b2:	80 e8       	ldi	r24, 0x80	; 128
    11b4:	70 e0       	ldi	r23, 0x00	; 0
    11b6:	60 e0       	ldi	r22, 0x00	; 0
    11b8:	08 95       	ret

000011ba <__fp_nan>:
    11ba:	9f ef       	ldi	r25, 0xFF	; 255
    11bc:	80 ec       	ldi	r24, 0xC0	; 192
    11be:	08 95       	ret

000011c0 <__fp_pscA>:
    11c0:	00 24       	eor	r0, r0
    11c2:	0a 94       	dec	r0
    11c4:	16 16       	cp	r1, r22
    11c6:	17 06       	cpc	r1, r23
    11c8:	18 06       	cpc	r1, r24
    11ca:	09 06       	cpc	r0, r25
    11cc:	08 95       	ret

000011ce <__fp_pscB>:
    11ce:	00 24       	eor	r0, r0
    11d0:	0a 94       	dec	r0
    11d2:	12 16       	cp	r1, r18
    11d4:	13 06       	cpc	r1, r19
    11d6:	14 06       	cpc	r1, r20
    11d8:	05 06       	cpc	r0, r21
    11da:	08 95       	ret

000011dc <__fp_round>:
    11dc:	09 2e       	mov	r0, r25
    11de:	03 94       	inc	r0
    11e0:	00 0c       	add	r0, r0
    11e2:	11 f4       	brne	.+4      	; 0x11e8 <__fp_round+0xc>
    11e4:	88 23       	and	r24, r24
    11e6:	52 f0       	brmi	.+20     	; 0x11fc <__fp_round+0x20>
    11e8:	bb 0f       	add	r27, r27
    11ea:	40 f4       	brcc	.+16     	; 0x11fc <__fp_round+0x20>
    11ec:	bf 2b       	or	r27, r31
    11ee:	11 f4       	brne	.+4      	; 0x11f4 <__fp_round+0x18>
    11f0:	60 ff       	sbrs	r22, 0
    11f2:	04 c0       	rjmp	.+8      	; 0x11fc <__fp_round+0x20>
    11f4:	6f 5f       	subi	r22, 0xFF	; 255
    11f6:	7f 4f       	sbci	r23, 0xFF	; 255
    11f8:	8f 4f       	sbci	r24, 0xFF	; 255
    11fa:	9f 4f       	sbci	r25, 0xFF	; 255
    11fc:	08 95       	ret

000011fe <__fp_split3>:
    11fe:	57 fd       	sbrc	r21, 7
    1200:	90 58       	subi	r25, 0x80	; 128
    1202:	44 0f       	add	r20, r20
    1204:	55 1f       	adc	r21, r21
    1206:	59 f0       	breq	.+22     	; 0x121e <__fp_splitA+0x10>
    1208:	5f 3f       	cpi	r21, 0xFF	; 255
    120a:	71 f0       	breq	.+28     	; 0x1228 <__fp_splitA+0x1a>
    120c:	47 95       	ror	r20

0000120e <__fp_splitA>:
    120e:	88 0f       	add	r24, r24
    1210:	97 fb       	bst	r25, 7
    1212:	99 1f       	adc	r25, r25
    1214:	61 f0       	breq	.+24     	; 0x122e <__fp_splitA+0x20>
    1216:	9f 3f       	cpi	r25, 0xFF	; 255
    1218:	79 f0       	breq	.+30     	; 0x1238 <__fp_splitA+0x2a>
    121a:	87 95       	ror	r24
    121c:	08 95       	ret
    121e:	12 16       	cp	r1, r18
    1220:	13 06       	cpc	r1, r19
    1222:	14 06       	cpc	r1, r20
    1224:	55 1f       	adc	r21, r21
    1226:	f2 cf       	rjmp	.-28     	; 0x120c <__fp_split3+0xe>
    1228:	46 95       	lsr	r20
    122a:	f1 df       	rcall	.-30     	; 0x120e <__fp_splitA>
    122c:	08 c0       	rjmp	.+16     	; 0x123e <__fp_splitA+0x30>
    122e:	16 16       	cp	r1, r22
    1230:	17 06       	cpc	r1, r23
    1232:	18 06       	cpc	r1, r24
    1234:	99 1f       	adc	r25, r25
    1236:	f1 cf       	rjmp	.-30     	; 0x121a <__fp_splitA+0xc>
    1238:	86 95       	lsr	r24
    123a:	71 05       	cpc	r23, r1
    123c:	61 05       	cpc	r22, r1
    123e:	08 94       	sec
    1240:	08 95       	ret

00001242 <__fp_zero>:
    1242:	e8 94       	clt

00001244 <__fp_szero>:
    1244:	bb 27       	eor	r27, r27
    1246:	66 27       	eor	r22, r22
    1248:	77 27       	eor	r23, r23
    124a:	cb 01       	movw	r24, r22
    124c:	97 f9       	bld	r25, 7
    124e:	08 95       	ret

00001250 <__divmodsi4>:
    1250:	05 2e       	mov	r0, r21
    1252:	97 fb       	bst	r25, 7
    1254:	1e f4       	brtc	.+6      	; 0x125c <__divmodsi4+0xc>
    1256:	00 94       	com	r0
    1258:	0e 94 3f 09 	call	0x127e	; 0x127e <__negsi2>
    125c:	57 fd       	sbrc	r21, 7
    125e:	07 d0       	rcall	.+14     	; 0x126e <__divmodsi4_neg2>
    1260:	0e 94 84 09 	call	0x1308	; 0x1308 <__udivmodsi4>
    1264:	07 fc       	sbrc	r0, 7
    1266:	03 d0       	rcall	.+6      	; 0x126e <__divmodsi4_neg2>
    1268:	4e f4       	brtc	.+18     	; 0x127c <__divmodsi4_exit>
    126a:	0c 94 3f 09 	jmp	0x127e	; 0x127e <__negsi2>

0000126e <__divmodsi4_neg2>:
    126e:	50 95       	com	r21
    1270:	40 95       	com	r20
    1272:	30 95       	com	r19
    1274:	21 95       	neg	r18
    1276:	3f 4f       	sbci	r19, 0xFF	; 255
    1278:	4f 4f       	sbci	r20, 0xFF	; 255
    127a:	5f 4f       	sbci	r21, 0xFF	; 255

0000127c <__divmodsi4_exit>:
    127c:	08 95       	ret

0000127e <__negsi2>:
    127e:	90 95       	com	r25
    1280:	80 95       	com	r24
    1282:	70 95       	com	r23
    1284:	61 95       	neg	r22
    1286:	7f 4f       	sbci	r23, 0xFF	; 255
    1288:	8f 4f       	sbci	r24, 0xFF	; 255
    128a:	9f 4f       	sbci	r25, 0xFF	; 255
    128c:	08 95       	ret

0000128e <__tablejump2__>:
    128e:	ee 0f       	add	r30, r30
    1290:	ff 1f       	adc	r31, r31
    1292:	05 90       	lpm	r0, Z+
    1294:	f4 91       	lpm	r31, Z
    1296:	e0 2d       	mov	r30, r0
    1298:	09 94       	ijmp

0000129a <__prologue_saves__>:
    129a:	2f 92       	push	r2
    129c:	3f 92       	push	r3
    129e:	4f 92       	push	r4
    12a0:	5f 92       	push	r5
    12a2:	6f 92       	push	r6
    12a4:	7f 92       	push	r7
    12a6:	8f 92       	push	r8
    12a8:	9f 92       	push	r9
    12aa:	af 92       	push	r10
    12ac:	bf 92       	push	r11
    12ae:	cf 92       	push	r12
    12b0:	df 92       	push	r13
    12b2:	ef 92       	push	r14
    12b4:	ff 92       	push	r15
    12b6:	0f 93       	push	r16
    12b8:	1f 93       	push	r17
    12ba:	cf 93       	push	r28
    12bc:	df 93       	push	r29
    12be:	cd b7       	in	r28, 0x3d	; 61
    12c0:	de b7       	in	r29, 0x3e	; 62
    12c2:	ca 1b       	sub	r28, r26
    12c4:	db 0b       	sbc	r29, r27
    12c6:	0f b6       	in	r0, 0x3f	; 63
    12c8:	f8 94       	cli
    12ca:	de bf       	out	0x3e, r29	; 62
    12cc:	0f be       	out	0x3f, r0	; 63
    12ce:	cd bf       	out	0x3d, r28	; 61
    12d0:	09 94       	ijmp

000012d2 <__epilogue_restores__>:
    12d2:	2a 88       	ldd	r2, Y+18	; 0x12
    12d4:	39 88       	ldd	r3, Y+17	; 0x11
    12d6:	48 88       	ldd	r4, Y+16	; 0x10
    12d8:	5f 84       	ldd	r5, Y+15	; 0x0f
    12da:	6e 84       	ldd	r6, Y+14	; 0x0e
    12dc:	7d 84       	ldd	r7, Y+13	; 0x0d
    12de:	8c 84       	ldd	r8, Y+12	; 0x0c
    12e0:	9b 84       	ldd	r9, Y+11	; 0x0b
    12e2:	aa 84       	ldd	r10, Y+10	; 0x0a
    12e4:	b9 84       	ldd	r11, Y+9	; 0x09
    12e6:	c8 84       	ldd	r12, Y+8	; 0x08
    12e8:	df 80       	ldd	r13, Y+7	; 0x07
    12ea:	ee 80       	ldd	r14, Y+6	; 0x06
    12ec:	fd 80       	ldd	r15, Y+5	; 0x05
    12ee:	0c 81       	ldd	r16, Y+4	; 0x04
    12f0:	1b 81       	ldd	r17, Y+3	; 0x03
    12f2:	aa 81       	ldd	r26, Y+2	; 0x02
    12f4:	b9 81       	ldd	r27, Y+1	; 0x01
    12f6:	ce 0f       	add	r28, r30
    12f8:	d1 1d       	adc	r29, r1
    12fa:	0f b6       	in	r0, 0x3f	; 63
    12fc:	f8 94       	cli
    12fe:	de bf       	out	0x3e, r29	; 62
    1300:	0f be       	out	0x3f, r0	; 63
    1302:	cd bf       	out	0x3d, r28	; 61
    1304:	ed 01       	movw	r28, r26
    1306:	08 95       	ret

00001308 <__udivmodsi4>:
    1308:	a1 e2       	ldi	r26, 0x21	; 33
    130a:	1a 2e       	mov	r1, r26
    130c:	aa 1b       	sub	r26, r26
    130e:	bb 1b       	sub	r27, r27
    1310:	fd 01       	movw	r30, r26
    1312:	0d c0       	rjmp	.+26     	; 0x132e <__udivmodsi4_ep>

00001314 <__udivmodsi4_loop>:
    1314:	aa 1f       	adc	r26, r26
    1316:	bb 1f       	adc	r27, r27
    1318:	ee 1f       	adc	r30, r30
    131a:	ff 1f       	adc	r31, r31
    131c:	a2 17       	cp	r26, r18
    131e:	b3 07       	cpc	r27, r19
    1320:	e4 07       	cpc	r30, r20
    1322:	f5 07       	cpc	r31, r21
    1324:	20 f0       	brcs	.+8      	; 0x132e <__udivmodsi4_ep>
    1326:	a2 1b       	sub	r26, r18
    1328:	b3 0b       	sbc	r27, r19
    132a:	e4 0b       	sbc	r30, r20
    132c:	f5 0b       	sbc	r31, r21

0000132e <__udivmodsi4_ep>:
    132e:	66 1f       	adc	r22, r22
    1330:	77 1f       	adc	r23, r23
    1332:	88 1f       	adc	r24, r24
    1334:	99 1f       	adc	r25, r25
    1336:	1a 94       	dec	r1
    1338:	69 f7       	brne	.-38     	; 0x1314 <__udivmodsi4_loop>
    133a:	60 95       	com	r22
    133c:	70 95       	com	r23
    133e:	80 95       	com	r24
    1340:	90 95       	com	r25
    1342:	9b 01       	movw	r18, r22
    1344:	ac 01       	movw	r20, r24
    1346:	bd 01       	movw	r22, r26
    1348:	cf 01       	movw	r24, r30
    134a:	08 95       	ret

0000134c <__ftoa_engine>:
    134c:	28 30       	cpi	r18, 0x08	; 8
    134e:	08 f0       	brcs	.+2      	; 0x1352 <__ftoa_engine+0x6>
    1350:	27 e0       	ldi	r18, 0x07	; 7
    1352:	33 27       	eor	r19, r19
    1354:	da 01       	movw	r26, r20
    1356:	99 0f       	add	r25, r25
    1358:	31 1d       	adc	r19, r1
    135a:	87 fd       	sbrc	r24, 7
    135c:	91 60       	ori	r25, 0x01	; 1
    135e:	00 96       	adiw	r24, 0x00	; 0
    1360:	61 05       	cpc	r22, r1
    1362:	71 05       	cpc	r23, r1
    1364:	39 f4       	brne	.+14     	; 0x1374 <__ftoa_engine+0x28>
    1366:	32 60       	ori	r19, 0x02	; 2
    1368:	2e 5f       	subi	r18, 0xFE	; 254
    136a:	3d 93       	st	X+, r19
    136c:	30 e3       	ldi	r19, 0x30	; 48
    136e:	2a 95       	dec	r18
    1370:	e1 f7       	brne	.-8      	; 0x136a <__ftoa_engine+0x1e>
    1372:	08 95       	ret
    1374:	9f 3f       	cpi	r25, 0xFF	; 255
    1376:	30 f0       	brcs	.+12     	; 0x1384 <__ftoa_engine+0x38>
    1378:	80 38       	cpi	r24, 0x80	; 128
    137a:	71 05       	cpc	r23, r1
    137c:	61 05       	cpc	r22, r1
    137e:	09 f0       	breq	.+2      	; 0x1382 <__ftoa_engine+0x36>
    1380:	3c 5f       	subi	r19, 0xFC	; 252
    1382:	3c 5f       	subi	r19, 0xFC	; 252
    1384:	3d 93       	st	X+, r19
    1386:	91 30       	cpi	r25, 0x01	; 1
    1388:	08 f0       	brcs	.+2      	; 0x138c <__ftoa_engine+0x40>
    138a:	80 68       	ori	r24, 0x80	; 128
    138c:	91 1d       	adc	r25, r1
    138e:	df 93       	push	r29
    1390:	cf 93       	push	r28
    1392:	1f 93       	push	r17
    1394:	0f 93       	push	r16
    1396:	ff 92       	push	r15
    1398:	ef 92       	push	r14
    139a:	19 2f       	mov	r17, r25
    139c:	98 7f       	andi	r25, 0xF8	; 248
    139e:	96 95       	lsr	r25
    13a0:	e9 2f       	mov	r30, r25
    13a2:	96 95       	lsr	r25
    13a4:	96 95       	lsr	r25
    13a6:	e9 0f       	add	r30, r25
    13a8:	ff 27       	eor	r31, r31
    13aa:	e2 53       	subi	r30, 0x32	; 50
    13ac:	ff 4f       	sbci	r31, 0xFF	; 255
    13ae:	99 27       	eor	r25, r25
    13b0:	33 27       	eor	r19, r19
    13b2:	ee 24       	eor	r14, r14
    13b4:	ff 24       	eor	r15, r15
    13b6:	a7 01       	movw	r20, r14
    13b8:	e7 01       	movw	r28, r14
    13ba:	05 90       	lpm	r0, Z+
    13bc:	08 94       	sec
    13be:	07 94       	ror	r0
    13c0:	28 f4       	brcc	.+10     	; 0x13cc <__ftoa_engine+0x80>
    13c2:	36 0f       	add	r19, r22
    13c4:	e7 1e       	adc	r14, r23
    13c6:	f8 1e       	adc	r15, r24
    13c8:	49 1f       	adc	r20, r25
    13ca:	51 1d       	adc	r21, r1
    13cc:	66 0f       	add	r22, r22
    13ce:	77 1f       	adc	r23, r23
    13d0:	88 1f       	adc	r24, r24
    13d2:	99 1f       	adc	r25, r25
    13d4:	06 94       	lsr	r0
    13d6:	a1 f7       	brne	.-24     	; 0x13c0 <__ftoa_engine+0x74>
    13d8:	05 90       	lpm	r0, Z+
    13da:	07 94       	ror	r0
    13dc:	28 f4       	brcc	.+10     	; 0x13e8 <__ftoa_engine+0x9c>
    13de:	e7 0e       	add	r14, r23
    13e0:	f8 1e       	adc	r15, r24
    13e2:	49 1f       	adc	r20, r25
    13e4:	56 1f       	adc	r21, r22
    13e6:	c1 1d       	adc	r28, r1
    13e8:	77 0f       	add	r23, r23
    13ea:	88 1f       	adc	r24, r24
    13ec:	99 1f       	adc	r25, r25
    13ee:	66 1f       	adc	r22, r22
    13f0:	06 94       	lsr	r0
    13f2:	a1 f7       	brne	.-24     	; 0x13dc <__ftoa_engine+0x90>
    13f4:	05 90       	lpm	r0, Z+
    13f6:	07 94       	ror	r0
    13f8:	28 f4       	brcc	.+10     	; 0x1404 <__ftoa_engine+0xb8>
    13fa:	f8 0e       	add	r15, r24
    13fc:	49 1f       	adc	r20, r25
    13fe:	56 1f       	adc	r21, r22
    1400:	c7 1f       	adc	r28, r23
    1402:	d1 1d       	adc	r29, r1
    1404:	88 0f       	add	r24, r24
    1406:	99 1f       	adc	r25, r25
    1408:	66 1f       	adc	r22, r22
    140a:	77 1f       	adc	r23, r23
    140c:	06 94       	lsr	r0
    140e:	a1 f7       	brne	.-24     	; 0x13f8 <__ftoa_engine+0xac>
    1410:	05 90       	lpm	r0, Z+
    1412:	07 94       	ror	r0
    1414:	20 f4       	brcc	.+8      	; 0x141e <__ftoa_engine+0xd2>
    1416:	49 0f       	add	r20, r25
    1418:	56 1f       	adc	r21, r22
    141a:	c7 1f       	adc	r28, r23
    141c:	d8 1f       	adc	r29, r24
    141e:	99 0f       	add	r25, r25
    1420:	66 1f       	adc	r22, r22
    1422:	77 1f       	adc	r23, r23
    1424:	88 1f       	adc	r24, r24
    1426:	06 94       	lsr	r0
    1428:	a9 f7       	brne	.-22     	; 0x1414 <__ftoa_engine+0xc8>
    142a:	84 91       	lpm	r24, Z
    142c:	10 95       	com	r17
    142e:	17 70       	andi	r17, 0x07	; 7
    1430:	41 f0       	breq	.+16     	; 0x1442 <__ftoa_engine+0xf6>
    1432:	d6 95       	lsr	r29
    1434:	c7 95       	ror	r28
    1436:	57 95       	ror	r21
    1438:	47 95       	ror	r20
    143a:	f7 94       	ror	r15
    143c:	e7 94       	ror	r14
    143e:	1a 95       	dec	r17
    1440:	c1 f7       	brne	.-16     	; 0x1432 <__ftoa_engine+0xe6>
    1442:	e4 e7       	ldi	r30, 0x74	; 116
    1444:	f0 e0       	ldi	r31, 0x00	; 0
    1446:	68 94       	set
    1448:	15 90       	lpm	r1, Z+
    144a:	15 91       	lpm	r17, Z+
    144c:	35 91       	lpm	r19, Z+
    144e:	65 91       	lpm	r22, Z+
    1450:	95 91       	lpm	r25, Z+
    1452:	05 90       	lpm	r0, Z+
    1454:	7f e2       	ldi	r23, 0x2F	; 47
    1456:	73 95       	inc	r23
    1458:	e1 18       	sub	r14, r1
    145a:	f1 0a       	sbc	r15, r17
    145c:	43 0b       	sbc	r20, r19
    145e:	56 0b       	sbc	r21, r22
    1460:	c9 0b       	sbc	r28, r25
    1462:	d0 09       	sbc	r29, r0
    1464:	c0 f7       	brcc	.-16     	; 0x1456 <__ftoa_engine+0x10a>
    1466:	e1 0c       	add	r14, r1
    1468:	f1 1e       	adc	r15, r17
    146a:	43 1f       	adc	r20, r19
    146c:	56 1f       	adc	r21, r22
    146e:	c9 1f       	adc	r28, r25
    1470:	d0 1d       	adc	r29, r0
    1472:	7e f4       	brtc	.+30     	; 0x1492 <__ftoa_engine+0x146>
    1474:	70 33       	cpi	r23, 0x30	; 48
    1476:	11 f4       	brne	.+4      	; 0x147c <__ftoa_engine+0x130>
    1478:	8a 95       	dec	r24
    147a:	e6 cf       	rjmp	.-52     	; 0x1448 <__ftoa_engine+0xfc>
    147c:	e8 94       	clt
    147e:	01 50       	subi	r16, 0x01	; 1
    1480:	30 f0       	brcs	.+12     	; 0x148e <__ftoa_engine+0x142>
    1482:	08 0f       	add	r16, r24
    1484:	0a f4       	brpl	.+2      	; 0x1488 <__ftoa_engine+0x13c>
    1486:	00 27       	eor	r16, r16
    1488:	02 17       	cp	r16, r18
    148a:	08 f4       	brcc	.+2      	; 0x148e <__ftoa_engine+0x142>
    148c:	20 2f       	mov	r18, r16
    148e:	23 95       	inc	r18
    1490:	02 2f       	mov	r16, r18
    1492:	7a 33       	cpi	r23, 0x3A	; 58
    1494:	28 f0       	brcs	.+10     	; 0x14a0 <__ftoa_engine+0x154>
    1496:	79 e3       	ldi	r23, 0x39	; 57
    1498:	7d 93       	st	X+, r23
    149a:	2a 95       	dec	r18
    149c:	e9 f7       	brne	.-6      	; 0x1498 <__ftoa_engine+0x14c>
    149e:	10 c0       	rjmp	.+32     	; 0x14c0 <__ftoa_engine+0x174>
    14a0:	7d 93       	st	X+, r23
    14a2:	2a 95       	dec	r18
    14a4:	89 f6       	brne	.-94     	; 0x1448 <__ftoa_engine+0xfc>
    14a6:	06 94       	lsr	r0
    14a8:	97 95       	ror	r25
    14aa:	67 95       	ror	r22
    14ac:	37 95       	ror	r19
    14ae:	17 95       	ror	r17
    14b0:	17 94       	ror	r1
    14b2:	e1 18       	sub	r14, r1
    14b4:	f1 0a       	sbc	r15, r17
    14b6:	43 0b       	sbc	r20, r19
    14b8:	56 0b       	sbc	r21, r22
    14ba:	c9 0b       	sbc	r28, r25
    14bc:	d0 09       	sbc	r29, r0
    14be:	98 f0       	brcs	.+38     	; 0x14e6 <__ftoa_engine+0x19a>
    14c0:	23 95       	inc	r18
    14c2:	7e 91       	ld	r23, -X
    14c4:	73 95       	inc	r23
    14c6:	7a 33       	cpi	r23, 0x3A	; 58
    14c8:	08 f0       	brcs	.+2      	; 0x14cc <__ftoa_engine+0x180>
    14ca:	70 e3       	ldi	r23, 0x30	; 48
    14cc:	7c 93       	st	X, r23
    14ce:	20 13       	cpse	r18, r16
    14d0:	b8 f7       	brcc	.-18     	; 0x14c0 <__ftoa_engine+0x174>
    14d2:	7e 91       	ld	r23, -X
    14d4:	70 61       	ori	r23, 0x10	; 16
    14d6:	7d 93       	st	X+, r23
    14d8:	30 f0       	brcs	.+12     	; 0x14e6 <__ftoa_engine+0x19a>
    14da:	83 95       	inc	r24
    14dc:	71 e3       	ldi	r23, 0x31	; 49
    14de:	7d 93       	st	X+, r23
    14e0:	70 e3       	ldi	r23, 0x30	; 48
    14e2:	2a 95       	dec	r18
    14e4:	e1 f7       	brne	.-8      	; 0x14de <__ftoa_engine+0x192>
    14e6:	11 24       	eor	r1, r1
    14e8:	ef 90       	pop	r14
    14ea:	ff 90       	pop	r15
    14ec:	0f 91       	pop	r16
    14ee:	1f 91       	pop	r17
    14f0:	cf 91       	pop	r28
    14f2:	df 91       	pop	r29
    14f4:	99 27       	eor	r25, r25
    14f6:	87 fd       	sbrc	r24, 7
    14f8:	90 95       	com	r25
    14fa:	08 95       	ret

000014fc <strnlen_P>:
    14fc:	fc 01       	movw	r30, r24
    14fe:	05 90       	lpm	r0, Z+
    1500:	61 50       	subi	r22, 0x01	; 1
    1502:	70 40       	sbci	r23, 0x00	; 0
    1504:	01 10       	cpse	r0, r1
    1506:	d8 f7       	brcc	.-10     	; 0x14fe <strnlen_P+0x2>
    1508:	80 95       	com	r24
    150a:	90 95       	com	r25
    150c:	8e 0f       	add	r24, r30
    150e:	9f 1f       	adc	r25, r31
    1510:	08 95       	ret

00001512 <strnlen>:
    1512:	fc 01       	movw	r30, r24
    1514:	61 50       	subi	r22, 0x01	; 1
    1516:	70 40       	sbci	r23, 0x00	; 0
    1518:	01 90       	ld	r0, Z+
    151a:	01 10       	cpse	r0, r1
    151c:	d8 f7       	brcc	.-10     	; 0x1514 <strnlen+0x2>
    151e:	80 95       	com	r24
    1520:	90 95       	com	r25
    1522:	8e 0f       	add	r24, r30
    1524:	9f 1f       	adc	r25, r31
    1526:	08 95       	ret

00001528 <__itoa_ncheck>:
    1528:	bb 27       	eor	r27, r27
    152a:	4a 30       	cpi	r20, 0x0A	; 10
    152c:	31 f4       	brne	.+12     	; 0x153a <__itoa_ncheck+0x12>
    152e:	99 23       	and	r25, r25
    1530:	22 f4       	brpl	.+8      	; 0x153a <__itoa_ncheck+0x12>
    1532:	bd e2       	ldi	r27, 0x2D	; 45
    1534:	90 95       	com	r25
    1536:	81 95       	neg	r24
    1538:	9f 4f       	sbci	r25, 0xFF	; 255
    153a:	0c 94 a0 0a 	jmp	0x1540	; 0x1540 <__utoa_common>

0000153e <__utoa_ncheck>:
    153e:	bb 27       	eor	r27, r27

00001540 <__utoa_common>:
    1540:	fb 01       	movw	r30, r22
    1542:	55 27       	eor	r21, r21
    1544:	aa 27       	eor	r26, r26
    1546:	88 0f       	add	r24, r24
    1548:	99 1f       	adc	r25, r25
    154a:	aa 1f       	adc	r26, r26
    154c:	a4 17       	cp	r26, r20
    154e:	10 f0       	brcs	.+4      	; 0x1554 <__utoa_common+0x14>
    1550:	a4 1b       	sub	r26, r20
    1552:	83 95       	inc	r24
    1554:	50 51       	subi	r21, 0x10	; 16
    1556:	b9 f7       	brne	.-18     	; 0x1546 <__utoa_common+0x6>
    1558:	a0 5d       	subi	r26, 0xD0	; 208
    155a:	aa 33       	cpi	r26, 0x3A	; 58
    155c:	08 f0       	brcs	.+2      	; 0x1560 <__utoa_common+0x20>
    155e:	a9 5d       	subi	r26, 0xD9	; 217
    1560:	a1 93       	st	Z+, r26
    1562:	00 97       	sbiw	r24, 0x00	; 0
    1564:	79 f7       	brne	.-34     	; 0x1544 <__utoa_common+0x4>
    1566:	b1 11       	cpse	r27, r1
    1568:	b1 93       	st	Z+, r27
    156a:	11 92       	st	Z+, r1
    156c:	cb 01       	movw	r24, r22
    156e:	0c 94 53 0b 	jmp	0x16a6	; 0x16a6 <strrev>

00001572 <fputc>:
    1572:	0f 93       	push	r16
    1574:	1f 93       	push	r17
    1576:	cf 93       	push	r28
    1578:	df 93       	push	r29
    157a:	fb 01       	movw	r30, r22
    157c:	23 81       	ldd	r18, Z+3	; 0x03
    157e:	21 fd       	sbrc	r18, 1
    1580:	03 c0       	rjmp	.+6      	; 0x1588 <fputc+0x16>
    1582:	8f ef       	ldi	r24, 0xFF	; 255
    1584:	9f ef       	ldi	r25, 0xFF	; 255
    1586:	2c c0       	rjmp	.+88     	; 0x15e0 <fputc+0x6e>
    1588:	22 ff       	sbrs	r18, 2
    158a:	16 c0       	rjmp	.+44     	; 0x15b8 <fputc+0x46>
    158c:	46 81       	ldd	r20, Z+6	; 0x06
    158e:	57 81       	ldd	r21, Z+7	; 0x07
    1590:	24 81       	ldd	r18, Z+4	; 0x04
    1592:	35 81       	ldd	r19, Z+5	; 0x05
    1594:	42 17       	cp	r20, r18
    1596:	53 07       	cpc	r21, r19
    1598:	44 f4       	brge	.+16     	; 0x15aa <fputc+0x38>
    159a:	a0 81       	ld	r26, Z
    159c:	b1 81       	ldd	r27, Z+1	; 0x01
    159e:	9d 01       	movw	r18, r26
    15a0:	2f 5f       	subi	r18, 0xFF	; 255
    15a2:	3f 4f       	sbci	r19, 0xFF	; 255
    15a4:	31 83       	std	Z+1, r19	; 0x01
    15a6:	20 83       	st	Z, r18
    15a8:	8c 93       	st	X, r24
    15aa:	26 81       	ldd	r18, Z+6	; 0x06
    15ac:	37 81       	ldd	r19, Z+7	; 0x07
    15ae:	2f 5f       	subi	r18, 0xFF	; 255
    15b0:	3f 4f       	sbci	r19, 0xFF	; 255
    15b2:	37 83       	std	Z+7, r19	; 0x07
    15b4:	26 83       	std	Z+6, r18	; 0x06
    15b6:	14 c0       	rjmp	.+40     	; 0x15e0 <fputc+0x6e>
    15b8:	8b 01       	movw	r16, r22
    15ba:	ec 01       	movw	r28, r24
    15bc:	fb 01       	movw	r30, r22
    15be:	00 84       	ldd	r0, Z+8	; 0x08
    15c0:	f1 85       	ldd	r31, Z+9	; 0x09
    15c2:	e0 2d       	mov	r30, r0
    15c4:	09 95       	icall
    15c6:	89 2b       	or	r24, r25
    15c8:	e1 f6       	brne	.-72     	; 0x1582 <fputc+0x10>
    15ca:	d8 01       	movw	r26, r16
    15cc:	16 96       	adiw	r26, 0x06	; 6
    15ce:	8d 91       	ld	r24, X+
    15d0:	9c 91       	ld	r25, X
    15d2:	17 97       	sbiw	r26, 0x07	; 7
    15d4:	01 96       	adiw	r24, 0x01	; 1
    15d6:	17 96       	adiw	r26, 0x07	; 7
    15d8:	9c 93       	st	X, r25
    15da:	8e 93       	st	-X, r24
    15dc:	16 97       	sbiw	r26, 0x06	; 6
    15de:	ce 01       	movw	r24, r28
    15e0:	df 91       	pop	r29
    15e2:	cf 91       	pop	r28
    15e4:	1f 91       	pop	r17
    15e6:	0f 91       	pop	r16
    15e8:	08 95       	ret

000015ea <__ultoa_invert>:
    15ea:	fa 01       	movw	r30, r20
    15ec:	aa 27       	eor	r26, r26
    15ee:	28 30       	cpi	r18, 0x08	; 8
    15f0:	51 f1       	breq	.+84     	; 0x1646 <__ultoa_invert+0x5c>
    15f2:	20 31       	cpi	r18, 0x10	; 16
    15f4:	81 f1       	breq	.+96     	; 0x1656 <__ultoa_invert+0x6c>
    15f6:	e8 94       	clt
    15f8:	6f 93       	push	r22
    15fa:	6e 7f       	andi	r22, 0xFE	; 254
    15fc:	6e 5f       	subi	r22, 0xFE	; 254
    15fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1600:	8f 4f       	sbci	r24, 0xFF	; 255
    1602:	9f 4f       	sbci	r25, 0xFF	; 255
    1604:	af 4f       	sbci	r26, 0xFF	; 255
    1606:	b1 e0       	ldi	r27, 0x01	; 1
    1608:	3e d0       	rcall	.+124    	; 0x1686 <__ultoa_invert+0x9c>
    160a:	b4 e0       	ldi	r27, 0x04	; 4
    160c:	3c d0       	rcall	.+120    	; 0x1686 <__ultoa_invert+0x9c>
    160e:	67 0f       	add	r22, r23
    1610:	78 1f       	adc	r23, r24
    1612:	89 1f       	adc	r24, r25
    1614:	9a 1f       	adc	r25, r26
    1616:	a1 1d       	adc	r26, r1
    1618:	68 0f       	add	r22, r24
    161a:	79 1f       	adc	r23, r25
    161c:	8a 1f       	adc	r24, r26
    161e:	91 1d       	adc	r25, r1
    1620:	a1 1d       	adc	r26, r1
    1622:	6a 0f       	add	r22, r26
    1624:	71 1d       	adc	r23, r1
    1626:	81 1d       	adc	r24, r1
    1628:	91 1d       	adc	r25, r1
    162a:	a1 1d       	adc	r26, r1
    162c:	20 d0       	rcall	.+64     	; 0x166e <__ultoa_invert+0x84>
    162e:	09 f4       	brne	.+2      	; 0x1632 <__ultoa_invert+0x48>
    1630:	68 94       	set
    1632:	3f 91       	pop	r19
    1634:	2a e0       	ldi	r18, 0x0A	; 10
    1636:	26 9f       	mul	r18, r22
    1638:	11 24       	eor	r1, r1
    163a:	30 19       	sub	r19, r0
    163c:	30 5d       	subi	r19, 0xD0	; 208
    163e:	31 93       	st	Z+, r19
    1640:	de f6       	brtc	.-74     	; 0x15f8 <__ultoa_invert+0xe>
    1642:	cf 01       	movw	r24, r30
    1644:	08 95       	ret
    1646:	46 2f       	mov	r20, r22
    1648:	47 70       	andi	r20, 0x07	; 7
    164a:	40 5d       	subi	r20, 0xD0	; 208
    164c:	41 93       	st	Z+, r20
    164e:	b3 e0       	ldi	r27, 0x03	; 3
    1650:	0f d0       	rcall	.+30     	; 0x1670 <__ultoa_invert+0x86>
    1652:	c9 f7       	brne	.-14     	; 0x1646 <__ultoa_invert+0x5c>
    1654:	f6 cf       	rjmp	.-20     	; 0x1642 <__ultoa_invert+0x58>
    1656:	46 2f       	mov	r20, r22
    1658:	4f 70       	andi	r20, 0x0F	; 15
    165a:	40 5d       	subi	r20, 0xD0	; 208
    165c:	4a 33       	cpi	r20, 0x3A	; 58
    165e:	18 f0       	brcs	.+6      	; 0x1666 <__ultoa_invert+0x7c>
    1660:	49 5d       	subi	r20, 0xD9	; 217
    1662:	31 fd       	sbrc	r19, 1
    1664:	40 52       	subi	r20, 0x20	; 32
    1666:	41 93       	st	Z+, r20
    1668:	02 d0       	rcall	.+4      	; 0x166e <__ultoa_invert+0x84>
    166a:	a9 f7       	brne	.-22     	; 0x1656 <__ultoa_invert+0x6c>
    166c:	ea cf       	rjmp	.-44     	; 0x1642 <__ultoa_invert+0x58>
    166e:	b4 e0       	ldi	r27, 0x04	; 4
    1670:	a6 95       	lsr	r26
    1672:	97 95       	ror	r25
    1674:	87 95       	ror	r24
    1676:	77 95       	ror	r23
    1678:	67 95       	ror	r22
    167a:	ba 95       	dec	r27
    167c:	c9 f7       	brne	.-14     	; 0x1670 <__ultoa_invert+0x86>
    167e:	00 97       	sbiw	r24, 0x00	; 0
    1680:	61 05       	cpc	r22, r1
    1682:	71 05       	cpc	r23, r1
    1684:	08 95       	ret
    1686:	9b 01       	movw	r18, r22
    1688:	ac 01       	movw	r20, r24
    168a:	0a 2e       	mov	r0, r26
    168c:	06 94       	lsr	r0
    168e:	57 95       	ror	r21
    1690:	47 95       	ror	r20
    1692:	37 95       	ror	r19
    1694:	27 95       	ror	r18
    1696:	ba 95       	dec	r27
    1698:	c9 f7       	brne	.-14     	; 0x168c <__ultoa_invert+0xa2>
    169a:	62 0f       	add	r22, r18
    169c:	73 1f       	adc	r23, r19
    169e:	84 1f       	adc	r24, r20
    16a0:	95 1f       	adc	r25, r21
    16a2:	a0 1d       	adc	r26, r0
    16a4:	08 95       	ret

000016a6 <strrev>:
    16a6:	dc 01       	movw	r26, r24
    16a8:	fc 01       	movw	r30, r24
    16aa:	67 2f       	mov	r22, r23
    16ac:	71 91       	ld	r23, Z+
    16ae:	77 23       	and	r23, r23
    16b0:	e1 f7       	brne	.-8      	; 0x16aa <strrev+0x4>
    16b2:	32 97       	sbiw	r30, 0x02	; 2
    16b4:	04 c0       	rjmp	.+8      	; 0x16be <strrev+0x18>
    16b6:	7c 91       	ld	r23, X
    16b8:	6d 93       	st	X+, r22
    16ba:	70 83       	st	Z, r23
    16bc:	62 91       	ld	r22, -Z
    16be:	ae 17       	cp	r26, r30
    16c0:	bf 07       	cpc	r27, r31
    16c2:	c8 f3       	brcs	.-14     	; 0x16b6 <strrev+0x10>
    16c4:	08 95       	ret

000016c6 <__do_global_dtors>:
    16c6:	10 e0       	ldi	r17, 0x00	; 0
    16c8:	c8 eb       	ldi	r28, 0xB8	; 184
    16ca:	d0 e0       	ldi	r29, 0x00	; 0
    16cc:	04 c0       	rjmp	.+8      	; 0x16d6 <__do_global_dtors+0x10>
    16ce:	fe 01       	movw	r30, r28
    16d0:	0e 94 47 09 	call	0x128e	; 0x128e <__tablejump2__>
    16d4:	21 96       	adiw	r28, 0x01	; 1
    16d6:	c9 3b       	cpi	r28, 0xB9	; 185
    16d8:	d1 07       	cpc	r29, r17
    16da:	c9 f7       	brne	.-14     	; 0x16ce <__do_global_dtors+0x8>
    16dc:	f8 94       	cli

000016de <__stop_program>:
    16de:	ff cf       	rjmp	.-2      	; 0x16de <__stop_program>
